<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook MathML Module V1.1b1//EN"
              "http://www.oasis-open.org/docbook/xml/mathml/1.1CR1/dbmathml.dtd">
<refentry id="glGetProgramStage">
    <refmeta>
        <refmetainfo>
            <copyright>
                <year>2010</year>
                <holder>Khronos Group.</holder>
            </copyright>
        </refmetainfo>
        <refentrytitle>glGetProgramStage</refentrytitle>
        <manvolnum>3G</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>glGetProgramStage</refname>
        <refpurpose>retrieve properties of a program object corresponding to a specified shader stage</refpurpose>
    </refnamediv>
    <refsynopsisdiv><title>C Specification</title>
        <funcsynopsis>
            <funcprototype>
                <funcdef>void <function>glGetProgramStageiv</function></funcdef>
                <paramdef>GLuint <parameter>program</parameter></paramdef>
                <paramdef>GLenum <parameter>shadertype</parameter></paramdef>
                <paramdef>GLenum <parameter>pname</parameter></paramdef>
                <paramdef>GLint *<parameter>values</parameter></paramdef>
            </funcprototype>
        </funcsynopsis>
    </refsynopsisdiv>
    <!-- eqn: ignoring delim $$ -->
    <refsect1 id="parameters"><title>Parameters</title>
        <variablelist>
        <varlistentry>
            <term><parameter>program</parameter></term>
            <listitem>
                <para>
                    Specifies the name of the program containing shader stage.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>shadertype</parameter></term>
            <listitem>
                <para>
                    Specifies the shader stage from which to query for the subroutine parameter. <parameter>shadertype</parameter>
                    must be one of <constant>GL_VERTEX_SHADER</constant>, <constant>GL_TESS_CONTROL_SHADER</constant>,
                    <constant>GL_TESS_EVALUATION_SHADER</constant>, <constant>GL_GEOMETRY_SHADER</constant> or
                    <constant>GL_FRAGMENT_SHADER</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>pname</parameter></term>
            <listitem>
                <para>
                    Specifies the parameter of the shader to query. <parameter>pname</parameter>
                    must be <constant>GL_ACTIVE_SUBROUTINE_UNIFORMS</constant>,
                    <constant>GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</constant>,
                    <constant>GL_ACTIVE_SUBROUTINES</constant>,
                    <constant>GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH</constant>,
                    or <constant>GL_ACTIVE_SUBROUTINE_MAX_LENGTH</constant>.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><parameter>values</parameter></term>
            <listitem>
                <para>
                    Specifies the address of a variable into which the queried value or values will be placed.
                </para>
            </listitem>
        </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id="description"><title>Description</title>
        <para>
            <function>glGetProgramStage</function> queries a parameter of a shader stage attached to a program object.
            <parameter>program</parameter> contains the name of the program to which the shader is attached. <parameter>shadertype</parameter>
            specifies the stage from which to query the parameter. <parameter>pname</parameter> specifies which parameter
            should be queried. The value or values of the parameter to be queried is returned in the variable whose address
            is given in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_ACTIVE_SUBROUTINE_UNIFORMS</constant>, the number
            of active subroutine variables in the stage is returned in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS</constant>,
            the number of active subroutine variable locations in the stage is returned in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_ACTIVE_SUBROUTINES</constant>,
            the number of active subroutines in the stage is returned in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH</constant>,
            the length of the longest subroutine uniform for the stage is returned in <parameter>values</parameter>.
        </para>
        <para>
            If <parameter>pname</parameter> is <constant>GL_ACTIVE_SUBROUTINE_MAX_LENGTH</constant>,
            the length of the longest subroutine name for the stage is returned in <parameter>values</parameter>. The
            returned name length includes space for the null-terminator.
        </para>
        <para>
            If there is no shader present of type <parameter>shadertype</parameter>, the returned value will be consistent
            with a shader containing no subroutines or subroutine uniforms.
        </para>
    </refsect1>
    <refsect1 id="errors"><title>Errors</title>
        <para>
            <constant>GL_INVALID_ENUM</constant> is generated if <parameter>shadertype</parameter> or <parameter>pname</parameter>
            is not one of the accepted values.
        </para>
        <para>
            <constant>GL_INVALID_VALUE</constant> is generated if <parameter>program</parameter> is not the name of an
            existing program object.
        </para>
    </refsect1>
    <refsect1 id="seealso"><title>See Also</title>
        <para>
            <citerefentry><refentrytitle>glGetProgram</refentrytitle></citerefentry>
        </para>
    </refsect1>
    <refsect1 id="Copyright"><title>Copyright</title>
        <para>
            Copyright <trademark class="copyright"></trademark> 2010 Khronos Group. 
            This material may be distributed subject to the terms and conditions set forth in 
            the Open Publication License, v 1.0, 8 June 1999.
            <ulink url="http://opencontent.org/openpub/">http://opencontent.org/openpub/</ulink>.
        </para>
    </refsect1>
</refentry>
