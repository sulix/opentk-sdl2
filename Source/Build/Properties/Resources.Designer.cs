//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenTK.Build.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OpenTK.Build.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Prebuild xmlns=&quot;http://dnpb.sourceforge.net/schemas/prebuild-1.7.xsd&quot;&gt;
        ///
        ///  &lt;Solution name=&quot;Generator&quot;&gt;
        ///
        ///    &lt;Configuration name=&quot;Debug&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;DEBUG;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;OptimizeCode&gt;false&lt;/OptimizeCode&gt;
        ///        &lt;DebugInformation&gt;true&lt;/DebugInformation&gt;
        ///      &lt;/Options&gt;
        ///    &lt;/Configuration&gt;
        ///
        ///    &lt;Configuration name=&quot;Release&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;Optim [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Generator {
            get {
                return ResourceManager.GetString("Generator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Prebuild xmlns=&quot;http://dnpb.sourceforge.net/schemas/prebuild-1.7.xsd&quot;&gt;
        ///
        ///  &lt;Solution name=&quot;OpenTK&quot;&gt;
        ///
        ///    &lt;Configuration name=&quot;Debug&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;DEBUG;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;OptimizeCode&gt;false&lt;/OptimizeCode&gt;
        ///        &lt;DebugInformation&gt;true&lt;/DebugInformation&gt;
        ///      &lt;/Options&gt;
        ///    &lt;/Configuration&gt;
        ///
        ///    &lt;Configuration name=&quot;Release&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;Optimize [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OpenTK {
            get {
                return ResourceManager.GetString("OpenTK", resourceCulture);
            }
        }
        
        internal static byte[] Prebuild {
            get {
                object obj = ResourceManager.GetObject("Prebuild", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BSD License
        ///Copyright (c)2004-2008
        ///
        ///See AUTHORS file for list of copyright holders
        ///
        ///Dave    Hudson        (jendave@yahoo.com),
        ///Matthew Holmes        (matthew@wildfiregames.com)
        ///Dan     Moorehead     (dan05a@gmail.com)
        ///Rob     Loach         (http://www.robloach.net)
        ///C.J.    Adams-Collier (cjac@colliertech.org)
        ///
        ///http://dnpb.sourceforge.net
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without
        ///modification, are permitted provided that the following conditions
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Prebuild_License {
            get {
                return ResourceManager.GetString("Prebuild_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Prebuild xmlns=&quot;http://dnpb.sourceforge.net/schemas/prebuild-1.7.xsd&quot;&gt;
        ///
        ///  &lt;Solution name=&quot;QuickStart&quot;&gt;
        ///
        ///    &lt;Configuration name=&quot;Debug&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;DEBUG;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;OptimizeCode&gt;false&lt;/OptimizeCode&gt;
        ///        &lt;DebugInformation&gt;true&lt;/DebugInformation&gt;
        ///      &lt;/Options&gt;
        ///    &lt;/Configuration&gt;
        ///
        ///    &lt;Configuration name=&quot;Release&quot;&gt;
        ///      &lt;Options&gt;
        ///        &lt;CompilerDefines&gt;TRACE;&lt;/CompilerDefines&gt;
        ///        &lt;Opti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QuickStart {
            get {
                return ResourceManager.GetString("QuickStart", resourceCulture);
            }
        }
    }
}
