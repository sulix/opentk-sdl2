namespace OpenTK.OpenGL
{
    public static partial class GL
    {
        public class Enums
        {
            public enum AttribMask
            {
                POLYGON_BIT = ((int)0x00000008),
                TRANSFORM_BIT = ((int)0x00001000),
                COLOR_BUFFER_BIT = ((int)0x00004000),
                LINE_BIT = ((int)0x00000004),
                POINT_BIT = ((int)0x00000002),
                EVAL_BIT = ((int)0x00010000),
                LIST_BIT = ((int)0x00020000),
                FOG_BIT = ((int)0x00000080),
                HINT_BIT = ((int)0x00008000),
                ENABLE_BIT = ((int)0x00002000),
                STENCIL_BUFFER_BIT = ((int)0x00000400),
                TEXTURE_BIT = ((int)0x00040000),
                ACCUM_BUFFER_BIT = ((int)0x00000200),
                LIGHTING_BIT = ((int)0x00000040),
                CURRENT_BIT = ((int)0x00000001),
                ALL_ATTRIB_BITS = unchecked((int)0xFFFFFFFF),
                DEPTH_BUFFER_BIT = ((int)0x00000100),
                POLYGON_STIPPLE_BIT = ((int)0x00000010),
                SCISSOR_BIT = ((int)0x00080000),
                VIEWPORT_BIT = ((int)0x00000800),
                PIXEL_MODE_BIT = ((int)0x00000020),
            }
            
            public enum ClearBufferMask
            {
                STENCIL_BUFFER_BIT = ((int)AttribMask.STENCIL_BUFFER_BIT),
                ACCUM_BUFFER_BIT = ((int)AttribMask.ACCUM_BUFFER_BIT),
                COLOR_BUFFER_BIT = ((int)AttribMask.COLOR_BUFFER_BIT),
                DEPTH_BUFFER_BIT = ((int)AttribMask.DEPTH_BUFFER_BIT),
            }
            
            public enum ClientAttribMask
            {
                CLIENT_PIXEL_STORE_BIT = ((int)0x00000001),
                CLIENT_ALL_ATTRIB_BITS = unchecked((int)0xFFFFFFFF),
                CLIENT_VERTEX_ARRAY_BIT = ((int)0x00000002),
            }
            
            public enum Boolean
            {
                TRUE = ((int)1),
                FALSE = ((int)0),
            }
            
            public enum BeginMode
            {
                QUAD_STRIP = ((int)0x0008),
                POLYGON = ((int)0x0009),
                LINES = ((int)0x0001),
                TRIANGLES = ((int)0x0004),
                TRIANGLE_STRIP = ((int)0x0005),
                LINE_LOOP = ((int)0x0002),
                LINE_STRIP = ((int)0x0003),
                QUADS = ((int)0x0007),
                TRIANGLE_FAN = ((int)0x0006),
                POINTS = ((int)0x0000),
            }
            
            public enum AccumOp
            {
                RETURN = ((int)0x0102),
                ADD = ((int)0x0104),
                LOAD = ((int)0x0101),
                ACCUM = ((int)0x0100),
                MULT = ((int)0x0103),
            }
            
            public enum AlphaFunction
            {
                NEVER = ((int)0x0200),
                GEQUAL = ((int)0x0206),
                GREATER = ((int)0x0204),
                ALWAYS = ((int)0x0207),
                LEQUAL = ((int)0x0203),
                NOTEQUAL = ((int)0x0205),
                EQUAL = ((int)0x0202),
                LESS = ((int)0x0201),
            }
            
            public enum BlendingFactorDest
            {
                ZERO = ((int)0),
                ONE_MINUS_SRC_ALPHA = ((int)0x0303),
                ONE_MINUS_DST_ALPHA = ((int)0x0305),
                CONSTANT_COLOR_EXT = ((int)EXT_blend_color.CONSTANT_COLOR_EXT),
                DST_ALPHA = ((int)0x0304),
                CONSTANT_ALPHA_EXT = ((int)EXT_blend_color.CONSTANT_ALPHA_EXT),
                ONE_MINUS_CONSTANT_COLOR_EXT = ((int)EXT_blend_color.ONE_MINUS_CONSTANT_COLOR_EXT),
                ONE_MINUS_CONSTANT_ALPHA_EXT = ((int)EXT_blend_color.ONE_MINUS_CONSTANT_ALPHA_EXT),
                SRC_ALPHA = ((int)0x0302),
                SRC_COLOR = ((int)0x0300),
                ONE_MINUS_SRC_COLOR = ((int)0x0301),
                ONE = ((int)1),
            }
            
            public enum BlendingFactorSrc
            {
                ZERO = ((int)BlendingFactorDest.ZERO),
                ONE_MINUS_SRC_ALPHA = ((int)BlendingFactorDest.ONE_MINUS_SRC_ALPHA),
                ONE_MINUS_DST_COLOR = ((int)0x0307),
                ONE_MINUS_CONSTANT_COLOR_EXT = ((int)EXT_blend_color.ONE_MINUS_CONSTANT_COLOR_EXT),
                CONSTANT_COLOR_EXT = ((int)EXT_blend_color.CONSTANT_COLOR_EXT),
                DST_ALPHA = ((int)BlendingFactorDest.DST_ALPHA),
                CONSTANT_ALPHA_EXT = ((int)EXT_blend_color.CONSTANT_ALPHA_EXT),
                SRC_ALPHA = ((int)BlendingFactorDest.SRC_ALPHA),
                SRC_ALPHA_SATURATE = ((int)0x0308),
                ONE_MINUS_CONSTANT_ALPHA_EXT = ((int)EXT_blend_color.ONE_MINUS_CONSTANT_ALPHA_EXT),
                ONE_MINUS_DST_ALPHA = ((int)BlendingFactorDest.ONE_MINUS_DST_ALPHA),
                DST_COLOR = ((int)0x0306),
                ONE = ((int)BlendingFactorDest.ONE),
            }
            
            public enum BlendEquationModeEXT
            {
                MAX_EXT = ((int)EXT_blend_minmax.MAX_EXT),
                LOGIC_OP = ((int)GetPName.LOGIC_OP),
                FUNC_ADD_EXT = ((int)EXT_blend_minmax.FUNC_ADD_EXT),
                FUNC_SUBTRACT_EXT = ((int)EXT_blend_subtract.FUNC_SUBTRACT_EXT),
                ALPHA_MAX_SGIX = ((int)SGIX_blend_alpha_minmax.ALPHA_MAX_SGIX),
                FUNC_REVERSE_SUBTRACT_EXT = ((int)EXT_blend_subtract.FUNC_REVERSE_SUBTRACT_EXT),
                ALPHA_MIN_SGIX = ((int)SGIX_blend_alpha_minmax.ALPHA_MIN_SGIX),
                MIN_EXT = ((int)EXT_blend_minmax.MIN_EXT),
            }
            
            public enum ColorMaterialFace
            {
                BACK = ((int)DrawBufferMode.BACK),
                FRONT_AND_BACK = ((int)DrawBufferMode.FRONT_AND_BACK),
                FRONT = ((int)DrawBufferMode.FRONT),
            }
            
            public enum ColorMaterialParameter
            {
                EMISSION = ((int)MaterialParameter.EMISSION),
                DIFFUSE = ((int)LightParameter.DIFFUSE),
                AMBIENT_AND_DIFFUSE = ((int)MaterialParameter.AMBIENT_AND_DIFFUSE),
                SPECULAR = ((int)LightParameter.SPECULAR),
                AMBIENT = ((int)LightParameter.AMBIENT),
            }
            
            public enum ColorPointerType
            {
                UNSIGNED_INT = ((int)DataType.UNSIGNED_INT),
                FLOAT = ((int)DataType.FLOAT),
                UNSIGNED_SHORT = ((int)DataType.UNSIGNED_SHORT),
                SHORT = ((int)DataType.SHORT),
                BYTE = ((int)DataType.BYTE),
                INT = ((int)DataType.INT),
                UNSIGNED_BYTE = ((int)DataType.UNSIGNED_BYTE),
                DOUBLE = ((int)DataType.DOUBLE),
            }
            
            public enum ColorTableParameterPNameSGI
            {
                COLOR_TABLE_SCALE_SGI = ((int)SGI_color_table.COLOR_TABLE_SCALE_SGI),
                COLOR_TABLE_BIAS_SGI = ((int)SGI_color_table.COLOR_TABLE_BIAS_SGI),
            }
            
            public enum ColorTableTargetSGI
            {
                TEXTURE_COLOR_TABLE_SGI = ((int)SGI_texture_color_table.TEXTURE_COLOR_TABLE_SGI),
                POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_COLOR_MATRIX_COLOR_TABLE_SGI),
                PROXY_TEXTURE_COLOR_TABLE_SGI = ((int)SGI_texture_color_table.PROXY_TEXTURE_COLOR_TABLE_SGI),
                COLOR_TABLE_SGI = ((int)SGI_color_table.COLOR_TABLE_SGI),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)SGI_color_table.PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI),
                PROXY_COLOR_TABLE_SGI = ((int)SGI_color_table.PROXY_COLOR_TABLE_SGI),
                PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)SGI_color_table.PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI),
                POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_CONVOLUTION_COLOR_TABLE_SGI),
            }
            
            public enum ConvolutionBorderModeEXT
            {
                REDUCE_EXT = ((int)EXT_convolution.REDUCE_EXT),
            }
            
            public enum ConvolutionParameterEXT
            {
                CONVOLUTION_FILTER_BIAS_EXT = ((int)EXT_convolution.CONVOLUTION_FILTER_BIAS_EXT),
                CONVOLUTION_BORDER_MODE_EXT = ((int)EXT_convolution.CONVOLUTION_BORDER_MODE_EXT),
                CONVOLUTION_FILTER_SCALE_EXT = ((int)EXT_convolution.CONVOLUTION_FILTER_SCALE_EXT),
            }
            
            public enum ConvolutionTargetEXT
            {
                CONVOLUTION_1D_EXT = ((int)EXT_convolution.CONVOLUTION_1D_EXT),
                CONVOLUTION_2D_EXT = ((int)EXT_convolution.CONVOLUTION_2D_EXT),
            }
            
            public enum CullFaceMode
            {
                BACK = ((int)DrawBufferMode.BACK),
                FRONT_AND_BACK = ((int)DrawBufferMode.FRONT_AND_BACK),
                FRONT = ((int)DrawBufferMode.FRONT),
            }
            
            public enum DepthFunction
            {
                NEVER = ((int)AlphaFunction.NEVER),
                GEQUAL = ((int)AlphaFunction.GEQUAL),
                GREATER = ((int)AlphaFunction.GREATER),
                ALWAYS = ((int)AlphaFunction.ALWAYS),
                LEQUAL = ((int)AlphaFunction.LEQUAL),
                NOTEQUAL = ((int)AlphaFunction.NOTEQUAL),
                EQUAL = ((int)AlphaFunction.EQUAL),
                LESS = ((int)AlphaFunction.LESS),
            }
            
            public enum DrawBufferMode
            {
                FRONT_RIGHT = ((int)0x0401),
                AUX3 = ((int)0x040C),
                AUX1 = ((int)0x040A),
                FRONT_AND_BACK = ((int)0x0408),
                LEFT = ((int)0x0406),
                NONE = ((int)0),
                RIGHT = ((int)0x0407),
                BACK_RIGHT = ((int)0x0403),
                AUX2 = ((int)0x040B),
                AUX0 = ((int)0x0409),
                FRONT_LEFT = ((int)0x0400),
                BACK = ((int)0x0405),
                FRONT = ((int)0x0404),
                BACK_LEFT = ((int)0x0402),
            }
            
            public enum EnableCap
            {
                MAP1_VERTEX_3 = ((int)GetPName.MAP1_VERTEX_3),
                MAP2_NORMAL = ((int)GetPName.MAP2_NORMAL),
                FRAGMENT_LIGHT6_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT6_SGIX),
                CLIP_PLANE4 = ((int)GetPName.CLIP_PLANE4),
                ASYNC_HISTOGRAM_SGIX = ((int)SGIX_async_histogram.ASYNC_HISTOGRAM_SGIX),
                FRAGMENT_LIGHT3_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT3_SGIX),
                HISTOGRAM_EXT = ((int)EXT_histogram.HISTOGRAM_EXT),
                LIGHT3 = ((int)GetPName.LIGHT3),
                POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_COLOR_MATRIX_COLOR_TABLE_SGI),
                CLIP_PLANE3 = ((int)GetPName.CLIP_PLANE3),
                TEXTURE_COORD_ARRAY = ((int)GetPName.TEXTURE_COORD_ARRAY),
                FOG_OFFSET_SGIX = ((int)SGIX_fog_offset.FOG_OFFSET_SGIX),
                CONVOLUTION_1D_EXT = ((int)EXT_convolution.CONVOLUTION_1D_EXT),
                ASYNC_READ_PIXELS_SGIX = ((int)SGIX_async_pixel.ASYNC_READ_PIXELS_SGIX),
                LIGHT4 = ((int)GetPName.LIGHT4),
                MAP2_INDEX = ((int)GetPName.MAP2_INDEX),
                MAP1_TEXTURE_COORD_1 = ((int)GetPName.MAP1_TEXTURE_COORD_1),
                POLYGON_OFFSET_POINT = ((int)GetPName.POLYGON_OFFSET_POINT),
                ASYNC_DRAW_PIXELS_SGIX = ((int)SGIX_async_pixel.ASYNC_DRAW_PIXELS_SGIX),
                TEXTURE_1D = ((int)GetPName.TEXTURE_1D),
                CONVOLUTION_2D_EXT = ((int)EXT_convolution.CONVOLUTION_2D_EXT),
                TEXTURE_2D = ((int)GetPName.TEXTURE_2D),
                MAP1_COLOR_4 = ((int)GetPName.MAP1_COLOR_4),
                INDEX_LOGIC_OP = ((int)GetPName.INDEX_LOGIC_OP),
                RESCALE_NORMAL_EXT = ((int)EXT_rescale_normal.RESCALE_NORMAL_EXT),
                FRAGMENT_LIGHT4_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT4_SGIX),
                SAMPLE_MASK_SGIS = ((int)SGIS_multisample.SAMPLE_MASK_SGIS),
                LINE_STIPPLE = ((int)GetPName.LINE_STIPPLE),
                POLYGON_OFFSET_FILL = ((int)GetPName.POLYGON_OFFSET_FILL),
                LIGHT0 = ((int)GetPName.LIGHT0),
                FRAGMENT_LIGHT5_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT5_SGIX),
                CLIP_PLANE2 = ((int)GetPName.CLIP_PLANE2),
                LIGHT5 = ((int)GetPName.LIGHT5),
                FRAGMENT_LIGHT1_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT1_SGIX),
                REFERENCE_PLANE_SGIX = ((int)SGIX_reference_plane.REFERENCE_PLANE_SGIX),
                SAMPLE_ALPHA_TO_MASK_SGIS = ((int)SGIS_multisample.SAMPLE_ALPHA_TO_MASK_SGIS),
                CLIP_PLANE1 = ((int)GetPName.CLIP_PLANE1),
                COLOR_LOGIC_OP = ((int)GetPName.COLOR_LOGIC_OP),
                FRAGMENT_LIGHT7_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT7_SGIX),
                ASYNC_TEX_IMAGE_SGIX = ((int)SGIX_async_pixel.ASYNC_TEX_IMAGE_SGIX),
                MAP1_TEXTURE_COORD_4 = ((int)GetPName.MAP1_TEXTURE_COORD_4),
                MAP2_TEXTURE_COORD_2 = ((int)GetPName.MAP2_TEXTURE_COORD_2),
                NORMAL_ARRAY = ((int)GetPName.NORMAL_ARRAY),
                FOG = ((int)GetPName.FOG),
                CALLIGRAPHIC_FRAGMENT_SGIX = ((int)SGIX_calligraphic_fragment.CALLIGRAPHIC_FRAGMENT_SGIX),
                POINT_SMOOTH = ((int)GetPName.POINT_SMOOTH),
                SCISSOR_TEST = ((int)GetPName.SCISSOR_TEST),
                INDEX_ARRAY = ((int)GetPName.INDEX_ARRAY),
                TEXTURE_GEN_S = ((int)GetPName.TEXTURE_GEN_S),
                TEXTURE_GEN_R = ((int)GetPName.TEXTURE_GEN_R),
                TEXTURE_3D_EXT = ((int)EXT_texture3D.TEXTURE_3D_EXT),
                NORMALIZE = ((int)GetPName.NORMALIZE),
                CULL_FACE = ((int)GetPName.CULL_FACE),
                LIGHT1 = ((int)GetPName.LIGHT1),
                MAP1_NORMAL = ((int)GetPName.MAP1_NORMAL),
                DEPTH_TEST = ((int)GetPName.DEPTH_TEST),
                FRAGMENT_LIGHTING_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHTING_SGIX),
                MINMAX_EXT = ((int)EXT_histogram.MINMAX_EXT),
                POLYGON_OFFSET_LINE = ((int)GetPName.POLYGON_OFFSET_LINE),
                COLOR_TABLE_SGI = ((int)SGI_color_table.COLOR_TABLE_SGI),
                MAP1_INDEX = ((int)GetPName.MAP1_INDEX),
                AUTO_NORMAL = ((int)GetPName.AUTO_NORMAL),
                POLYGON_SMOOTH = ((int)GetPName.POLYGON_SMOOTH),
                POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_CONVOLUTION_COLOR_TABLE_SGI),
                PIXEL_TEX_GEN_SGIX = ((int)SGIX_pixel_texture.PIXEL_TEX_GEN_SGIX),
                CLIP_PLANE0 = ((int)GetPName.CLIP_PLANE0),
                SHARED_TEXTURE_PALETTE_EXT = ((int)EXT_shared_texture_palette.SHARED_TEXTURE_PALETTE_EXT),
                POLYGON_STIPPLE = ((int)GetPName.POLYGON_STIPPLE),
                SAMPLE_ALPHA_TO_ONE_SGIS = ((int)SGIS_multisample.SAMPLE_ALPHA_TO_ONE_SGIS),
                MAP1_TEXTURE_COORD_3 = ((int)GetPName.MAP1_TEXTURE_COORD_3),
                MAP2_TEXTURE_COORD_3 = ((int)GetPName.MAP2_TEXTURE_COORD_3),
                IR_INSTRUMENT1_SGIX = ((int)SGIX_ir_instrument1.IR_INSTRUMENT1_SGIX),
                TEXTURE_4D_SGIS = ((int)SGIS_texture4D.TEXTURE_4D_SGIS),
                FRAGMENT_LIGHT2_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT2_SGIX),
                PIXEL_TEXTURE_SGIS = ((int)SGIS_pixel_texture.PIXEL_TEXTURE_SGIS),
                LIGHT6 = ((int)GetPName.LIGHT6),
                ALPHA_TEST = ((int)GetPName.ALPHA_TEST),
                STENCIL_TEST = ((int)GetPName.STENCIL_TEST),
                BLEND = ((int)GetPName.BLEND),
                MAP2_COLOR_4 = ((int)GetPName.MAP2_COLOR_4),
                FRAMEZOOM_SGIX = ((int)SGIX_framezoom.FRAMEZOOM_SGIX),
                FRAGMENT_LIGHT0_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT0_SGIX),
                LIGHTING = ((int)GetPName.LIGHTING),
                TEXTURE_COLOR_TABLE_SGI = ((int)SGI_texture_color_table.TEXTURE_COLOR_TABLE_SGI),
                CLIP_PLANE5 = ((int)GetPName.CLIP_PLANE5),
                LINE_SMOOTH = ((int)GetPName.LINE_SMOOTH),
                SEPARABLE_2D_EXT = ((int)EXT_convolution.SEPARABLE_2D_EXT),
                DITHER = ((int)GetPName.DITHER),
                INTERLACE_SGIX = ((int)SGIX_interlace.INTERLACE_SGIX),
                LIGHT2 = ((int)GetPName.LIGHT2),
                TEXTURE_GEN_Q = ((int)GetPName.TEXTURE_GEN_Q),
                EDGE_FLAG_ARRAY = ((int)GetPName.EDGE_FLAG_ARRAY),
                COLOR_ARRAY = ((int)GetPName.COLOR_ARRAY),
                TEXTURE_GEN_T = ((int)GetPName.TEXTURE_GEN_T),
                MAP2_VERTEX_4 = ((int)GetPName.MAP2_VERTEX_4),
                MAP1_TEXTURE_COORD_2 = ((int)GetPName.MAP1_TEXTURE_COORD_2),
                MAP2_TEXTURE_COORD_4 = ((int)GetPName.MAP2_TEXTURE_COORD_4),
                LIGHT7 = ((int)GetPName.LIGHT7),
                SPRITE_SGIX = ((int)SGIX_sprite.SPRITE_SGIX),
                FRAGMENT_COLOR_MATERIAL_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_COLOR_MATERIAL_SGIX),
                MAP2_VERTEX_3 = ((int)GetPName.MAP2_VERTEX_3),
                MAP2_TEXTURE_COORD_1 = ((int)GetPName.MAP2_TEXTURE_COORD_1),
                MAP1_VERTEX_4 = ((int)GetPName.MAP1_VERTEX_4),
                MULTISAMPLE_SGIS = ((int)SGIS_multisample.MULTISAMPLE_SGIS),
                VERTEX_ARRAY = ((int)GetPName.VERTEX_ARRAY),
                COLOR_MATERIAL = ((int)GetPName.COLOR_MATERIAL),
            }
            
            public enum ErrorCode
            {
                OUT_OF_MEMORY = ((int)0x0505),
                TEXTURE_TOO_LARGE_EXT = ((int)EXT_texture.TEXTURE_TOO_LARGE_EXT),
                STACK_OVERFLOW = ((int)0x0503),
                INVALID_ENUM = ((int)0x0500),
                INVALID_VALUE = ((int)0x0501),
                TABLE_TOO_LARGE_EXT = ((int)EXT_histogram.TABLE_TOO_LARGE_EXT),
                INVALID_OPERATION = ((int)0x0502),
                STACK_UNDERFLOW = ((int)0x0504),
                NO_ERROR = ((int)0),
            }
            
            public enum FeedbackType
            {
                GL_3D = ((int)0x0601),
                GL_3D_COLOR_TEXTURE = ((int)0x0603),
                GL_4D_COLOR_TEXTURE = ((int)0x0604),
                GL_2D = ((int)0x0600),
                GL_3D_COLOR = ((int)0x0602),
            }
            
            public enum FeedBackToken
            {
                BITMAP_TOKEN = ((int)0x0704),
                LINE_TOKEN = ((int)0x0702),
                PASS_THROUGH_TOKEN = ((int)0x0700),
                LINE_RESET_TOKEN = ((int)0x0707),
                POINT_TOKEN = ((int)0x0701),
                COPY_PIXEL_TOKEN = ((int)0x0706),
                DRAW_PIXEL_TOKEN = ((int)0x0705),
                POLYGON_TOKEN = ((int)0x0703),
            }
            
            public enum FfdMaskSGIX
            {
                GEOMETRY_DEFORMATION_BIT_SGIX = ((int)0x00000002),
                TEXTURE_DEFORMATION_BIT_SGIX = ((int)0x00000001),
            }
            
            public enum FfdTargetSGIX
            {
                GEOMETRY_DEFORMATION_SGIX = ((int)SGIX_polynomial_ffd.GEOMETRY_DEFORMATION_SGIX),
                TEXTURE_DEFORMATION_SGIX = ((int)SGIX_polynomial_ffd.TEXTURE_DEFORMATION_SGIX),
            }
            
            public enum FogMode
            {
                EXP2 = ((int)0x0801),
                EXP = ((int)0x0800),
                LINEAR = ((int)TextureMagFilter.LINEAR),
                FOG_FUNC_SGIS = ((int)SGIS_fog_function.FOG_FUNC_SGIS),
            }
            
            public enum FogParameter
            {
                FOG_END = ((int)GetPName.FOG_END),
                FOG_COLOR = ((int)GetPName.FOG_COLOR),
                FOG_DENSITY = ((int)GetPName.FOG_DENSITY),
                FOG_START = ((int)GetPName.FOG_START),
                FOG_OFFSET_VALUE_SGIX = ((int)SGIX_fog_offset.FOG_OFFSET_VALUE_SGIX),
                FOG_INDEX = ((int)GetPName.FOG_INDEX),
                FOG_MODE = ((int)GetPName.FOG_MODE),
            }
            
            public enum FragmentLightModelParameterSGIX
            {
                FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX),
                FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX),
                FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX),
                FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX),
            }
            
            public enum FrontFaceDirection
            {
                CCW = ((int)0x0901),
                CW = ((int)0x0900),
            }
            
            public enum GetColorTableParameterPNameSGI
            {
                COLOR_TABLE_BLUE_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_BLUE_SIZE_SGI),
                COLOR_TABLE_FORMAT_SGI = ((int)SGI_color_table.COLOR_TABLE_FORMAT_SGI),
                COLOR_TABLE_ALPHA_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_ALPHA_SIZE_SGI),
                COLOR_TABLE_INTENSITY_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_INTENSITY_SIZE_SGI),
                COLOR_TABLE_GREEN_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_GREEN_SIZE_SGI),
                COLOR_TABLE_LUMINANCE_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_LUMINANCE_SIZE_SGI),
                COLOR_TABLE_WIDTH_SGI = ((int)SGI_color_table.COLOR_TABLE_WIDTH_SGI),
                COLOR_TABLE_BIAS_SGI = ((int)SGI_color_table.COLOR_TABLE_BIAS_SGI),
                COLOR_TABLE_RED_SIZE_SGI = ((int)SGI_color_table.COLOR_TABLE_RED_SIZE_SGI),
                COLOR_TABLE_SCALE_SGI = ((int)SGI_color_table.COLOR_TABLE_SCALE_SGI),
            }
            
            public enum GetConvolutionParameter
            {
                MAX_CONVOLUTION_WIDTH_EXT = ((int)EXT_convolution.MAX_CONVOLUTION_WIDTH_EXT),
                CONVOLUTION_FILTER_SCALE_EXT = ((int)EXT_convolution.CONVOLUTION_FILTER_SCALE_EXT),
                CONVOLUTION_BORDER_MODE_EXT = ((int)EXT_convolution.CONVOLUTION_BORDER_MODE_EXT),
                CONVOLUTION_HEIGHT_EXT = ((int)EXT_convolution.CONVOLUTION_HEIGHT_EXT),
                CONVOLUTION_WIDTH_EXT = ((int)EXT_convolution.CONVOLUTION_WIDTH_EXT),
                MAX_CONVOLUTION_HEIGHT_EXT = ((int)EXT_convolution.MAX_CONVOLUTION_HEIGHT_EXT),
                CONVOLUTION_FILTER_BIAS_EXT = ((int)EXT_convolution.CONVOLUTION_FILTER_BIAS_EXT),
                CONVOLUTION_FORMAT_EXT = ((int)EXT_convolution.CONVOLUTION_FORMAT_EXT),
            }
            
            public enum GetHistogramParameterPNameEXT
            {
                HISTOGRAM_BLUE_SIZE_EXT = ((int)EXT_histogram.HISTOGRAM_BLUE_SIZE_EXT),
                HISTOGRAM_FORMAT_EXT = ((int)EXT_histogram.HISTOGRAM_FORMAT_EXT),
                HISTOGRAM_GREEN_SIZE_EXT = ((int)EXT_histogram.HISTOGRAM_GREEN_SIZE_EXT),
                HISTOGRAM_ALPHA_SIZE_EXT = ((int)EXT_histogram.HISTOGRAM_ALPHA_SIZE_EXT),
                HISTOGRAM_LUMINANCE_SIZE_EXT = ((int)EXT_histogram.HISTOGRAM_LUMINANCE_SIZE_EXT),
                HISTOGRAM_RED_SIZE_EXT = ((int)EXT_histogram.HISTOGRAM_RED_SIZE_EXT),
                HISTOGRAM_SINK_EXT = ((int)EXT_histogram.HISTOGRAM_SINK_EXT),
                HISTOGRAM_WIDTH_EXT = ((int)EXT_histogram.HISTOGRAM_WIDTH_EXT),
            }
            
            public enum GetMapQuery
            {
                ORDER = ((int)0x0A01),
                DOMAIN = ((int)0x0A02),
                COEFF = ((int)0x0A00),
            }
            
            public enum GetMinmaxParameterPNameEXT
            {
                MINMAX_SINK_EXT = ((int)EXT_histogram.MINMAX_SINK_EXT),
                MINMAX_FORMAT_EXT = ((int)EXT_histogram.MINMAX_FORMAT_EXT),
            }
            
            public enum GetPixelMap
            {
                PIXEL_MAP_B_TO_B = ((int)0x0C78),
                PIXEL_MAP_S_TO_S = ((int)0x0C71),
                PIXEL_MAP_R_TO_R = ((int)0x0C76),
                PIXEL_MAP_I_TO_B = ((int)0x0C74),
                PIXEL_MAP_I_TO_G = ((int)0x0C73),
                PIXEL_MAP_I_TO_A = ((int)0x0C75),
                PIXEL_MAP_A_TO_A = ((int)0x0C79),
                PIXEL_MAP_G_TO_G = ((int)0x0C77),
                PIXEL_MAP_I_TO_I = ((int)0x0C70),
                PIXEL_MAP_I_TO_R = ((int)0x0C72),
            }
            
            public enum GetPointervPName
            {
                FEEDBACK_BUFFER_POINTER = ((int)0x0DF0),
                EDGE_FLAG_ARRAY_POINTER = ((int)0x8093),
                TEXTURE_COORD_ARRAY_POINTER = ((int)0x8092),
                INDEX_ARRAY_POINTER = ((int)0x8091),
                INSTRUMENT_BUFFER_POINTER_SGIX = ((int)SGIX_instruments.INSTRUMENT_BUFFER_POINTER_SGIX),
                SELECTION_BUFFER_POINTER = ((int)0x0DF3),
                NORMAL_ARRAY_POINTER = ((int)0x808F),
                VERTEX_ARRAY_POINTER = ((int)0x808E),
                COLOR_ARRAY_POINTER = ((int)0x8090),
            }
            
            public enum GetPName
            {
                FRAGMENT_COLOR_MATERIAL_FACE_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_COLOR_MATERIAL_FACE_SGIX),
                POLYGON_MODE = ((int)0x0B40),
                STENCIL_FUNC = ((int)0x0B92),
                FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX),
                HISTOGRAM_EXT = ((int)EXT_histogram.HISTOGRAM_EXT),
                CULL_FACE_MODE = ((int)0x0B45),
                PACK_RESAMPLE_SGIX = ((int)SGIX_resample.PACK_RESAMPLE_SGIX),
                POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_BIAS_RANGE_SGIX),
                CURRENT_RASTER_DISTANCE = ((int)0x0B09),
                PIXEL_TILE_BEST_ALIGNMENT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_BEST_ALIGNMENT_SGIX),
                POINT_SIZE = ((int)0x0B11),
                MODELVIEW_STACK_DEPTH = ((int)0x0BA3),
                TEXTURE_COLOR_TABLE_SGI = ((int)SGI_texture_color_table.TEXTURE_COLOR_TABLE_SGI),
                SAMPLE_ALPHA_TO_ONE_SGIS = ((int)SGIS_multisample.SAMPLE_ALPHA_TO_ONE_SGIS),
                PIXEL_MAP_I_TO_R_SIZE = ((int)0x0CB2),
                ALPHA_BIAS = ((int)0x0D1D),
                MAP1_GRID_DOMAIN = ((int)0x0DD0),
                PACK_CMYK_HINT_EXT = ((int)EXT_cmyka.PACK_CMYK_HINT_EXT),
                MAP2_VERTEX_4 = ((int)0x0DB8),
                POST_CONVOLUTION_ALPHA_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_ALPHA_SCALE_EXT),
                MAP2_VERTEX_3 = ((int)0x0DB7),
                DEPTH_RANGE = ((int)0x0B70),
                POST_COLOR_MATRIX_BLUE_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_BLUE_SCALE_SGI),
                MAX_ASYNC_DRAW_PIXELS_SGIX = ((int)SGIX_async_pixel.MAX_ASYNC_DRAW_PIXELS_SGIX),
                PIXEL_MAP_I_TO_I_SIZE = ((int)0x0CB0),
                UNPACK_SUBSAMPLE_RATE_SGIX = ((int)SGIX_subsample.UNPACK_SUBSAMPLE_RATE_SGIX),
                CURRENT_RASTER_INDEX = ((int)0x0B05),
                LIGHT3 = ((int)LightName.LIGHT3),
                UNPACK_IMAGE_HEIGHT_EXT = ((int)EXT_texture3D.UNPACK_IMAGE_HEIGHT_EXT),
                INDEX_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.INDEX_ARRAY_COUNT_EXT),
                LIST_INDEX = ((int)0x0B33),
                FOG_OFFSET_VALUE_SGIX = ((int)SGIX_fog_offset.FOG_OFFSET_VALUE_SGIX),
                DEPTH_CLEAR_VALUE = ((int)0x0B73),
                CLIENT_ATTRIB_STACK_DEPTH = ((int)0x0BB1),
                DETAIL_TEXTURE_2D_BINDING_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_2D_BINDING_SGIS),
                STENCIL_VALUE_MASK = ((int)0x0B93),
                GREEN_BITS = ((int)0x0D53),
                COLOR_MATRIX_STACK_DEPTH_SGI = ((int)SGI_color_matrix.COLOR_MATRIX_STACK_DEPTH_SGI),
                POST_CONVOLUTION_GREEN_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_GREEN_BIAS_EXT),
                FOG_END = ((int)0x0B64),
                CLIP_PLANE0 = ((int)ClipPlaneName.CLIP_PLANE0),
                MAX_MODELVIEW_STACK_DEPTH = ((int)0x0D36),
                LINE_SMOOTH_HINT = ((int)0x0C52),
                POLYGON_OFFSET_FACTOR = ((int)0x8038),
                MULTISAMPLE_SGIS = ((int)SGIS_multisample.MULTISAMPLE_SGIS),
                FOG_MODE = ((int)0x0B65),
                POST_CONVOLUTION_RED_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_RED_SCALE_EXT),
                PACK_IMAGE_DEPTH_SGIS = ((int)SGIS_texture4D.PACK_IMAGE_DEPTH_SGIS),
                LIST_BASE = ((int)0x0B32),
                TEXTURE_STACK_DEPTH = ((int)0x0BA5),
                SCISSOR_TEST = ((int)0x0C11),
                CURRENT_NORMAL = ((int)0x0B02),
                CALLIGRAPHIC_FRAGMENT_SGIX = ((int)SGIX_calligraphic_fragment.CALLIGRAPHIC_FRAGMENT_SGIX),
                PIXEL_MAP_B_TO_B_SIZE = ((int)0x0CB8),
                INTERLACE_SGIX = ((int)SGIX_interlace.INTERLACE_SGIX),
                EDGE_FLAG_ARRAY = ((int)0x8079),
                MAP1_COLOR_4 = ((int)0x0D90),
                TEXTURE_MATRIX = ((int)0x0BA8),
                LIGHT4 = ((int)LightName.LIGHT4),
                MAX_3D_TEXTURE_SIZE_EXT = ((int)EXT_texture3D.MAX_3D_TEXTURE_SIZE_EXT),
                PIXEL_MAP_G_TO_G_SIZE = ((int)0x0CB7),
                SELECTION_BUFFER_SIZE = ((int)0x0DF4),
                MAP2_TEXTURE_COORD_3 = ((int)0x0DB5),
                SPRITE_SGIX = ((int)SGIX_sprite.SPRITE_SGIX),
                ASYNC_READ_PIXELS_SGIX = ((int)SGIX_async_pixel.ASYNC_READ_PIXELS_SGIX),
                MAX_FRAGMENT_LIGHTS_SGIX = ((int)SGIX_fragment_lighting.MAX_FRAGMENT_LIGHTS_SGIX),
                PIXEL_TILE_GRID_WIDTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_WIDTH_SGIX),
                LIGHT_MODEL_AMBIENT = ((int)0x0B53),
                PIXEL_TEX_GEN_SGIX = ((int)SGIX_pixel_texture.PIXEL_TEX_GEN_SGIX),
                ZOOM_X = ((int)0x0D16),
                PACK_SKIP_VOLUMES_SGIS = ((int)SGIS_texture4D.PACK_SKIP_VOLUMES_SGIS),
                CLIP_PLANE3 = ((int)ClipPlaneName.CLIP_PLANE3),
                COLOR_MATERIAL_FACE = ((int)0x0B55),
                SHARED_TEXTURE_PALETTE_EXT = ((int)EXT_shared_texture_palette.SHARED_TEXTURE_PALETTE_EXT),
                SMOOTH_POINT_SIZE_RANGE = ((int)VERSION_1_2.SMOOTH_POINT_SIZE_RANGE),
                ATTRIB_STACK_DEPTH = ((int)0x0BB0),
                MAX_CLIENT_ATTRIB_STACK_DEPTH = ((int)0x0D3B),
                MAP1_GRID_SEGMENTS = ((int)0x0DD1),
                FRAGMENT_LIGHT0_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT0_SGIX),
                BLUE_SCALE = ((int)0x0D1A),
                POINT_SMOOTH = ((int)0x0B10),
                MAX_PROJECTION_STACK_DEPTH = ((int)0x0D38),
                INDEX_WRITEMASK = ((int)0x0C21),
                TEXTURE_BINDING_3D = ((int)0x806A),
                MAP1_TEXTURE_COORD_4 = ((int)0x0D96),
                TEXTURE_BINDING_1D = ((int)0x8068),
                UNPACK_SKIP_IMAGES_EXT = ((int)EXT_texture3D.UNPACK_SKIP_IMAGES_EXT),
                GENERATE_MIPMAP_HINT_SGIS = ((int)SGIS_generate_mipmap.GENERATE_MIPMAP_HINT_SGIS),
                POST_COLOR_MATRIX_RED_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_RED_BIAS_SGI),
                NORMAL_ARRAY_STRIDE = ((int)0x807F),
                FOG = ((int)0x0B60),
                CURRENT_RASTER_POSITION_VALID = ((int)0x0B08),
                COLOR_ARRAY_TYPE = ((int)0x8082),
                POST_COLOR_MATRIX_GREEN_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_GREEN_BIAS_SGI),
                CLIP_PLANE5 = ((int)ClipPlaneName.CLIP_PLANE5),
                PACK_SKIP_PIXELS = ((int)0x0D04),
                ALPHA_SCALE = ((int)0x0D1C),
                SAMPLE_MASK_SGIS = ((int)SGIS_multisample.SAMPLE_MASK_SGIS),
                STEREO = ((int)0x0C33),
                READ_BUFFER = ((int)0x0C02),
                MAX_4D_TEXTURE_SIZE_SGIS = ((int)SGIS_texture4D.MAX_4D_TEXTURE_SIZE_SGIS),
                RENDER_MODE = ((int)0x0C40),
                POINT_SIZE_RANGE = ((int)0x0B12),
                LIST_MODE = ((int)0x0B30),
                FOG_OFFSET_SGIX = ((int)SGIX_fog_offset.FOG_OFFSET_SGIX),
                LIGHTING = ((int)0x0B50),
                ACCUM_CLEAR_VALUE = ((int)0x0B80),
                UNPACK_RESAMPLE_SGIX = ((int)SGIX_resample.UNPACK_RESAMPLE_SGIX),
                TEXTURE_GEN_Q = ((int)0x0C63),
                MAP2_TEXTURE_COORD_2 = ((int)0x0DB4),
                TEXTURE_GEN_T = ((int)0x0C61),
                ALIASED_LINE_WIDTH_RANGE = ((int)VERSION_1_2.ALIASED_LINE_WIDTH_RANGE),
                RED_BITS = ((int)0x0D52),
                COLOR_TABLE_SGI = ((int)SGI_color_table.COLOR_TABLE_SGI),
                SCISSOR_BOX = ((int)0x0C10),
                PIXEL_TILE_GRID_DEPTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_DEPTH_SGIX),
                INDEX_ARRAY_TYPE = ((int)0x8085),
                LIGHT6 = ((int)LightName.LIGHT6),
                MAX_COLOR_MATRIX_STACK_DEPTH_SGI = ((int)SGI_color_matrix.MAX_COLOR_MATRIX_STACK_DEPTH_SGI),
                SAMPLES_SGIS = ((int)SGIS_multisample.SAMPLES_SGIS),
                BLEND = ((int)0x0BE2),
                STENCIL_CLEAR_VALUE = ((int)0x0B91),
                FEEDBACK_BUFFER_SIZE = ((int)0x0DF1),
                SEPARABLE_2D_EXT = ((int)EXT_convolution.SEPARABLE_2D_EXT),
                LINE_STIPPLE_REPEAT = ((int)0x0B26),
                INDEX_MODE = ((int)0x0C30),
                TEXTURE_COORD_ARRAY_STRIDE = ((int)0x808A),
                SMOOTH_LINE_WIDTH_RANGE = ((int)VERSION_1_2.SMOOTH_LINE_WIDTH_RANGE),
                STENCIL_REF = ((int)0x0B97),
                SMOOTH_POINT_SIZE_GRANULARITY = ((int)VERSION_1_2.SMOOTH_POINT_SIZE_GRANULARITY),
                BLUE_BITS = ((int)0x0D54),
                FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX),
                COLOR_LOGIC_OP = ((int)0x0BF2),
                POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_CONVOLUTION_COLOR_TABLE_SGI),
                BLEND_COLOR_EXT = ((int)EXT_blend_color.BLEND_COLOR_EXT),
                PIXEL_TEXTURE_SGIS = ((int)SGIS_pixel_texture.PIXEL_TEXTURE_SGIS),
                MAX_FRAMEZOOM_FACTOR_SGIX = ((int)SGIX_framezoom.MAX_FRAMEZOOM_FACTOR_SGIX),
                MATRIX_MODE = ((int)0x0BA0),
                DEPTH_FUNC = ((int)0x0B74),
                POST_COLOR_MATRIX_RED_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_RED_SCALE_SGI),
                PACK_SUBSAMPLE_RATE_SGIX = ((int)SGIX_subsample.PACK_SUBSAMPLE_RATE_SGIX),
                FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX),
                ACCUM_RED_BITS = ((int)0x0D58),
                POLYGON_OFFSET_UNITS = ((int)0x2A00),
                TEXTURE_2D = ((int)0x0DE1),
                EDGE_FLAG_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.EDGE_FLAG_ARRAY_COUNT_EXT),
                TEXTURE_COORD_ARRAY_TYPE = ((int)0x8089),
                CURRENT_INDEX = ((int)0x0B01),
                PACK_SWAP_BYTES = ((int)0x0D00),
                INDEX_ARRAY = ((int)0x8077),
                GREEN_BIAS = ((int)0x0D19),
                SAMPLE_MASK_INVERT_SGIS = ((int)SGIS_multisample.SAMPLE_MASK_INVERT_SGIS),
                AUTO_NORMAL = ((int)0x0D80),
                POINT_SIZE_GRANULARITY = ((int)0x0B13),
                POLYGON_SMOOTH = ((int)0x0B41),
                FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX),
                ALPHA_BITS = ((int)0x0D55),
                UNPACK_ALIGNMENT = ((int)0x0CF5),
                SAMPLE_PATTERN_SGIS = ((int)SGIS_multisample.SAMPLE_PATTERN_SGIS),
                INDEX_ARRAY_STRIDE = ((int)0x8086),
                POLYGON_OFFSET_BIAS_EXT = ((int)EXT_polygon_offset.POLYGON_OFFSET_BIAS_EXT),
                RED_SCALE = ((int)0x0D14),
                UNPACK_SKIP_ROWS = ((int)0x0CF3),
                INDEX_LOGIC_OP = ((int)0x0BF1),
                MAP2_COLOR_4 = ((int)0x0DB0),
                VERTEX_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.VERTEX_ARRAY_COUNT_EXT),
                MAP1_NORMAL = ((int)0x0D92),
                MAP1_TEXTURE_COORD_2 = ((int)0x0D94),
                PIXEL_MAP_I_TO_G_SIZE = ((int)0x0CB3),
                ACCUM_BLUE_BITS = ((int)0x0D5A),
                ASYNC_DRAW_PIXELS_SGIX = ((int)SGIX_async_pixel.ASYNC_DRAW_PIXELS_SGIX),
                COLOR_WRITEMASK = ((int)0x0C23),
                NAME_STACK_DEPTH = ((int)0x0D70),
                POST_CONVOLUTION_BLUE_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_BLUE_BIAS_EXT),
                MAX_NAME_STACK_DEPTH = ((int)0x0D37),
                CLIP_PLANE4 = ((int)ClipPlaneName.CLIP_PLANE4),
                FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX),
                PIXEL_MAP_I_TO_A_SIZE = ((int)0x0CB5),
                PACK_SKIP_IMAGES_EXT = ((int)EXT_texture3D.PACK_SKIP_IMAGES_EXT),
                LIGHT0 = ((int)LightName.LIGHT0),
                PIXEL_MAP_R_TO_R_SIZE = ((int)0x0CB6),
                FOG_HINT = ((int)0x0C54),
                PROJECTION_STACK_DEPTH = ((int)0x0BA4),
                PIXEL_TILE_CACHE_SIZE_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_CACHE_SIZE_SGIX),
                RESCALE_NORMAL_EXT = ((int)EXT_rescale_normal.RESCALE_NORMAL_EXT),
                MAP2_GRID_DOMAIN = ((int)0x0DD2),
                ALPHA_TEST_FUNC = ((int)0x0BC1),
                MAX_CLIPMAP_DEPTH_SGIX = ((int)SGIX_clipmap.MAX_CLIPMAP_DEPTH_SGIX),
                UNPACK_SKIP_PIXELS = ((int)0x0CF4),
                NORMAL_ARRAY_TYPE = ((int)0x807E),
                FOG_FUNC_POINTS_SGIS = ((int)SGIS_fog_function.FOG_FUNC_POINTS_SGIS),
                GREEN_SCALE = ((int)0x0D18),
                PACK_ROW_LENGTH = ((int)0x0D02),
                CURRENT_COLOR = ((int)0x0B00),
                MAX_FOG_FUNC_POINTS_SGIS = ((int)SGIS_fog_function.MAX_FOG_FUNC_POINTS_SGIS),
                POST_CONVOLUTION_BLUE_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_BLUE_SCALE_EXT),
                COLOR_ARRAY_SIZE = ((int)0x8081),
                MAP2_TEXTURE_COORD_4 = ((int)0x0DB6),
                COLOR_MATERIAL_PARAMETER = ((int)0x0B56),
                FOG_DENSITY = ((int)0x0B62),
                FOG_START = ((int)0x0B63),
                FRONT_FACE = ((int)0x0B46),
                POST_COLOR_MATRIX_ALPHA_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_ALPHA_SCALE_SGI),
                SPRITE_AXIS_SGIX = ((int)SGIX_sprite.SPRITE_AXIS_SGIX),
                UNPACK_SKIP_VOLUMES_SGIS = ((int)SGIS_texture4D.UNPACK_SKIP_VOLUMES_SGIS),
                MAP1_VERTEX_4 = ((int)0x0D98),
                ASYNC_TEX_IMAGE_SGIX = ((int)SGIX_async_pixel.ASYNC_TEX_IMAGE_SGIX),
                LIGHT5 = ((int)LightName.LIGHT5),
                MAP1_VERTEX_3 = ((int)0x0D97),
                AUX_BUFFERS = ((int)0x0C00),
                UNPACK_LSB_FIRST = ((int)0x0CF1),
                VERTEX_ARRAY_SIZE = ((int)0x807A),
                COLOR_MATERIAL = ((int)0x0B57),
                MAP1_TEXTURE_COORD_3 = ((int)0x0D95),
                LINE_STIPPLE_PATTERN = ((int)0x0B25),
                PERSPECTIVE_CORRECTION_HINT = ((int)0x0C50),
                MAX_ASYNC_TEX_IMAGE_SGIX = ((int)SGIX_async_pixel.MAX_ASYNC_TEX_IMAGE_SGIX),
                PIXEL_MAP_A_TO_A_SIZE = ((int)0x0CB9),
                UNPACK_CMYK_HINT_EXT = ((int)EXT_cmyka.UNPACK_CMYK_HINT_EXT),
                SPRITE_TRANSLATION_SGIX = ((int)SGIX_sprite.SPRITE_TRANSLATION_SGIX),
                PIXEL_TILE_CACHE_INCREMENT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_CACHE_INCREMENT_SGIX),
                SAMPLE_MASK_VALUE_SGIS = ((int)SGIS_multisample.SAMPLE_MASK_VALUE_SGIS),
                LOGIC_OP = ((int)0x0BF1),
                PACK_LSB_FIRST = ((int)0x0D01),
                LIGHT_ENV_MODE_SGIX = ((int)SGIX_fragment_lighting.LIGHT_ENV_MODE_SGIX),
                MAP2_INDEX = ((int)0x0DB1),
                UNPACK_IMAGE_DEPTH_SGIS = ((int)SGIS_texture4D.UNPACK_IMAGE_DEPTH_SGIS),
                FRAMEZOOM_SGIX = ((int)SGIX_framezoom.FRAMEZOOM_SGIX),
                COLOR_CLEAR_VALUE = ((int)0x0C22),
                MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)SGIX_clipmap.MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX),
                PROJECTION_MATRIX = ((int)0x0BA7),
                POST_CONVOLUTION_GREEN_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_GREEN_SCALE_EXT),
                ACCUM_ALPHA_BITS = ((int)0x0D5B),
                DEPTH_TEST = ((int)0x0B71),
                LINE_STIPPLE = ((int)0x0B24),
                MAX_TEXTURE_STACK_DEPTH = ((int)0x0D39),
                LINE_WIDTH = ((int)0x0B21),
                MAX_LIGHTS = ((int)0x0D31),
                STENCIL_PASS_DEPTH_PASS = ((int)0x0B96),
                VERTEX_ARRAY_STRIDE = ((int)0x807C),
                PIXEL_TILE_GRID_HEIGHT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_HEIGHT_SGIX),
                PACK_IMAGE_HEIGHT_EXT = ((int)EXT_texture3D.PACK_IMAGE_HEIGHT_EXT),
                EDGE_FLAG = ((int)0x0B43),
                POST_CONVOLUTION_ALPHA_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_ALPHA_BIAS_EXT),
                TEXTURE_1D = ((int)0x0DE0),
                POINT_SMOOTH_HINT = ((int)0x0C51),
                TEXTURE_GEN_S = ((int)0x0C60),
                TEXTURE_GEN_R = ((int)0x0C62),
                POINT_FADE_THRESHOLD_SIZE_SGIS = ((int)SGIS_point_parameters.POINT_FADE_THRESHOLD_SIZE_SGIS),
                PACK_ALIGNMENT = ((int)0x0D05),
                DOUBLEBUFFER = ((int)0x0C32),
                REFERENCE_PLANE_SGIX = ((int)SGIX_reference_plane.REFERENCE_PLANE_SGIX),
                COLOR_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.COLOR_ARRAY_COUNT_EXT),
                PIXEL_TILE_HEIGHT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_HEIGHT_SGIX),
                MAX_ACTIVE_LIGHTS_SGIX = ((int)SGIX_fragment_lighting.MAX_ACTIVE_LIGHTS_SGIX),
                BLEND_SRC = ((int)0x0BE1),
                DISTANCE_ATTENUATION_SGIS = ((int)SGIS_point_parameters.DISTANCE_ATTENUATION_SGIS),
                PACK_SKIP_ROWS = ((int)0x0D03),
                FOG_COLOR = ((int)0x0B66),
                LINE_SMOOTH = ((int)0x0B20),
                MAX_VIEWPORT_DIMS = ((int)0x0D3A),
                POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)SGI_color_table.POST_COLOR_MATRIX_COLOR_TABLE_SGI),
                COLOR_ARRAY = ((int)0x8076),
                MAX_TEXTURE_SIZE = ((int)0x0D33),
                FRAGMENT_COLOR_MATERIAL_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_COLOR_MATERIAL_SGIX),
                LIGHT_MODEL_COLOR_CONTROL = ((int)VERSION_1_2.LIGHT_MODEL_COLOR_CONTROL),
                CLIP_PLANE1 = ((int)ClipPlaneName.CLIP_PLANE1),
                PIXEL_TEX_GEN_MODE_SGIX = ((int)SGIX_pixel_texture.PIXEL_TEX_GEN_MODE_SGIX),
                VERTEX_PRECLIP_HINT_SGIX = ((int)SGIX_vertex_preclip.VERTEX_PRECLIP_HINT_SGIX),
                LIGHT7 = ((int)LightName.LIGHT7),
                COLOR_MATRIX_SGI = ((int)SGI_color_matrix.COLOR_MATRIX_SGI),
                FEEDBACK_BUFFER_TYPE = ((int)0x0DF2),
                RED_BIAS = ((int)0x0D15),
                FRAMEZOOM_FACTOR_SGIX = ((int)SGIX_framezoom.FRAMEZOOM_FACTOR_SGIX),
                LINE_WIDTH_GRANULARITY = ((int)0x0B23),
                MODELVIEW_MATRIX = ((int)0x0BA6),
                MAX_ASYNC_HISTOGRAM_SGIX = ((int)SGIX_async_histogram.MAX_ASYNC_HISTOGRAM_SGIX),
                CULL_FACE = ((int)0x0B44),
                DITHER = ((int)0x0BD0),
                SMOOTH_LINE_WIDTH_GRANULARITY = ((int)VERSION_1_2.SMOOTH_LINE_WIDTH_GRANULARITY),
                CURRENT_RASTER_TEXTURE_COORDS = ((int)0x0B06),
                POST_COLOR_MATRIX_GREEN_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_GREEN_SCALE_SGI),
                STENCIL_WRITEMASK = ((int)0x0B98),
                SAMPLE_ALPHA_TO_MASK_SGIS = ((int)SGIS_multisample.SAMPLE_ALPHA_TO_MASK_SGIS),
                STENCIL_FAIL = ((int)0x0B94),
                PIXEL_MAP_S_TO_S_SIZE = ((int)0x0CB1),
                BLUE_BIAS = ((int)0x0D1B),
                SHADE_MODEL = ((int)0x0B54),
                ASYNC_MARKER_SGIX = ((int)SGIX_async.ASYNC_MARKER_SGIX),
                INDEX_BITS = ((int)0x0D51),
                ACCUM_GREEN_BITS = ((int)0x0D59),
                FRAGMENT_LIGHTING_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHTING_SGIX),
                SPRITE_MODE_SGIX = ((int)SGIX_sprite.SPRITE_MODE_SGIX),
                PIXEL_TILE_WIDTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_WIDTH_SGIX),
                UNPACK_ROW_LENGTH = ((int)0x0CF2),
                CURRENT_RASTER_COLOR = ((int)0x0B04),
                TEXTURE_COORD_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.TEXTURE_COORD_ARRAY_COUNT_EXT),
                LOGIC_OP_MODE = ((int)0x0BF0),
                DEFORMATIONS_MASK_SGIX = ((int)SGIX_polynomial_ffd.DEFORMATIONS_MASK_SGIX),
                POINT_SIZE_MIN_SGIS = ((int)SGIS_point_parameters.POINT_SIZE_MIN_SGIS),
                CONVOLUTION_HINT_SGIX = ((int)SGIX_convolution_accuracy.CONVOLUTION_HINT_SGIX),
                CURRENT_RASTER_POSITION = ((int)0x0B07),
                SAMPLE_BUFFERS_SGIS = ((int)SGIS_multisample.SAMPLE_BUFFERS_SGIS),
                DEPTH_WRITEMASK = ((int)0x0B72),
                DRAW_BUFFER = ((int)0x0C01),
                COLOR_ARRAY_STRIDE = ((int)0x8083),
                DEPTH_SCALE = ((int)0x0D1E),
                ALPHA_TEST = ((int)0x0BC0),
                NORMALIZE = ((int)0x0BA1),
                IR_INSTRUMENT1_SGIX = ((int)SGIX_ir_instrument1.IR_INSTRUMENT1_SGIX),
                MINMAX_EXT = ((int)EXT_histogram.MINMAX_EXT),
                TEXTURE_BINDING_2D = ((int)0x8069),
                MAX_ATTRIB_STACK_DEPTH = ((int)0x0D35),
                LIGHT2 = ((int)LightName.LIGHT2),
                TEXTURE_3D_EXT = ((int)EXT_texture3D.TEXTURE_3D_EXT),
                CONVOLUTION_1D_EXT = ((int)EXT_convolution.CONVOLUTION_1D_EXT),
                MAP1_TEXTURE_COORD_1 = ((int)0x0D93),
                VIEWPORT = ((int)0x0BA2),
                INSTRUMENT_MEASUREMENTS_SGIX = ((int)SGIX_instruments.INSTRUMENT_MEASUREMENTS_SGIX),
                POLYGON_SMOOTH_HINT = ((int)0x0C53),
                LIGHT_MODEL_TWO_SIDE = ((int)0x0B52),
                INDEX_OFFSET = ((int)0x0D13),
                MAP_COLOR = ((int)0x0D10),
                FOG_INDEX = ((int)0x0B61),
                ZOOM_Y = ((int)0x0D17),
                CLIP_PLANE2 = ((int)ClipPlaneName.CLIP_PLANE2),
                STENCIL_TEST = ((int)0x0B90),
                ASYNC_HISTOGRAM_SGIX = ((int)SGIX_async_histogram.ASYNC_HISTOGRAM_SGIX),
                MAX_EVAL_ORDER = ((int)0x0D30),
                MAP2_NORMAL = ((int)0x0DB2),
                STENCIL_PASS_DEPTH_FAIL = ((int)0x0B95),
                VERTEX_ARRAY = ((int)0x8074),
                ALIASED_POINT_SIZE_RANGE = ((int)VERSION_1_2.ALIASED_POINT_SIZE_RANGE),
                REFERENCE_PLANE_EQUATION_SGIX = ((int)SGIX_reference_plane.REFERENCE_PLANE_EQUATION_SGIX),
                NORMAL_ARRAY = ((int)0x8075),
                UNPACK_SWAP_BYTES = ((int)0x0CF0),
                INDEX_CLEAR_VALUE = ((int)0x0C20),
                TEXTURE_4D_SGIS = ((int)SGIS_texture4D.TEXTURE_4D_SGIS),
                LIGHT1 = ((int)LightName.LIGHT1),
                CURRENT_TEXTURE_COORDS = ((int)0x0B03),
                MAP2_TEXTURE_COORD_1 = ((int)0x0DB3),
                TEXTURE_COORD_ARRAY = ((int)0x8078),
                BLEND_EQUATION_EXT = ((int)EXT_blend_minmax.BLEND_EQUATION_EXT),
                POLYGON_STIPPLE = ((int)0x0B42),
                VERTEX_ARRAY_TYPE = ((int)0x807B),
                MAP1_INDEX = ((int)0x0D91),
                NORMAL_ARRAY_COUNT_EXT = ((int)EXT_vertex_array.NORMAL_ARRAY_COUNT_EXT),
                CONVOLUTION_2D_EXT = ((int)EXT_convolution.CONVOLUTION_2D_EXT),
                MAX_LIST_NESTING = ((int)0x0B31),
                STENCIL_BITS = ((int)0x0D57),
                SUBPIXEL_BITS = ((int)0x0D50),
                POLYGON_OFFSET_FILL = ((int)0x8037),
                LINE_WIDTH_RANGE = ((int)0x0B22),
                POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_SCALE_RANGE_SGIX),
                VERTEX_PRECLIP_SGIX = ((int)SGIX_vertex_preclip.VERTEX_PRECLIP_SGIX),
                POLYGON_OFFSET_POINT = ((int)0x2A01),
                ALPHA_TEST_REF = ((int)0x0BC2),
                RGBA_MODE = ((int)0x0C31),
                EDGE_FLAG_ARRAY_STRIDE = ((int)0x808C),
                LIGHT_MODEL_LOCAL_VIEWER = ((int)0x0B51),
                INDEX_SHIFT = ((int)0x0D12),
                MAP_STENCIL = ((int)0x0D11),
                TEXTURE_COORD_ARRAY_SIZE = ((int)0x8088),
                POST_COLOR_MATRIX_BLUE_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_BLUE_BIAS_SGI),
                TEXTURE_3D_BINDING_EXT = ((int)EXT_texture_object.TEXTURE_3D_BINDING_EXT),
                PIXEL_MAP_I_TO_B_SIZE = ((int)0x0CB4),
                POLYGON_OFFSET_LINE = ((int)0x2A02),
                MAX_PIXEL_MAP_TABLE = ((int)0x0D34),
                POST_COLOR_MATRIX_ALPHA_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_ALPHA_BIAS_SGI),
                BLEND_DST = ((int)0x0BE0),
                TEXTURE_4D_BINDING_SGIS = ((int)SGIS_texture4D.TEXTURE_4D_BINDING_SGIS),
                DEPTH_BIAS = ((int)0x0D1F),
                POST_CONVOLUTION_RED_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_RED_BIAS_EXT),
                MAP2_GRID_SEGMENTS = ((int)0x0DD3),
                MAX_CLIP_PLANES = ((int)0x0D32),
                MAX_ASYNC_READ_PIXELS_SGIX = ((int)SGIX_async_pixel.MAX_ASYNC_READ_PIXELS_SGIX),
                DEPTH_BITS = ((int)0x0D56),
                POINT_SIZE_MAX_SGIS = ((int)SGIS_point_parameters.POINT_SIZE_MAX_SGIS),
            }
            
            public enum GetTextureParameter
            {
                TEXTURE_CLIPMAP_FRAME_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_FRAME_SGIX),
                TEXTURE_WRAP_R_EXT = ((int)EXT_texture3D.TEXTURE_WRAP_R_EXT),
                TEXTURE_BORDER = ((int)0x1005),
                TEXTURE_HEIGHT = ((int)0x1001),
                TEXTURE_INTENSITY_SIZE = ((int)0x8061),
                TEXTURE_CLIPMAP_CENTER_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_CENTER_SGIX),
                TEXTURE_WRAP_Q_SGIS = ((int)SGIS_texture4D.TEXTURE_WRAP_Q_SGIS),
                TEXTURE_FILTER4_SIZE_SGIS = ((int)SGIS_texture_filter4.TEXTURE_FILTER4_SIZE_SGIS),
                TEXTURE_MAX_CLAMP_R_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_R_SGIX),
                TEXTURE_MAX_CLAMP_S_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_S_SGIX),
                TEXTURE_PRIORITY = ((int)0x8066),
                TEXTURE_RED_SIZE = ((int)0x805C),
                TEXTURE_MIN_FILTER = ((int)TextureParameterName.TEXTURE_MIN_FILTER),
                TEXTURE_4DSIZE_SGIS = ((int)SGIS_texture4D.TEXTURE_4DSIZE_SGIS),
                TEXTURE_MIN_LOD_SGIS = ((int)SGIS_texture_lod.TEXTURE_MIN_LOD_SGIS),
                TEXTURE_WIDTH = ((int)0x1000),
                TEXTURE_BLUE_SIZE = ((int)0x805E),
                TEXTURE_WRAP_T = ((int)TextureParameterName.TEXTURE_WRAP_T),
                TEXTURE_MAX_LOD_SGIS = ((int)SGIS_texture_lod.TEXTURE_MAX_LOD_SGIS),
                POST_TEXTURE_FILTER_SCALE_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_SCALE_SGIX),
                TEXTURE_LOD_BIAS_R_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_R_SGIX),
                TEXTURE_LOD_BIAS_S_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_S_SGIX),
                TEXTURE_INTERNAL_FORMAT = ((int)0x1003),
                TEXTURE_LUMINANCE_SIZE = ((int)0x8060),
                TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX),
                DUAL_TEXTURE_SELECT_SGIS = ((int)SGIS_texture_select.DUAL_TEXTURE_SELECT_SGIS),
                TEXTURE_CLIPMAP_OFFSET_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_OFFSET_SGIX),
                TEXTURE_COMPONENTS = ((int)0x1003),
                TEXTURE_COMPARE_OPERATOR_SGIX = ((int)SGIX_shadow.TEXTURE_COMPARE_OPERATOR_SGIX),
                TEXTURE_LEQUAL_R_SGIX = ((int)SGIX_shadow.TEXTURE_LEQUAL_R_SGIX),
                TEXTURE_GEQUAL_R_SGIX = ((int)SGIX_shadow.TEXTURE_GEQUAL_R_SGIX),
                TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_LOD_OFFSET_SGIX),
                DETAIL_TEXTURE_FUNC_POINTS_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_FUNC_POINTS_SGIS),
                DETAIL_TEXTURE_MODE_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_MODE_SGIS),
                TEXTURE_BORDER_COLOR = ((int)0x1004),
                SHADOW_AMBIENT_SGIX = ((int)SGIX_shadow_ambient.SHADOW_AMBIENT_SGIX),
                TEXTURE_MAG_FILTER = ((int)TextureParameterName.TEXTURE_MAG_FILTER),
                TEXTURE_BASE_LEVEL_SGIS = ((int)SGIS_texture_lod.TEXTURE_BASE_LEVEL_SGIS),
                TEXTURE_GREEN_SIZE = ((int)0x805D),
                TEXTURE_MAX_LEVEL_SGIS = ((int)SGIS_texture_lod.TEXTURE_MAX_LEVEL_SGIS),
                TEXTURE_WRAP_S = ((int)TextureParameterName.TEXTURE_WRAP_S),
                TEXTURE_RESIDENT = ((int)0x8067),
                TEXTURE_LOD_BIAS_T_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_T_SGIX),
                POST_TEXTURE_FILTER_BIAS_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_BIAS_SGIX),
                DETAIL_TEXTURE_LEVEL_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_LEVEL_SGIS),
                TEXTURE_DEPTH_EXT = ((int)EXT_texture3D.TEXTURE_DEPTH_EXT),
                TEXTURE_MAX_CLAMP_T_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_T_SGIX),
                TEXTURE_ALPHA_SIZE = ((int)0x805F),
                TEXTURE_COMPARE_SGIX = ((int)SGIX_shadow.TEXTURE_COMPARE_SGIX),
                QUAD_TEXTURE_SELECT_SGIS = ((int)SGIS_texture_select.QUAD_TEXTURE_SELECT_SGIS),
                GENERATE_MIPMAP_SGIS = ((int)SGIS_generate_mipmap.GENERATE_MIPMAP_SGIS),
                SHARPEN_TEXTURE_FUNC_POINTS_SGIS = ((int)SGIS_sharpen_texture.SHARPEN_TEXTURE_FUNC_POINTS_SGIS),
                TEXTURE_CLIPMAP_DEPTH_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_DEPTH_SGIX),
            }
            
            public enum HintMode
            {
                DONT_CARE = ((int)0x1100),
                NICEST = ((int)0x1102),
                FASTEST = ((int)0x1101),
            }
            
            public enum HintTarget
            {
                GENERATE_MIPMAP_HINT_SGIS = ((int)SGIS_generate_mipmap.GENERATE_MIPMAP_HINT_SGIS),
                POLYGON_SMOOTH_HINT = ((int)GetPName.POLYGON_SMOOTH_HINT),
                VERTEX_PRECLIP_HINT_SGIX = ((int)SGIX_vertex_preclip.VERTEX_PRECLIP_HINT_SGIX),
                LINE_SMOOTH_HINT = ((int)GetPName.LINE_SMOOTH_HINT),
                POINT_SMOOTH_HINT = ((int)GetPName.POINT_SMOOTH_HINT),
                PERSPECTIVE_CORRECTION_HINT = ((int)GetPName.PERSPECTIVE_CORRECTION_HINT),
                UNPACK_CMYK_HINT_EXT = ((int)EXT_cmyka.UNPACK_CMYK_HINT_EXT),
                FOG_HINT = ((int)GetPName.FOG_HINT),
                CONVOLUTION_HINT_SGIX = ((int)SGIX_convolution_accuracy.CONVOLUTION_HINT_SGIX),
                TEXTURE_MULTI_BUFFER_HINT_SGIX = ((int)SGIX_texture_multi_buffer.TEXTURE_MULTI_BUFFER_HINT_SGIX),
                PACK_CMYK_HINT_EXT = ((int)EXT_cmyka.PACK_CMYK_HINT_EXT),
            }
            
            public enum HistogramTargetEXT
            {
                HISTOGRAM_EXT = ((int)EXT_histogram.HISTOGRAM_EXT),
                PROXY_HISTOGRAM_EXT = ((int)EXT_histogram.PROXY_HISTOGRAM_EXT),
            }
            
            public enum IndexPointerType
            {
                DOUBLE = ((int)DataType.DOUBLE),
                INT = ((int)DataType.INT),
                SHORT = ((int)DataType.SHORT),
                FLOAT = ((int)DataType.FLOAT),
            }
            
            public enum LightEnvModeSGIX
            {
                REPLACE = ((int)StencilOp.REPLACE),
                MODULATE = ((int)TextureEnvMode.MODULATE),
                ADD = ((int)AccumOp.ADD),
            }
            
            public enum LightEnvParameterSGIX
            {
                LIGHT_ENV_MODE_SGIX = ((int)SGIX_fragment_lighting.LIGHT_ENV_MODE_SGIX),
            }
            
            public enum LightModelColorControl
            {
                SEPARATE_SPECULAR_COLOR = ((int)VERSION_1_2.SEPARATE_SPECULAR_COLOR),
                SINGLE_COLOR = ((int)VERSION_1_2.SINGLE_COLOR),
            }
            
            public enum LightModelParameter
            {
                LIGHT_MODEL_LOCAL_VIEWER = ((int)GetPName.LIGHT_MODEL_LOCAL_VIEWER),
                LIGHT_MODEL_COLOR_CONTROL = ((int)VERSION_1_2.LIGHT_MODEL_COLOR_CONTROL),
                LIGHT_MODEL_AMBIENT = ((int)GetPName.LIGHT_MODEL_AMBIENT),
                LIGHT_MODEL_TWO_SIDE = ((int)GetPName.LIGHT_MODEL_TWO_SIDE),
            }
            
            public enum LightParameter
            {
                POSITION = ((int)0x1203),
                SPOT_DIRECTION = ((int)0x1204),
                LINEAR_ATTENUATION = ((int)0x1208),
                SPOT_CUTOFF = ((int)0x1206),
                SPOT_EXPONENT = ((int)0x1205),
                CONSTANT_ATTENUATION = ((int)0x1207),
                QUADRATIC_ATTENUATION = ((int)0x1209),
                SPECULAR = ((int)0x1202),
                DIFFUSE = ((int)0x1201),
                AMBIENT = ((int)0x1200),
            }
            
            public enum ListMode
            {
                COMPILE = ((int)0x1300),
                COMPILE_AND_EXECUTE = ((int)0x1301),
            }
            
            public enum DataType
            {
                GL_2_BYTES = ((int)0x1407),
                UNSIGNED_INT = ((int)0x1405),
                DOUBLE_EXT = ((int)0x140A),
                FLOAT = ((int)0x1406),
                UNSIGNED_SHORT = ((int)0x1403),
                SHORT = ((int)0x1402),
                BYTE = ((int)0x1400),
                GL_4_BYTES = ((int)0x1409),
                INT = ((int)0x1404),
                GL_3_BYTES = ((int)0x1408),
                UNSIGNED_BYTE = ((int)0x1401),
                DOUBLE = ((int)0x140A),
            }
            
            public enum ListNameType
            {
                GL_2_BYTES = ((int)DataType.GL_2_BYTES),
                UNSIGNED_INT = ((int)DataType.UNSIGNED_INT),
                FLOAT = ((int)DataType.FLOAT),
                UNSIGNED_SHORT = ((int)DataType.UNSIGNED_SHORT),
                SHORT = ((int)DataType.SHORT),
                BYTE = ((int)DataType.BYTE),
                GL_4_BYTES = ((int)DataType.GL_4_BYTES),
                INT = ((int)DataType.INT),
                GL_3_BYTES = ((int)DataType.GL_3_BYTES),
                UNSIGNED_BYTE = ((int)DataType.UNSIGNED_BYTE),
            }
            
            public enum ListParameterName
            {
                LIST_PRIORITY_SGIX = ((int)SGIX_list_priority.LIST_PRIORITY_SGIX),
            }
            
            public enum LogicOp
            {
                SET = ((int)0x150F),
                EQUIV = ((int)0x1509),
                NAND = ((int)0x150E),
                NOR = ((int)0x1508),
                XOR = ((int)0x1506),
                OR = ((int)0x1507),
                COPY_INVERTED = ((int)0x150C),
                AND_INVERTED = ((int)0x1504),
                INVERT = ((int)0x150A),
                AND_REVERSE = ((int)0x1502),
                NOOP = ((int)0x1505),
                CLEAR = ((int)0x1500),
                OR_REVERSE = ((int)0x150B),
                OR_INVERTED = ((int)0x150D),
                AND = ((int)0x1501),
                COPY = ((int)0x1503),
            }
            
            public enum MapTarget
            {
                MAP2_COLOR_4 = ((int)GetPName.MAP2_COLOR_4),
                MAP1_TEXTURE_COORD_4 = ((int)GetPName.MAP1_TEXTURE_COORD_4),
                MAP2_VERTEX_3 = ((int)GetPName.MAP2_VERTEX_3),
                GEOMETRY_DEFORMATION_SGIX = ((int)SGIX_polynomial_ffd.GEOMETRY_DEFORMATION_SGIX),
                MAP2_INDEX = ((int)GetPName.MAP2_INDEX),
                MAP1_TEXTURE_COORD_1 = ((int)GetPName.MAP1_TEXTURE_COORD_1),
                TEXTURE_DEFORMATION_SGIX = ((int)SGIX_polynomial_ffd.TEXTURE_DEFORMATION_SGIX),
                MAP2_TEXTURE_COORD_1 = ((int)GetPName.MAP2_TEXTURE_COORD_1),
                MAP2_TEXTURE_COORD_4 = ((int)GetPName.MAP2_TEXTURE_COORD_4),
                MAP1_TEXTURE_COORD_3 = ((int)GetPName.MAP1_TEXTURE_COORD_3),
                MAP1_INDEX = ((int)GetPName.MAP1_INDEX),
                MAP1_VERTEX_4 = ((int)GetPName.MAP1_VERTEX_4),
                MAP1_TEXTURE_COORD_2 = ((int)GetPName.MAP1_TEXTURE_COORD_2),
                MAP2_TEXTURE_COORD_2 = ((int)GetPName.MAP2_TEXTURE_COORD_2),
                MAP1_VERTEX_3 = ((int)GetPName.MAP1_VERTEX_3),
                MAP1_COLOR_4 = ((int)GetPName.MAP1_COLOR_4),
                MAP2_NORMAL = ((int)GetPName.MAP2_NORMAL),
                MAP2_VERTEX_4 = ((int)GetPName.MAP2_VERTEX_4),
                MAP2_TEXTURE_COORD_3 = ((int)GetPName.MAP2_TEXTURE_COORD_3),
                MAP1_NORMAL = ((int)GetPName.MAP1_NORMAL),
            }
            
            public enum MaterialFace
            {
                BACK = ((int)DrawBufferMode.BACK),
                FRONT_AND_BACK = ((int)DrawBufferMode.FRONT_AND_BACK),
                FRONT = ((int)DrawBufferMode.FRONT),
            }
            
            public enum MaterialParameter
            {
                EMISSION = ((int)0x1600),
                DIFFUSE = ((int)LightParameter.DIFFUSE),
                AMBIENT_AND_DIFFUSE = ((int)0x1602),
                SHININESS = ((int)0x1601),
                SPECULAR = ((int)LightParameter.SPECULAR),
                AMBIENT = ((int)LightParameter.AMBIENT),
                COLOR_INDEXES = ((int)0x1603),
            }
            
            public enum MatrixMode
            {
                PROJECTION = ((int)0x1701),
                MODELVIEW = ((int)0x1700),
                TEXTURE = ((int)0x1702),
            }
            
            public enum MeshMode1
            {
                LINE = ((int)PolygonMode.LINE),
                POINT = ((int)PolygonMode.POINT),
            }
            
            public enum MeshMode2
            {
                FILL = ((int)PolygonMode.FILL),
                LINE = ((int)PolygonMode.LINE),
                POINT = ((int)PolygonMode.POINT),
            }
            
            public enum MinmaxTargetEXT
            {
                MINMAX_EXT = ((int)EXT_histogram.MINMAX_EXT),
            }
            
            public enum NormalPointerType
            {
                DOUBLE = ((int)DataType.DOUBLE),
                BYTE = ((int)DataType.BYTE),
                SHORT = ((int)DataType.SHORT),
                INT = ((int)DataType.INT),
                FLOAT = ((int)DataType.FLOAT),
            }
            
            public enum PixelCopyType
            {
                DEPTH = ((int)0x1801),
                COLOR = ((int)0x1800),
                STENCIL = ((int)0x1802),
            }
            
            public enum PixelFormat
            {
                CMYK_EXT = ((int)EXT_cmyka.CMYK_EXT),
                YCRCB_444_SGIX = ((int)SGIX_ycrcb.YCRCB_444_SGIX),
                R5_G6_B5_ICC_SGIX = ((int)SGIX_icc_texture.R5_G6_B5_ICC_SGIX),
                ALPHA = ((int)0x1906),
                RGBA = ((int)0x1908),
                GREEN = ((int)0x1904),
                R5_G6_B5_A8_ICC_SGIX = ((int)SGIX_icc_texture.R5_G6_B5_A8_ICC_SGIX),
                LUMINANCE_ALPHA = ((int)0x190A),
                STENCIL_INDEX = ((int)0x1901),
                RED = ((int)0x1903),
                BLUE = ((int)0x1905),
                CMYKA_EXT = ((int)EXT_cmyka.CMYKA_EXT),
                ALPHA16_ICC_SGIX = ((int)SGIX_icc_texture.ALPHA16_ICC_SGIX),
                LUMINANCE = ((int)0x1909),
                LUMINANCE16_ALPHA8_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE16_ALPHA8_ICC_SGIX),
                YCRCB_422_SGIX = ((int)SGIX_ycrcb.YCRCB_422_SGIX),
                ABGR_EXT = ((int)EXT_abgr.ABGR_EXT),
                COLOR_INDEX = ((int)0x1900),
                RGB = ((int)0x1907),
                LUMINANCE16_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE16_ICC_SGIX),
                DEPTH_COMPONENT = ((int)0x1902),
            }
            
            public enum PixelMap
            {
                PIXEL_MAP_B_TO_B = ((int)GetPixelMap.PIXEL_MAP_B_TO_B),
                PIXEL_MAP_S_TO_S = ((int)GetPixelMap.PIXEL_MAP_S_TO_S),
                PIXEL_MAP_R_TO_R = ((int)GetPixelMap.PIXEL_MAP_R_TO_R),
                PIXEL_MAP_I_TO_B = ((int)GetPixelMap.PIXEL_MAP_I_TO_B),
                PIXEL_MAP_I_TO_G = ((int)GetPixelMap.PIXEL_MAP_I_TO_G),
                PIXEL_MAP_I_TO_A = ((int)GetPixelMap.PIXEL_MAP_I_TO_A),
                PIXEL_MAP_A_TO_A = ((int)GetPixelMap.PIXEL_MAP_A_TO_A),
                PIXEL_MAP_G_TO_G = ((int)GetPixelMap.PIXEL_MAP_G_TO_G),
                PIXEL_MAP_I_TO_I = ((int)GetPixelMap.PIXEL_MAP_I_TO_I),
                PIXEL_MAP_I_TO_R = ((int)GetPixelMap.PIXEL_MAP_I_TO_R),
            }
            
            public enum PixelStoreParameter
            {
                UNPACK_IMAGE_DEPTH_SGIS = ((int)SGIS_texture4D.UNPACK_IMAGE_DEPTH_SGIS),
                UNPACK_LSB_FIRST = ((int)GetPName.UNPACK_LSB_FIRST),
                UNPACK_RESAMPLE_SGIX = ((int)SGIX_resample.UNPACK_RESAMPLE_SGIX),
                PIXEL_TILE_CACHE_SIZE_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_CACHE_SIZE_SGIX),
                UNPACK_ROW_LENGTH = ((int)GetPName.UNPACK_ROW_LENGTH),
                UNPACK_ALIGNMENT = ((int)GetPName.UNPACK_ALIGNMENT),
                UNPACK_IMAGE_HEIGHT_EXT = ((int)EXT_texture3D.UNPACK_IMAGE_HEIGHT_EXT),
                PIXEL_TILE_GRID_DEPTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_DEPTH_SGIX),
                PIXEL_TILE_WIDTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_WIDTH_SGIX),
                PACK_SKIP_ROWS = ((int)GetPName.PACK_SKIP_ROWS),
                PACK_SKIP_VOLUMES_SGIS = ((int)SGIS_texture4D.PACK_SKIP_VOLUMES_SGIS),
                UNPACK_SKIP_ROWS = ((int)GetPName.UNPACK_SKIP_ROWS),
                UNPACK_SKIP_IMAGES_EXT = ((int)EXT_texture3D.UNPACK_SKIP_IMAGES_EXT),
                UNPACK_SUBSAMPLE_RATE_SGIX = ((int)SGIX_subsample.UNPACK_SUBSAMPLE_RATE_SGIX),
                PIXEL_TILE_GRID_HEIGHT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_HEIGHT_SGIX),
                PIXEL_TILE_HEIGHT_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_HEIGHT_SGIX),
                PACK_RESAMPLE_SGIX = ((int)SGIX_resample.PACK_RESAMPLE_SGIX),
                PACK_SKIP_PIXELS = ((int)GetPName.PACK_SKIP_PIXELS),
                PACK_IMAGE_DEPTH_SGIS = ((int)SGIS_texture4D.PACK_IMAGE_DEPTH_SGIS),
                PIXEL_TILE_GRID_WIDTH_SGIX = ((int)SGIX_pixel_tiles.PIXEL_TILE_GRID_WIDTH_SGIX),
                PACK_SWAP_BYTES = ((int)GetPName.PACK_SWAP_BYTES),
                UNPACK_SWAP_BYTES = ((int)GetPName.UNPACK_SWAP_BYTES),
                PACK_SKIP_IMAGES_EXT = ((int)EXT_texture3D.PACK_SKIP_IMAGES_EXT),
                UNPACK_SKIP_VOLUMES_SGIS = ((int)SGIS_texture4D.UNPACK_SKIP_VOLUMES_SGIS),
                PACK_LSB_FIRST = ((int)GetPName.PACK_LSB_FIRST),
                PACK_ALIGNMENT = ((int)GetPName.PACK_ALIGNMENT),
                PACK_ROW_LENGTH = ((int)GetPName.PACK_ROW_LENGTH),
                UNPACK_SKIP_PIXELS = ((int)GetPName.UNPACK_SKIP_PIXELS),
                PACK_SUBSAMPLE_RATE_SGIX = ((int)SGIX_subsample.PACK_SUBSAMPLE_RATE_SGIX),
                PACK_IMAGE_HEIGHT_EXT = ((int)EXT_texture3D.PACK_IMAGE_HEIGHT_EXT),
            }
            
            public enum PixelStoreResampleMode
            {
                RESAMPLE_DECIMATE_SGIX = ((int)SGIX_resample.RESAMPLE_DECIMATE_SGIX),
                RESAMPLE_REPLICATE_SGIX = ((int)SGIX_resample.RESAMPLE_REPLICATE_SGIX),
                RESAMPLE_ZERO_FILL_SGIX = ((int)SGIX_resample.RESAMPLE_ZERO_FILL_SGIX),
            }
            
            public enum PixelStoreSubsampleRate
            {
                PIXEL_SUBSAMPLE_2424_SGIX = ((int)SGIX_subsample.PIXEL_SUBSAMPLE_2424_SGIX),
                PIXEL_SUBSAMPLE_4444_SGIX = ((int)SGIX_subsample.PIXEL_SUBSAMPLE_4444_SGIX),
                PIXEL_SUBSAMPLE_4242_SGIX = ((int)SGIX_subsample.PIXEL_SUBSAMPLE_4242_SGIX),
            }
            
            public enum PixelTexGenMode
            {
                RGB = ((int)PixelFormat.RGB),
                NONE = ((int)DrawBufferMode.NONE),
                LUMINANCE = ((int)PixelFormat.LUMINANCE),
                PIXEL_TEX_GEN_ALPHA_MS_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_ALPHA_MS_SGIX),
                PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX),
                PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX),
                LUMINANCE_ALPHA = ((int)PixelFormat.LUMINANCE_ALPHA),
                PIXEL_TEX_GEN_ALPHA_LS_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_ALPHA_LS_SGIX),
                RGBA = ((int)PixelFormat.RGBA),
            }
            
            public enum PixelTexGenParameterNameSGIS
            {
                PIXEL_FRAGMENT_RGB_SOURCE_SGIS = ((int)SGIS_pixel_texture.PIXEL_FRAGMENT_RGB_SOURCE_SGIS),
                PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = ((int)SGIS_pixel_texture.PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS),
            }
            
            public enum PixelTransferParameter
            {
                POST_CONVOLUTION_RED_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_RED_BIAS_EXT),
                DEPTH_BIAS = ((int)GetPName.DEPTH_BIAS),
                POST_COLOR_MATRIX_BLUE_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_BLUE_BIAS_SGI),
                POST_CONVOLUTION_BLUE_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_BLUE_BIAS_EXT),
                BLUE_SCALE = ((int)GetPName.BLUE_SCALE),
                POST_COLOR_MATRIX_BLUE_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_BLUE_SCALE_SGI),
                BLUE_BIAS = ((int)GetPName.BLUE_BIAS),
                POST_COLOR_MATRIX_ALPHA_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_ALPHA_BIAS_SGI),
                INDEX_OFFSET = ((int)GetPName.INDEX_OFFSET),
                POST_CONVOLUTION_ALPHA_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_ALPHA_BIAS_EXT),
                POST_COLOR_MATRIX_RED_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_RED_BIAS_SGI),
                MAP_COLOR = ((int)GetPName.MAP_COLOR),
                POST_COLOR_MATRIX_ALPHA_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_ALPHA_SCALE_SGI),
                MAP_STENCIL = ((int)GetPName.MAP_STENCIL),
                POST_CONVOLUTION_GREEN_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_GREEN_SCALE_EXT),
                INDEX_SHIFT = ((int)GetPName.INDEX_SHIFT),
                POST_COLOR_MATRIX_GREEN_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_GREEN_SCALE_SGI),
                POST_CONVOLUTION_BLUE_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_BLUE_SCALE_EXT),
                POST_CONVOLUTION_RED_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_RED_SCALE_EXT),
                POST_COLOR_MATRIX_GREEN_BIAS_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_GREEN_BIAS_SGI),
                POST_COLOR_MATRIX_RED_SCALE_SGI = ((int)SGI_color_matrix.POST_COLOR_MATRIX_RED_SCALE_SGI),
                RED_SCALE = ((int)GetPName.RED_SCALE),
                GREEN_BIAS = ((int)GetPName.GREEN_BIAS),
                RED_BIAS = ((int)GetPName.RED_BIAS),
                POST_CONVOLUTION_GREEN_BIAS_EXT = ((int)EXT_convolution.POST_CONVOLUTION_GREEN_BIAS_EXT),
                GREEN_SCALE = ((int)GetPName.GREEN_SCALE),
                ALPHA_SCALE = ((int)GetPName.ALPHA_SCALE),
                ALPHA_BIAS = ((int)GetPName.ALPHA_BIAS),
                DEPTH_SCALE = ((int)GetPName.DEPTH_SCALE),
                POST_CONVOLUTION_ALPHA_SCALE_EXT = ((int)EXT_convolution.POST_CONVOLUTION_ALPHA_SCALE_EXT),
            }
            
            public enum PixelType
            {
                UNSIGNED_INT = ((int)DataType.UNSIGNED_INT),
                UNSIGNED_SHORT_5_5_5_1_EXT = ((int)EXT_packed_pixels.UNSIGNED_SHORT_5_5_5_1_EXT),
                FLOAT = ((int)DataType.FLOAT),
                UNSIGNED_SHORT = ((int)DataType.UNSIGNED_SHORT),
                SHORT = ((int)DataType.SHORT),
                BYTE = ((int)DataType.BYTE),
                UNSIGNED_INT_8_8_8_8_EXT = ((int)EXT_packed_pixels.UNSIGNED_INT_8_8_8_8_EXT),
                UNSIGNED_BYTE_3_3_2_EXT = ((int)EXT_packed_pixels.UNSIGNED_BYTE_3_3_2_EXT),
                INT = ((int)DataType.INT),
                BITMAP = ((int)0x1A00),
                UNSIGNED_BYTE = ((int)DataType.UNSIGNED_BYTE),
                UNSIGNED_INT_10_10_10_2_EXT = ((int)EXT_packed_pixels.UNSIGNED_INT_10_10_10_2_EXT),
                UNSIGNED_SHORT_4_4_4_4_EXT = ((int)EXT_packed_pixels.UNSIGNED_SHORT_4_4_4_4_EXT),
            }
            
            public enum PointParameterNameSGIS
            {
                DISTANCE_ATTENUATION_SGIS = ((int)SGIS_point_parameters.DISTANCE_ATTENUATION_SGIS),
                POINT_SIZE_MAX_SGIS = ((int)SGIS_point_parameters.POINT_SIZE_MAX_SGIS),
                POINT_FADE_THRESHOLD_SIZE_SGIS = ((int)SGIS_point_parameters.POINT_FADE_THRESHOLD_SIZE_SGIS),
                POINT_SIZE_MIN_SGIS = ((int)SGIS_point_parameters.POINT_SIZE_MIN_SGIS),
            }
            
            public enum PolygonMode
            {
                FILL = ((int)0x1B02),
                LINE = ((int)0x1B01),
                POINT = ((int)0x1B00),
            }
            
            public enum ReadBufferMode
            {
                FRONT_RIGHT = ((int)DrawBufferMode.FRONT_RIGHT),
                AUX3 = ((int)DrawBufferMode.AUX3),
                AUX1 = ((int)DrawBufferMode.AUX1),
                LEFT = ((int)DrawBufferMode.LEFT),
                RIGHT = ((int)DrawBufferMode.RIGHT),
                BACK_RIGHT = ((int)DrawBufferMode.BACK_RIGHT),
                AUX2 = ((int)DrawBufferMode.AUX2),
                AUX0 = ((int)DrawBufferMode.AUX0),
                FRONT_LEFT = ((int)DrawBufferMode.FRONT_LEFT),
                BACK = ((int)DrawBufferMode.BACK),
                FRONT = ((int)DrawBufferMode.FRONT),
                BACK_LEFT = ((int)DrawBufferMode.BACK_LEFT),
            }
            
            public enum RenderingMode
            {
                SELECT = ((int)0x1C02),
                FEEDBACK = ((int)0x1C01),
                RENDER = ((int)0x1C00),
            }
            
            public enum SamplePatternSGIS
            {
                GL_4PASS_2_SGIS = ((int)SGIS_multisample.GL_4PASS_2_SGIS),
                GL_4PASS_3_SGIS = ((int)SGIS_multisample.GL_4PASS_3_SGIS),
                GL_2PASS_0_SGIS = ((int)SGIS_multisample.GL_2PASS_0_SGIS),
                GL_4PASS_1_SGIS = ((int)SGIS_multisample.GL_4PASS_1_SGIS),
                GL_1PASS_SGIS = ((int)SGIS_multisample.GL_1PASS_SGIS),
                GL_4PASS_0_SGIS = ((int)SGIS_multisample.GL_4PASS_0_SGIS),
                GL_2PASS_1_SGIS = ((int)SGIS_multisample.GL_2PASS_1_SGIS),
            }
            
            public enum SeparableTargetEXT
            {
                SEPARABLE_2D_EXT = ((int)EXT_convolution.SEPARABLE_2D_EXT),
            }
            
            public enum ShadingModel
            {
                SMOOTH = ((int)0x1D01),
                FLAT = ((int)0x1D00),
            }
            
            public enum StencilFunction
            {
                NEVER = ((int)AlphaFunction.NEVER),
                GEQUAL = ((int)AlphaFunction.GEQUAL),
                GREATER = ((int)AlphaFunction.GREATER),
                ALWAYS = ((int)AlphaFunction.ALWAYS),
                LEQUAL = ((int)AlphaFunction.LEQUAL),
                NOTEQUAL = ((int)AlphaFunction.NOTEQUAL),
                EQUAL = ((int)AlphaFunction.EQUAL),
                LESS = ((int)AlphaFunction.LESS),
            }
            
            public enum StencilOp
            {
                REPLACE = ((int)0x1E01),
                DECR = ((int)0x1E03),
                INVERT = ((int)LogicOp.INVERT),
                INCR = ((int)0x1E02),
                KEEP = ((int)0x1E00),
                ZERO = ((int)BlendingFactorDest.ZERO),
            }
            
            public enum StringName
            {
                EXTENSIONS = ((int)0x1F03),
                VERSION = ((int)0x1F02),
                RENDERER = ((int)0x1F01),
                VENDOR = ((int)0x1F00),
            }
            
            public enum TexCoordPointerType
            {
                DOUBLE = ((int)DataType.DOUBLE),
                INT = ((int)DataType.INT),
                SHORT = ((int)DataType.SHORT),
                FLOAT = ((int)DataType.FLOAT),
            }
            
            public enum TextureCoordName
            {
                Q = ((int)0x2003),
                R = ((int)0x2002),
                S = ((int)0x2000),
                T = ((int)0x2001),
            }
            
            public enum TextureEnvMode
            {
                REPLACE_EXT = ((int)EXT_texture.REPLACE_EXT),
                MODULATE = ((int)0x2100),
                ADD = ((int)AccumOp.ADD),
                DECAL = ((int)0x2101),
                BLEND = ((int)GetPName.BLEND),
                TEXTURE_ENV_BIAS_SGIX = ((int)SGIX_texture_add_env.TEXTURE_ENV_BIAS_SGIX),
            }
            
            public enum TextureEnvParameter
            {
                TEXTURE_ENV_COLOR = ((int)0x2201),
                TEXTURE_ENV_MODE = ((int)0x2200),
            }
            
            public enum TextureEnvTarget
            {
                TEXTURE_ENV = ((int)0x2300),
            }
            
            public enum TextureFilterFuncSGIS
            {
                FILTER4_SGIS = ((int)SGIS_texture_filter4.FILTER4_SGIS),
            }
            
            public enum TextureGenMode
            {
                EYE_DISTANCE_TO_LINE_SGIS = ((int)SGIS_point_line_texgen.EYE_DISTANCE_TO_LINE_SGIS),
                EYE_DISTANCE_TO_POINT_SGIS = ((int)SGIS_point_line_texgen.EYE_DISTANCE_TO_POINT_SGIS),
                OBJECT_LINEAR = ((int)0x2401),
                OBJECT_DISTANCE_TO_LINE_SGIS = ((int)SGIS_point_line_texgen.OBJECT_DISTANCE_TO_LINE_SGIS),
                OBJECT_DISTANCE_TO_POINT_SGIS = ((int)SGIS_point_line_texgen.OBJECT_DISTANCE_TO_POINT_SGIS),
                EYE_LINEAR = ((int)0x2400),
                SPHERE_MAP = ((int)0x2402),
            }
            
            public enum TextureGenParameter
            {
                EYE_PLANE = ((int)0x2502),
                OBJECT_LINE_SGIS = ((int)SGIS_point_line_texgen.OBJECT_LINE_SGIS),
                EYE_POINT_SGIS = ((int)SGIS_point_line_texgen.EYE_POINT_SGIS),
                TEXTURE_GEN_MODE = ((int)0x2500),
                EYE_LINE_SGIS = ((int)SGIS_point_line_texgen.EYE_LINE_SGIS),
                OBJECT_POINT_SGIS = ((int)SGIS_point_line_texgen.OBJECT_POINT_SGIS),
                OBJECT_PLANE = ((int)0x2501),
            }
            
            public enum TextureMagFilter
            {
                LINEAR = ((int)0x2601),
                PIXEL_TEX_GEN_Q_FLOOR_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_FLOOR_SGIX),
                FILTER4_SGIS = ((int)SGIS_texture_filter4.FILTER4_SGIS),
                LINEAR_SHARPEN_SGIS = ((int)SGIS_sharpen_texture.LINEAR_SHARPEN_SGIS),
                PIXEL_TEX_GEN_Q_CEILING_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_CEILING_SGIX),
                LINEAR_DETAIL_SGIS = ((int)SGIS_detail_texture.LINEAR_DETAIL_SGIS),
                PIXEL_TEX_GEN_Q_ROUND_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_ROUND_SGIX),
                NEAREST = ((int)0x2600),
                LINEAR_SHARPEN_COLOR_SGIS = ((int)SGIS_sharpen_texture.LINEAR_SHARPEN_COLOR_SGIS),
                LINEAR_SHARPEN_ALPHA_SGIS = ((int)SGIS_sharpen_texture.LINEAR_SHARPEN_ALPHA_SGIS),
                LINEAR_DETAIL_ALPHA_SGIS = ((int)SGIS_detail_texture.LINEAR_DETAIL_ALPHA_SGIS),
                LINEAR_DETAIL_COLOR_SGIS = ((int)SGIS_detail_texture.LINEAR_DETAIL_COLOR_SGIS),
            }
            
            public enum TextureMinFilter
            {
                LINEAR = ((int)TextureMagFilter.LINEAR),
                PIXEL_TEX_GEN_Q_FLOOR_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_FLOOR_SGIX),
                FILTER4_SGIS = ((int)SGIS_texture_filter4.FILTER4_SGIS),
                PIXEL_TEX_GEN_Q_CEILING_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_CEILING_SGIX),
                NEAREST_CLIPMAP_NEAREST_SGIX = ((int)SGIX_clipmap.NEAREST_CLIPMAP_NEAREST_SGIX),
                LINEAR_CLIPMAP_NEAREST_SGIX = ((int)SGIX_clipmap.LINEAR_CLIPMAP_NEAREST_SGIX),
                NEAREST_CLIPMAP_LINEAR_SGIX = ((int)SGIX_clipmap.NEAREST_CLIPMAP_LINEAR_SGIX),
                NEAREST_MIPMAP_LINEAR = ((int)0x2702),
                NEAREST = ((int)TextureMagFilter.NEAREST),
                NEAREST_MIPMAP_NEAREST = ((int)0x2700),
                LINEAR_MIPMAP_NEAREST = ((int)0x2701),
                LINEAR_CLIPMAP_LINEAR_SGIX = ((int)SGIX_clipmap.LINEAR_CLIPMAP_LINEAR_SGIX),
                LINEAR_MIPMAP_LINEAR = ((int)0x2703),
                PIXEL_TEX_GEN_Q_ROUND_SGIX = ((int)SGIX_impact_pixel_texture.PIXEL_TEX_GEN_Q_ROUND_SGIX),
            }
            
            public enum TextureParameterName
            {
                TEXTURE_BORDER_COLOR = ((int)GetTextureParameter.TEXTURE_BORDER_COLOR),
                TEXTURE_LOD_BIAS_T_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_T_SGIX),
                TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX),
                POST_TEXTURE_FILTER_BIAS_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_BIAS_SGIX),
                TEXTURE_LOD_BIAS_R_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_R_SGIX),
                GENERATE_MIPMAP_SGIS = ((int)SGIS_generate_mipmap.GENERATE_MIPMAP_SGIS),
                TEXTURE_CLIPMAP_DEPTH_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_DEPTH_SGIX),
                TEXTURE_COMPARE_OPERATOR_SGIX = ((int)SGIX_shadow.TEXTURE_COMPARE_OPERATOR_SGIX),
                QUAD_TEXTURE_SELECT_SGIS = ((int)SGIS_texture_select.QUAD_TEXTURE_SELECT_SGIS),
                TEXTURE_CLIPMAP_CENTER_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_CENTER_SGIX),
                TEXTURE_MAX_CLAMP_T_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_T_SGIX),
                TEXTURE_COMPARE_SGIX = ((int)SGIX_shadow.TEXTURE_COMPARE_SGIX),
                TEXTURE_MAX_CLAMP_S_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_S_SGIX),
                TEXTURE_MAG_FILTER = ((int)0x2800),
                SHADOW_AMBIENT_SGIX = ((int)SGIX_shadow_ambient.SHADOW_AMBIENT_SGIX),
                TEXTURE_WRAP_Q_SGIS = ((int)SGIS_texture4D.TEXTURE_WRAP_Q_SGIS),
                DETAIL_TEXTURE_MODE_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_MODE_SGIS),
                TEXTURE_CLIPMAP_FRAME_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_FRAME_SGIX),
                DUAL_TEXTURE_SELECT_SGIS = ((int)SGIS_texture_select.DUAL_TEXTURE_SELECT_SGIS),
                TEXTURE_WRAP_S = ((int)0x2802),
                TEXTURE_LOD_BIAS_S_SGIX = ((int)SGIX_texture_lod_bias.TEXTURE_LOD_BIAS_S_SGIX),
                POST_TEXTURE_FILTER_SCALE_SGIX = ((int)SGIX_texture_scale_bias.POST_TEXTURE_FILTER_SCALE_SGIX),
                DETAIL_TEXTURE_LEVEL_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_LEVEL_SGIS),
                TEXTURE_WRAP_R_EXT = ((int)EXT_texture3D.TEXTURE_WRAP_R_EXT),
                TEXTURE_MIN_FILTER = ((int)0x2801),
                TEXTURE_CLIPMAP_OFFSET_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_OFFSET_SGIX),
                TEXTURE_WRAP_T = ((int)0x2803),
                TEXTURE_MAX_CLAMP_R_SGIX = ((int)SGIX_texture_coordinate_clamp.TEXTURE_MAX_CLAMP_R_SGIX),
                TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = ((int)SGIX_clipmap.TEXTURE_CLIPMAP_LOD_OFFSET_SGIX),
                TEXTURE_PRIORITY = ((int)GetTextureParameter.TEXTURE_PRIORITY),
            }
            
            public enum TextureTarget
            {
                TEXTURE_1D = ((int)GetPName.TEXTURE_1D),
                TEXTURE_MAX_LOD_SGIS = ((int)SGIS_texture_lod.TEXTURE_MAX_LOD_SGIS),
                TEXTURE_2D = ((int)GetPName.TEXTURE_2D),
                TEXTURE_BASE_LEVEL_SGIS = ((int)SGIS_texture_lod.TEXTURE_BASE_LEVEL_SGIS),
                PROXY_TEXTURE_4D_SGIS = ((int)SGIS_texture4D.PROXY_TEXTURE_4D_SGIS),
                PROXY_TEXTURE_2D = ((int)0x8064),
                TEXTURE_4D_SGIS = ((int)SGIS_texture4D.TEXTURE_4D_SGIS),
                DETAIL_TEXTURE_2D_SGIS = ((int)SGIS_detail_texture.DETAIL_TEXTURE_2D_SGIS),
                PROXY_TEXTURE_1D = ((int)0x8063),
                TEXTURE_MIN_LOD_SGIS = ((int)SGIS_texture_lod.TEXTURE_MIN_LOD_SGIS),
                TEXTURE_MAX_LEVEL_SGIS = ((int)SGIS_texture_lod.TEXTURE_MAX_LEVEL_SGIS),
                TEXTURE_3D_EXT = ((int)EXT_texture3D.TEXTURE_3D_EXT),
                PROXY_TEXTURE_3D_EXT = ((int)EXT_texture3D.PROXY_TEXTURE_3D_EXT),
            }
            
            public enum TextureWrapMode
            {
                CLAMP_TO_BORDER_SGIS = ((int)SGIS_texture_border_clamp.CLAMP_TO_BORDER_SGIS),
                CLAMP = ((int)0x2900),
                REPEAT = ((int)0x2901),
                CLAMP_TO_EDGE_SGIS = ((int)SGIS_texture_edge_clamp.CLAMP_TO_EDGE_SGIS),
            }
            
            public enum PixelInternalFormat
            {
                LUMINANCE12_ALPHA12 = ((int)0x8047),
                DUAL_LUMINANCE16_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE16_SGIS),
                QUAD_LUMINANCE8_SGIS = ((int)SGIS_texture_select.QUAD_LUMINANCE8_SGIS),
                RGBA16 = ((int)0x805B),
                ALPHA_ICC_SGIX = ((int)SGIX_icc_texture.ALPHA_ICC_SGIX),
                LUMINANCE12 = ((int)0x8041),
                DUAL_ALPHA4_SGIS = ((int)SGIS_texture_select.DUAL_ALPHA4_SGIS),
                INTENSITY4 = ((int)0x804A),
                RGBA12 = ((int)0x805A),
                INTENSITY8 = ((int)0x804B),
                DUAL_ALPHA8_SGIS = ((int)SGIS_texture_select.DUAL_ALPHA8_SGIS),
                DEPTH_COMPONENT16_SGIX = ((int)SGIX_depth_texture.DEPTH_COMPONENT16_SGIX),
                ALPHA16_ICC_SGIX = ((int)SGIX_icc_texture.ALPHA16_ICC_SGIX),
                DUAL_INTENSITY12_SGIS = ((int)SGIS_texture_select.DUAL_INTENSITY12_SGIS),
                LUMINANCE16 = ((int)0x8042),
                LUMINANCE_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE_ICC_SGIX),
                DEPTH_COMPONENT24_SGIX = ((int)SGIX_depth_texture.DEPTH_COMPONENT24_SGIX),
                INTENSITY = ((int)0x8049),
                QUAD_ALPHA4_SGIS = ((int)SGIS_texture_select.QUAD_ALPHA4_SGIS),
                ALPHA12 = ((int)0x803D),
                INTENSITY_ICC_SGIX = ((int)SGIX_icc_texture.INTENSITY_ICC_SGIX),
                LUMINANCE4 = ((int)0x803F),
                LUMINANCE_ALPHA_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE_ALPHA_ICC_SGIX),
                RGB_ICC_SGIX = ((int)SGIX_icc_texture.RGB_ICC_SGIX),
                LUMINANCE4_ALPHA4 = ((int)0x8043),
                INTENSITY16_ICC_SGIX = ((int)SGIX_icc_texture.INTENSITY16_ICC_SGIX),
                RGBA_ICC_SGIX = ((int)SGIX_icc_texture.RGBA_ICC_SGIX),
                DUAL_LUMINANCE12_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE12_SGIS),
                ALPHA16 = ((int)0x803E),
                DUAL_ALPHA16_SGIS = ((int)SGIS_texture_select.DUAL_ALPHA16_SGIS),
                DUAL_ALPHA12_SGIS = ((int)SGIS_texture_select.DUAL_ALPHA12_SGIS),
                RGB2_EXT = ((int)EXT_texture.RGB2_EXT),
                LUMINANCE8 = ((int)0x8040),
                QUAD_INTENSITY8_SGIS = ((int)SGIS_texture_select.QUAD_INTENSITY8_SGIS),
                DUAL_LUMINANCE_ALPHA4_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE_ALPHA4_SGIS),
                LUMINANCE12_ALPHA4 = ((int)0x8046),
                QUAD_LUMINANCE4_SGIS = ((int)SGIS_texture_select.QUAD_LUMINANCE4_SGIS),
                RGB5 = ((int)0x8050),
                DUAL_LUMINANCE_ALPHA8_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE_ALPHA8_SGIS),
                LUMINANCE8_ALPHA8 = ((int)0x8045),
                DUAL_INTENSITY8_SGIS = ((int)SGIS_texture_select.DUAL_INTENSITY8_SGIS),
                RGB8 = ((int)0x8051),
                R5_G6_B5_A8_ICC_SGIX = ((int)SGIX_icc_texture.R5_G6_B5_A8_ICC_SGIX),
                QUAD_ALPHA8_SGIS = ((int)SGIS_texture_select.QUAD_ALPHA8_SGIS),
                DUAL_INTENSITY4_SGIS = ((int)SGIS_texture_select.DUAL_INTENSITY4_SGIS),
                RGB10_A2 = ((int)0x8059),
                INTENSITY12 = ((int)0x804C),
                RGBA4 = ((int)0x8056),
                RGB5_A1 = ((int)0x8057),
                R3_G3_B2 = ((int)0x2A10),
                R5_G6_B5_ICC_SGIX = ((int)SGIX_icc_texture.R5_G6_B5_ICC_SGIX),
                RGBA2 = ((int)0x8055),
                DUAL_INTENSITY16_SGIS = ((int)SGIS_texture_select.DUAL_INTENSITY16_SGIS),
                QUAD_INTENSITY4_SGIS = ((int)SGIS_texture_select.QUAD_INTENSITY4_SGIS),
                DUAL_LUMINANCE8_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE8_SGIS),
                RGB16 = ((int)0x8054),
                ALPHA4 = ((int)0x803B),
                RGBA8 = ((int)0x8058),
                INTENSITY16 = ((int)0x804D),
                LUMINANCE16_ALPHA8_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE16_ALPHA8_ICC_SGIX),
                LUMINANCE16_ALPHA16 = ((int)0x8048),
                LUMINANCE16_ICC_SGIX = ((int)SGIX_icc_texture.LUMINANCE16_ICC_SGIX),
                ALPHA8 = ((int)0x803C),
                RGB4 = ((int)0x804F),
                DEPTH_COMPONENT32_SGIX = ((int)SGIX_depth_texture.DEPTH_COMPONENT32_SGIX),
                RGB10 = ((int)0x8052),
                RGB12 = ((int)0x8053),
                LUMINANCE6_ALPHA2 = ((int)0x8044),
                DUAL_LUMINANCE4_SGIS = ((int)SGIS_texture_select.DUAL_LUMINANCE4_SGIS),
            }
            
            public enum InterleavedArrayFormat
            {
                T2F_C4UB_V3F = ((int)0x2A29),
                T2F_N3F_V3F = ((int)0x2A2B),
                T4F_V4F = ((int)0x2A28),
                T2F_V3F = ((int)0x2A27),
                V2F = ((int)0x2A20),
                T2F_C4F_N3F_V3F = ((int)0x2A2C),
                T4F_C4F_N3F_V4F = ((int)0x2A2D),
                T2F_C3F_V3F = ((int)0x2A2A),
                C3F_V3F = ((int)0x2A24),
                C4F_N3F_V3F = ((int)0x2A26),
                V3F = ((int)0x2A21),
                N3F_V3F = ((int)0x2A25),
                C4UB_V2F = ((int)0x2A22),
                C4UB_V3F = ((int)0x2A23),
            }
            
            public enum VertexPointerType
            {
                DOUBLE = ((int)DataType.DOUBLE),
                INT = ((int)DataType.INT),
                SHORT = ((int)DataType.SHORT),
                FLOAT = ((int)DataType.FLOAT),
            }
            
            public enum ClipPlaneName
            {
                CLIP_PLANE3 = ((int)0x3003),
                CLIP_PLANE2 = ((int)0x3002),
                CLIP_PLANE5 = ((int)0x3005),
                CLIP_PLANE1 = ((int)0x3001),
                CLIP_PLANE0 = ((int)0x3000),
                CLIP_PLANE4 = ((int)0x3004),
            }
            
            public enum LightName
            {
                FRAGMENT_LIGHT4_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT4_SGIX),
                FRAGMENT_LIGHT5_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT5_SGIX),
                LIGHT4 = ((int)0x4004),
                LIGHT3 = ((int)0x4003),
                FRAGMENT_LIGHT7_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT7_SGIX),
                LIGHT6 = ((int)0x4006),
                FRAGMENT_LIGHT1_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT1_SGIX),
                LIGHT5 = ((int)0x4005),
                LIGHT0 = ((int)0x4000),
                FRAGMENT_LIGHT3_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT3_SGIX),
                FRAGMENT_LIGHT2_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT2_SGIX),
                LIGHT7 = ((int)0x4007),
                LIGHT2 = ((int)0x4002),
                FRAGMENT_LIGHT0_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT0_SGIX),
                LIGHT1 = ((int)0x4001),
                FRAGMENT_LIGHT6_SGIX = ((int)SGIX_fragment_lighting.FRAGMENT_LIGHT6_SGIX),
            }
            
            public enum EXT_abgr
            {
                ABGR_EXT = ((int)0x8000),
            }
            
            public enum EXT_blend_color
            {
                CONSTANT_COLOR_EXT = ((int)0x8001),
                CONSTANT_ALPHA = ((int)0x8003),
                BLEND_COLOR_EXT = ((int)0x8005),
                CONSTANT_ALPHA_EXT = ((int)0x8003),
                ONE_MINUS_CONSTANT_COLOR_EXT = ((int)0x8002),
                ONE_MINUS_CONSTANT_COLOR = ((int)0x8002),
                ONE_MINUS_CONSTANT_ALPHA_EXT = ((int)0x8004),
                CONSTANT_COLOR = ((int)0x8001),
                BLEND_COLOR = ((int)0x8005),
                ONE_MINUS_CONSTANT_ALPHA = ((int)0x8004),
            }
            
            public enum EXT_blend_minmax
            {
                MAX_EXT = ((int)0x8008),
                BLEND_EQUATION_EXT = ((int)0x8009),
                MIN = ((int)0x8007),
                FUNC_ADD_EXT = ((int)0x8006),
                FUNC_ADD = ((int)0x8006),
                MAX = ((int)0x8008),
                MIN_EXT = ((int)0x8007),
                BLEND_EQUATION = ((int)0x8009),
            }
            
            public enum EXT_blend_subtract
            {
                FUNC_SUBTRACT = ((int)0x800A),
                FUNC_REVERSE_SUBTRACT = ((int)0x800B),
                FUNC_REVERSE_SUBTRACT_EXT = ((int)0x800B),
                FUNC_SUBTRACT_EXT = ((int)0x800A),
            }
            
            public enum EXT_cmyka
            {
                UNPACK_CMYK_HINT_EXT = ((int)0x800F),
                PACK_CMYK_HINT_EXT = ((int)0x800E),
                CMYKA_EXT = ((int)0x800D),
                CMYK_EXT = ((int)0x800C),
            }
            
            public enum EXT_convolution
            {
                CONVOLUTION_WIDTH = ((int)0x8018),
                CONVOLUTION_1D = ((int)0x8010),
                CONVOLUTION_FILTER_SCALE_EXT = ((int)0x8014),
                CONVOLUTION_2D = ((int)0x8011),
                CONVOLUTION_WIDTH_EXT = ((int)0x8018),
                POST_CONVOLUTION_ALPHA_BIAS = ((int)0x8023),
                POST_CONVOLUTION_ALPHA_SCALE_EXT = ((int)0x801F),
                POST_CONVOLUTION_BLUE_BIAS_EXT = ((int)0x8022),
                CONVOLUTION_FILTER_SCALE = ((int)0x8014),
                POST_CONVOLUTION_GREEN_SCALE_EXT = ((int)0x801D),
                SEPARABLE_2D = ((int)0x8012),
                CONVOLUTION_FORMAT = ((int)0x8017),
                POST_CONVOLUTION_BLUE_SCALE = ((int)0x801E),
                CONVOLUTION_BORDER_MODE_EXT = ((int)0x8013),
                POST_CONVOLUTION_GREEN_SCALE = ((int)0x801D),
                POST_CONVOLUTION_RED_SCALE_EXT = ((int)0x801C),
                REDUCE_EXT = ((int)0x8016),
                CONVOLUTION_1D_EXT = ((int)0x8010),
                MAX_CONVOLUTION_WIDTH_EXT = ((int)0x801A),
                CONVOLUTION_FORMAT_EXT = ((int)0x8017),
                POST_CONVOLUTION_BLUE_BIAS = ((int)0x8022),
                CONVOLUTION_HEIGHT = ((int)0x8019),
                SEPARABLE_2D_EXT = ((int)0x8012),
                CONVOLUTION_2D_EXT = ((int)0x8011),
                MAX_CONVOLUTION_WIDTH = ((int)0x801A),
                POST_CONVOLUTION_ALPHA_BIAS_EXT = ((int)0x8023),
                POST_CONVOLUTION_GREEN_BIAS_EXT = ((int)0x8021),
                POST_CONVOLUTION_RED_BIAS_EXT = ((int)0x8020),
                REDUCE = ((int)0x8016),
                MAX_CONVOLUTION_HEIGHT_EXT = ((int)0x801B),
                CONVOLUTION_BORDER_MODE = ((int)0x8013),
                POST_CONVOLUTION_ALPHA_SCALE = ((int)0x801F),
                POST_CONVOLUTION_BLUE_SCALE_EXT = ((int)0x801E),
                POST_CONVOLUTION_RED_BIAS = ((int)0x8020),
                CONVOLUTION_FILTER_BIAS_EXT = ((int)0x8015),
                POST_CONVOLUTION_RED_SCALE = ((int)0x801C),
                CONVOLUTION_HEIGHT_EXT = ((int)0x8019),
                MAX_CONVOLUTION_HEIGHT = ((int)0x801B),
                CONVOLUTION_FILTER_BIAS = ((int)0x8015),
                POST_CONVOLUTION_GREEN_BIAS = ((int)0x8021),
            }
            
            public enum EXT_histogram
            {
                HISTOGRAM_WIDTH = ((int)0x8026),
                PROXY_HISTOGRAM = ((int)0x8025),
                MINMAX_EXT = ((int)0x802E),
                MINMAX_SINK_EXT = ((int)0x8030),
                MINMAX_FORMAT_EXT = ((int)0x802F),
                HISTOGRAM_BLUE_SIZE = ((int)0x802A),
                HISTOGRAM_SINK_EXT = ((int)0x802D),
                HISTOGRAM_LUMINANCE_SIZE = ((int)0x802C),
                HISTOGRAM_LUMINANCE_SIZE_EXT = ((int)0x802C),
                HISTOGRAM_EXT = ((int)0x8024),
                HISTOGRAM_ALPHA_SIZE = ((int)0x802B),
                HISTOGRAM_FORMAT_EXT = ((int)0x8027),
                HISTOGRAM_RED_SIZE_EXT = ((int)0x8028),
                MINMAX = ((int)0x802E),
                MINMAX_SINK = ((int)0x8030),
                PROXY_HISTOGRAM_EXT = ((int)0x8025),
                HISTOGRAM_RED_SIZE = ((int)0x8028),
                HISTOGRAM_ALPHA_SIZE_EXT = ((int)0x802B),
                HISTOGRAM_BLUE_SIZE_EXT = ((int)0x802A),
                MINMAX_FORMAT = ((int)0x802F),
                HISTOGRAM_WIDTH_EXT = ((int)0x8026),
                HISTOGRAM_FORMAT = ((int)0x8027),
                TABLE_TOO_LARGE = ((int)0x8031),
                HISTOGRAM_SINK = ((int)0x802D),
                HISTOGRAM_GREEN_SIZE_EXT = ((int)0x8029),
                TABLE_TOO_LARGE_EXT = ((int)0x8031),
                HISTOGRAM = ((int)0x8024),
                HISTOGRAM_GREEN_SIZE = ((int)0x8029),
            }
            
            public enum EXT_packed_pixels
            {
                UNSIGNED_BYTE_3_3_2 = ((int)0x8032),
                UNSIGNED_INT_2_10_10_10_REV = ((int)0x8368),
                UNSIGNED_INT_10_10_10_2 = ((int)0x8036),
                UNSIGNED_SHORT_4_4_4_4_REV = ((int)0x8365),
                UNSIGNED_SHORT_5_6_5_REV_EXT = ((int)0x8364),
                UNSIGNED_INT_8_8_8_8 = ((int)0x8035),
                UNSIGNED_SHORT_5_6_5 = ((int)0x8363),
                UNSIGNED_INT_8_8_8_8_REV = ((int)0x8367),
                UNSIGNED_SHORT_1_5_5_5_REV = ((int)0x8366),
                UNSIGNED_INT_8_8_8_8_EXT = ((int)0x8035),
                UNSIGNED_SHORT_1_5_5_5_REV_EXT = ((int)0x8366),
                UNSIGNED_SHORT_5_6_5_REV = ((int)0x8364),
                UNSIGNED_SHORT_4_4_4_4_REV_EXT = ((int)0x8365),
                UNSIGNED_INT_2_10_10_10_REV_EXT = ((int)0x8368),
                UNSIGNED_BYTE_2_3_3_REV = ((int)0x8362),
                UNSIGNED_BYTE_2_3_3_REV_EXT = ((int)0x8362),
                UNSIGNED_SHORT_4_4_4_4_EXT = ((int)0x8033),
                UNSIGNED_INT_10_10_10_2_EXT = ((int)0x8036),
                UNSIGNED_SHORT_5_6_5_EXT = ((int)0x8363),
                UNSIGNED_SHORT_5_5_5_1 = ((int)0x8034),
                UNSIGNED_INT_8_8_8_8_REV_EXT = ((int)0x8367),
                UNSIGNED_SHORT_5_5_5_1_EXT = ((int)0x8034),
                UNSIGNED_BYTE_3_3_2_EXT = ((int)0x8032),
                UNSIGNED_SHORT_4_4_4_4 = ((int)0x8033),
            }
            
            public enum EXT_polygon_offset
            {
                POLYGON_OFFSET_BIAS_EXT = ((int)0x8039),
                POLYGON_OFFSET_EXT = ((int)0x8037),
                POLYGON_OFFSET_FACTOR_EXT = ((int)0x8038),
            }
            
            public enum EXT_rescale_normal
            {
                RESCALE_NORMAL_EXT = ((int)0x803A),
                RESCALE_NORMAL = ((int)0x803A),
            }
            
            public enum EXT_texture
            {
                LUMINANCE8_ALPHA8_EXT = ((int)0x8045),
                RGBA12_EXT = ((int)0x805A),
                INTENSITY12_EXT = ((int)0x804C),
                RGB16_EXT = ((int)0x8054),
                REPLACE_EXT = ((int)0x8062),
                RGB5_A1_EXT = ((int)0x8057),
                RGB5_EXT = ((int)0x8050),
                TEXTURE_INTENSITY_SIZE_EXT = ((int)0x8061),
                ALPHA12_EXT = ((int)0x803D),
                RGB4_EXT = ((int)0x804F),
                TEXTURE_LUMINANCE_SIZE_EXT = ((int)0x8060),
                RGBA16_EXT = ((int)0x805B),
                RGB8_EXT = ((int)0x8051),
                RGBA8_EXT = ((int)0x8058),
                RGB12_EXT = ((int)0x8053),
                LUMINANCE12_ALPHA12_EXT = ((int)0x8047),
                INTENSITY4_EXT = ((int)0x804A),
                INTENSITY8_EXT = ((int)0x804B),
                RGB10_A2_EXT = ((int)0x8059),
                RGB10_EXT = ((int)0x8052),
                LUMINANCE8_EXT = ((int)0x8040),
                TEXTURE_RED_SIZE_EXT = ((int)0x805C),
                LUMINANCE12_EXT = ((int)0x8041),
                PROXY_TEXTURE_2D_EXT = ((int)0x8064),
                LUMINANCE4_EXT = ((int)0x803F),
                INTENSITY16_EXT = ((int)0x804D),
                TEXTURE_GREEN_SIZE_EXT = ((int)0x805D),
                LUMINANCE16_ALPHA16_EXT = ((int)0x8048),
                TEXTURE_ALPHA_SIZE_EXT = ((int)0x805F),
                LUMINANCE16_EXT = ((int)0x8042),
                PROXY_TEXTURE_1D_EXT = ((int)0x8063),
                RGBA4_EXT = ((int)0x8056),
                INTENSITY_EXT = ((int)0x8049),
                RGBA2_EXT = ((int)0x8055),
                ALPHA16_EXT = ((int)0x803E),
                TEXTURE_TOO_LARGE_EXT = ((int)0x8065),
                ALPHA8_EXT = ((int)0x803C),
                ALPHA4_EXT = ((int)0x803B),
                LUMINANCE4_ALPHA4_EXT = ((int)0x8043),
                LUMINANCE6_ALPHA2_EXT = ((int)0x8044),
                TEXTURE_BLUE_SIZE_EXT = ((int)0x805E),
                RGB2_EXT = ((int)0x804E),
                LUMINANCE12_ALPHA4_EXT = ((int)0x8046),
            }
            
            public enum EXT_texture_object
            {
                TEXTURE_2D_BINDING_EXT = ((int)0x8069),
                TEXTURE_1D_BINDING_EXT = ((int)0x8068),
                TEXTURE_PRIORITY_EXT = ((int)0x8066),
                TEXTURE_3D_BINDING_EXT = ((int)0x806A),
                TEXTURE_RESIDENT_EXT = ((int)0x8067),
            }
            
            public enum EXT_texture3D
            {
                TEXTURE_WRAP_R = ((int)0x8072),
                UNPACK_IMAGE_HEIGHT_EXT = ((int)0x806E),
                PROXY_TEXTURE_3D = ((int)0x8070),
                UNPACK_SKIP_IMAGES_EXT = ((int)0x806D),
                MAX_3D_TEXTURE_SIZE = ((int)0x8073),
                TEXTURE_3D_EXT = ((int)0x806F),
                PACK_SKIP_IMAGES = ((int)0x806B),
                PACK_IMAGE_HEIGHT = ((int)0x806C),
                PROXY_TEXTURE_3D_EXT = ((int)0x8070),
                MAX_3D_TEXTURE_SIZE_EXT = ((int)0x8073),
                TEXTURE_DEPTH_EXT = ((int)0x8071),
                TEXTURE_DEPTH = ((int)0x8071),
                PACK_SKIP_IMAGES_EXT = ((int)0x806B),
                TEXTURE_WRAP_R_EXT = ((int)0x8072),
                UNPACK_SKIP_IMAGES = ((int)0x806D),
                UNPACK_IMAGE_HEIGHT = ((int)0x806E),
                TEXTURE_3D = ((int)0x806F),
                PACK_IMAGE_HEIGHT_EXT = ((int)0x806C),
            }
            
            public enum EXT_vertex_array
            {
                TEXTURE_COORD_ARRAY_POINTER_EXT = ((int)0x8092),
                NORMAL_ARRAY_COUNT_EXT = ((int)0x8080),
                INDEX_ARRAY_TYPE_EXT = ((int)0x8085),
                VERTEX_ARRAY_TYPE_EXT = ((int)0x807B),
                INDEX_ARRAY_COUNT_EXT = ((int)0x8087),
                TEXTURE_COORD_ARRAY_SIZE_EXT = ((int)0x8088),
                COLOR_ARRAY_POINTER_EXT = ((int)0x8090),
                INDEX_ARRAY_POINTER_EXT = ((int)0x8091),
                COLOR_ARRAY_TYPE_EXT = ((int)0x8082),
                NORMAL_ARRAY_POINTER_EXT = ((int)0x808F),
                TEXTURE_COORD_ARRAY_COUNT_EXT = ((int)0x808B),
                VERTEX_ARRAY_SIZE_EXT = ((int)0x807A),
                VERTEX_ARRAY_STRIDE_EXT = ((int)0x807C),
                VERTEX_ARRAY_POINTER_EXT = ((int)0x808E),
                INDEX_ARRAY_STRIDE_EXT = ((int)0x8086),
                VERTEX_ARRAY_COUNT_EXT = ((int)0x807D),
                EDGE_FLAG_ARRAY_POINTER_EXT = ((int)0x8093),
                TEXTURE_COORD_ARRAY_EXT = ((int)0x8078),
                VERTEX_ARRAY_EXT = ((int)0x8074),
                TEXTURE_COORD_ARRAY_STRIDE_EXT = ((int)0x808A),
                COLOR_ARRAY_EXT = ((int)0x8076),
                COLOR_ARRAY_SIZE_EXT = ((int)0x8081),
                TEXTURE_COORD_ARRAY_TYPE_EXT = ((int)0x8089),
                NORMAL_ARRAY_TYPE_EXT = ((int)0x807E),
                NORMAL_ARRAY_STRIDE_EXT = ((int)0x807F),
                COLOR_ARRAY_COUNT_EXT = ((int)0x8084),
                EDGE_FLAG_ARRAY_STRIDE_EXT = ((int)0x808C),
                EDGE_FLAG_ARRAY_EXT = ((int)0x8079),
                INDEX_ARRAY_EXT = ((int)0x8077),
                NORMAL_ARRAY_EXT = ((int)0x8075),
                EDGE_FLAG_ARRAY_COUNT_EXT = ((int)0x808D),
                COLOR_ARRAY_STRIDE_EXT = ((int)0x8083),
            }
            
            public enum SGIX_interlace
            {
                INTERLACE_SGIX = ((int)0x8094),
            }
            
            public enum SGIS_detail_texture
            {
                DETAIL_TEXTURE_MODE_SGIS = ((int)0x809B),
                DETAIL_TEXTURE_2D_BINDING_SGIS = ((int)0x8096),
                DETAIL_TEXTURE_LEVEL_SGIS = ((int)0x809A),
                DETAIL_TEXTURE_2D_SGIS = ((int)0x8095),
                LINEAR_DETAIL_SGIS = ((int)0x8097),
                DETAIL_TEXTURE_FUNC_POINTS_SGIS = ((int)0x809C),
                LINEAR_DETAIL_ALPHA_SGIS = ((int)0x8098),
                LINEAR_DETAIL_COLOR_SGIS = ((int)0x8099),
            }
            
            public enum ARB_multisample
            {
                SAMPLE_COVERAGE_VALUE_ARB = ((int)0x80AA),
                SAMPLES_ARB = ((int)0x80A9),
                SAMPLE_BUFFERS = ((int)0x80A8),
                SAMPLE_COVERAGE = ((int)0x80A0),
                MULTISAMPLE_ARB = ((int)0x809D),
                SAMPLE_ALPHA_TO_COVERAGE = ((int)0x809E),
                SAMPLE_BUFFERS_ARB = ((int)0x80A8),
                SAMPLE_COVERAGE_ARB = ((int)0x80A0),
                SAMPLE_COVERAGE_INVERT_ARB = ((int)0x80AB),
                SAMPLE_COVERAGE_INVERT = ((int)0x80AB),
                MULTISAMPLE = ((int)0x809D),
                SAMPLE_ALPHA_TO_ONE_ARB = ((int)0x809F),
                SAMPLE_ALPHA_TO_ONE = ((int)0x809F),
                SAMPLES = ((int)0x80A9),
                SAMPLE_ALPHA_TO_COVERAGE_ARB = ((int)0x809E),
                MULTISAMPLE_BIT_ARB = ((int)0x20000000),
                SAMPLE_COVERAGE_VALUE = ((int)0x80AA),
            }
            
            public enum SGIS_multisample
            {
                SAMPLE_PATTERN_SGIS = ((int)0x80AC),
                GL_4PASS_0_SGIS = ((int)0x80A4),
                GL_4PASS_1_SGIS = ((int)0x80A5),
                GL_4PASS_2_SGIS = ((int)0x80A6),
                SAMPLES_SGIS = ((int)0x80A9),
                MULTISAMPLE_SGIS = ((int)0x809D),
                GL_4PASS_3_SGIS = ((int)0x80A7),
                SAMPLE_MASK_SGIS = ((int)0x80A0),
                GL_2PASS_0_SGIS = ((int)0x80A2),
                GL_2PASS_1_SGIS = ((int)0x80A3),
                SAMPLE_ALPHA_TO_MASK_SGIS = ((int)0x809E),
                GL_1PASS_SGIS = ((int)0x80A1),
                SAMPLE_MASK_INVERT_SGIS = ((int)0x80AB),
                SAMPLE_BUFFERS_SGIS = ((int)0x80A8),
                SAMPLE_MASK_VALUE_SGIS = ((int)0x80AA),
                SAMPLE_ALPHA_TO_ONE_SGIS = ((int)0x809F),
            }
            
            public enum SGIS_sharpen_texture
            {
                LINEAR_SHARPEN_SGIS = ((int)0x80AD),
                LINEAR_SHARPEN_ALPHA_SGIS = ((int)0x80AE),
                LINEAR_SHARPEN_COLOR_SGIS = ((int)0x80AF),
                SHARPEN_TEXTURE_FUNC_POINTS_SGIS = ((int)0x80B0),
            }
            
            public enum SGI_color_matrix
            {
                POST_COLOR_MATRIX_RED_BIAS_SGI = ((int)0x80B8),
                POST_COLOR_MATRIX_BLUE_BIAS_SGI = ((int)0x80BA),
                COLOR_MATRIX_SGI = ((int)0x80B1),
                POST_COLOR_MATRIX_BLUE_SCALE_SGI = ((int)0x80B6),
                POST_COLOR_MATRIX_GREEN_BIAS = ((int)0x80B9),
                POST_COLOR_MATRIX_BLUE_SCALE = ((int)0x80B6),
                POST_COLOR_MATRIX_ALPHA_BIAS_SGI = ((int)0x80BB),
                COLOR_MATRIX_STACK_DEPTH_SGI = ((int)0x80B2),
                POST_COLOR_MATRIX_GREEN_BIAS_SGI = ((int)0x80B9),
                POST_COLOR_MATRIX_ALPHA_SCALE_SGI = ((int)0x80B7),
                POST_COLOR_MATRIX_GREEN_SCALE = ((int)0x80B5),
                POST_COLOR_MATRIX_RED_BIAS = ((int)0x80B8),
                MAX_COLOR_MATRIX_STACK_DEPTH_SGI = ((int)0x80B3),
                POST_COLOR_MATRIX_ALPHA_SCALE = ((int)0x80B7),
                COLOR_MATRIX_STACK_DEPTH = ((int)0x80B2),
                POST_COLOR_MATRIX_BLUE_BIAS = ((int)0x80BA),
                COLOR_MATRIX = ((int)0x80B1),
                POST_COLOR_MATRIX_GREEN_SCALE_SGI = ((int)0x80B5),
                POST_COLOR_MATRIX_RED_SCALE = ((int)0x80B4),
                MAX_COLOR_MATRIX_STACK_DEPTH = ((int)0x80B3),
                POST_COLOR_MATRIX_ALPHA_BIAS = ((int)0x80BB),
                POST_COLOR_MATRIX_RED_SCALE_SGI = ((int)0x80B4),
            }
            
            public enum SGI_texture_color_table
            {
                TEXTURE_COLOR_TABLE_SGI = ((int)0x80BC),
                PROXY_TEXTURE_COLOR_TABLE_SGI = ((int)0x80BD),
            }
            
            public enum SGIX_texture_add_env
            {
                TEXTURE_ENV_BIAS_SGIX = ((int)0x80BE),
            }
            
            public enum SGIX_shadow_ambient
            {
                SHADOW_AMBIENT_SGIX = ((int)0x80BF),
            }
            
            public enum SGI_color_table
            {
                COLOR_TABLE_SGI = ((int)0x80D0),
                COLOR_TABLE_FORMAT_SGI = ((int)0x80D8),
                COLOR_TABLE_SCALE = ((int)0x80D6),
                COLOR_TABLE_SCALE_SGI = ((int)0x80D6),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)0x80D5),
                COLOR_TABLE_INTENSITY_SIZE_SGI = ((int)0x80DF),
                COLOR_TABLE_WIDTH_SGI = ((int)0x80D9),
                COLOR_TABLE_BIAS = ((int)0x80D7),
                COLOR_TABLE_BLUE_SIZE = ((int)0x80DC),
                POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D2),
                COLOR_TABLE_FORMAT = ((int)0x80D8),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D5),
                PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)0x80D4),
                PROXY_COLOR_TABLE_SGI = ((int)0x80D3),
                COLOR_TABLE_GREEN_SIZE = ((int)0x80DB),
                PROXY_COLOR_TABLE = ((int)0x80D3),
                COLOR_TABLE_LUMINANCE_SIZE_SGI = ((int)0x80DE),
                COLOR_TABLE_ALPHA_SIZE = ((int)0x80DD),
                POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D1),
                COLOR_TABLE_BIAS_SGI = ((int)0x80D7),
                COLOR_TABLE_WIDTH = ((int)0x80D9),
                POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)0x80D2),
                COLOR_TABLE_BLUE_SIZE_SGI = ((int)0x80DC),
                COLOR_TABLE = ((int)0x80D0),
                PROXY_POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D4),
                COLOR_TABLE_RED_SIZE_SGI = ((int)0x80DA),
                COLOR_TABLE_LUMINANCE_SIZE = ((int)0x80DE),
                POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)0x80D1),
                COLOR_TABLE_GREEN_SIZE_SGI = ((int)0x80DB),
                COLOR_TABLE_RED_SIZE = ((int)0x80DA),
                COLOR_TABLE_INTENSITY_SIZE = ((int)0x80DF),
                COLOR_TABLE_ALPHA_SIZE_SGI = ((int)0x80DD),
            }
            
            public enum EXT_bgra
            {
                BGRA = ((int)0x80E1),
                BGR_EXT = ((int)0x80E0),
                BGRA_EXT = ((int)0x80E1),
                BGR = ((int)0x80E0),
            }
            
            public enum VERSION_1_2
            {
                TEXTURE_BASE_LEVEL = ((int)0x813C),
                UNSIGNED_SHORT_5_6_5_REV = ((int)0x8364),
                PACK_IMAGE_HEIGHT = ((int)0x806C),
                MAX_ELEMENTS_INDICES = ((int)0x80E9),
                UNPACK_SKIP_IMAGES = ((int)0x806D),
                LIGHT_MODEL_COLOR_CONTROL = ((int)0x81F8),
                UNSIGNED_INT_8_8_8_8_REV = ((int)0x8367),
                SMOOTH_LINE_WIDTH_RANGE = ((int)0x0B22),
                TEXTURE_WRAP_R = ((int)0x8072),
                PACK_SKIP_IMAGES = ((int)0x806B),
                UNSIGNED_BYTE_2_3_3_REV = ((int)0x8362),
                UNSIGNED_SHORT_5_6_5 = ((int)0x8363),
                UNSIGNED_INT_8_8_8_8 = ((int)0x8035),
                PROXY_TEXTURE_3D = ((int)0x8070),
                SMOOTH_POINT_SIZE_GRANULARITY = ((int)0x0B13),
                UNSIGNED_SHORT_5_5_5_1 = ((int)0x8034),
                TEXTURE_MAX_LOD = ((int)0x813B),
                UNSIGNED_BYTE_3_3_2 = ((int)0x8032),
                TEXTURE_MAX_LEVEL = ((int)0x813D),
                BGRA = ((int)0x80E1),
                SEPARATE_SPECULAR_COLOR = ((int)0x81FA),
                ALIASED_POINT_SIZE_RANGE = ((int)0x846D),
                SMOOTH_LINE_WIDTH_GRANULARITY = ((int)0x0B23),
                SINGLE_COLOR = ((int)0x81F9),
                RESCALE_NORMAL = ((int)0x803A),
                UNSIGNED_INT_10_10_10_2 = ((int)0x8036),
                ALIASED_LINE_WIDTH_RANGE = ((int)0x846E),
                UNPACK_IMAGE_HEIGHT = ((int)0x806E),
                UNSIGNED_SHORT_1_5_5_5_REV = ((int)0x8366),
                TEXTURE_MIN_LOD = ((int)0x813A),
                MAX_3D_TEXTURE_SIZE = ((int)0x8073),
                TEXTURE_3D = ((int)0x806F),
                SMOOTH_POINT_SIZE_RANGE = ((int)0x0B12),
                MAX_ELEMENTS_VERTICES = ((int)0x80E8),
                TEXTURE_DEPTH = ((int)0x8071),
                UNSIGNED_INT_2_10_10_10_REV = ((int)0x8368),
                TEXTURE_BINDING_3D = ((int)0x806A),
                UNSIGNED_SHORT_4_4_4_4 = ((int)0x8033),
                UNSIGNED_SHORT_4_4_4_4_REV = ((int)0x8365),
                BGR = ((int)0x80E0),
                CLAMP_TO_EDGE = ((int)0x812F),
            }
            
            public enum SGIS_texture_select
            {
                DUAL_ALPHA16_SGIS = ((int)0x8113),
                QUAD_ALPHA8_SGIS = ((int)0x811F),
                DUAL_LUMINANCE_ALPHA4_SGIS = ((int)0x811C),
                DUAL_LUMINANCE12_SGIS = ((int)0x8116),
                DUAL_ALPHA4_SGIS = ((int)0x8110),
                QUAD_TEXTURE_SELECT_SGIS = ((int)0x8125),
                DUAL_ALPHA12_SGIS = ((int)0x8112),
                QUAD_INTENSITY4_SGIS = ((int)0x8122),
                DUAL_INTENSITY16_SGIS = ((int)0x811B),
                DUAL_INTENSITY4_SGIS = ((int)0x8118),
                DUAL_LUMINANCE4_SGIS = ((int)0x8114),
                QUAD_INTENSITY8_SGIS = ((int)0x8123),
                DUAL_LUMINANCE16_SGIS = ((int)0x8117),
                DUAL_LUMINANCE8_SGIS = ((int)0x8115),
                QUAD_LUMINANCE8_SGIS = ((int)0x8121),
                DUAL_TEXTURE_SELECT_SGIS = ((int)0x8124),
                DUAL_ALPHA8_SGIS = ((int)0x8111),
                DUAL_INTENSITY12_SGIS = ((int)0x811A),
                DUAL_LUMINANCE_ALPHA8_SGIS = ((int)0x811D),
                QUAD_LUMINANCE4_SGIS = ((int)0x8120),
                DUAL_INTENSITY8_SGIS = ((int)0x8119),
                QUAD_ALPHA4_SGIS = ((int)0x811E),
            }
            
            public enum SGIS_point_parameters
            {
                POINT_SIZE_MIN_SGIS = ((int)0x8126),
                POINT_SIZE_MAX_SGIS = ((int)0x8127),
                POINT_DISTANCE_ATTENUATION = ((int)0x8129),
                DISTANCE_ATTENUATION_EXT = ((int)0x8129),
                POINT_FADE_THRESHOLD_SIZE = ((int)0x8128),
                POINT_FADE_THRESHOLD_SIZE_SGIS = ((int)0x8128),
                POINT_SIZE_MIN_EXT = ((int)0x8126),
                POINT_SIZE_MAX = ((int)0x8127),
                POINT_DISTANCE_ATTENUATION_ARB = ((int)0x8129),
                POINT_SIZE_MIN = ((int)0x8126),
                POINT_FADE_THRESHOLD_SIZE_EXT = ((int)0x8128),
                DISTANCE_ATTENUATION_SGIS = ((int)0x8129),
                POINT_SIZE_MAX_EXT = ((int)0x8127),
                POINT_FADE_THRESHOLD_SIZE_ARB = ((int)0x8128),
                POINT_SIZE_MAX_ARB = ((int)0x8127),
                POINT_SIZE_MIN_ARB = ((int)0x8126),
            }
            
            public enum SGIS_fog_function
            {
                FOG_FUNC_POINTS_SGIS = ((int)0x812B),
                MAX_FOG_FUNC_POINTS_SGIS = ((int)0x812C),
                FOG_FUNC_SGIS = ((int)0x812A),
            }
            
            public enum SGIS_texture_border_clamp
            {
                CLAMP_TO_BORDER_SGIS = ((int)0x812D),
                CLAMP_TO_BORDER_ARB = ((int)0x812D),
                CLAMP_TO_BORDER = ((int)0x812D),
            }
            
            public enum SGIX_texture_multi_buffer
            {
                TEXTURE_MULTI_BUFFER_HINT_SGIX = ((int)0x812E),
            }
            
            public enum SGIS_texture_edge_clamp
            {
                CLAMP_TO_EDGE_SGIS = ((int)0x812F),
                CLAMP_TO_EDGE = ((int)0x812F),
            }
            
            public enum SGIS_texture4D
            {
                TEXTURE_4D_BINDING_SGIS = ((int)0x814F),
                PACK_IMAGE_DEPTH_SGIS = ((int)0x8131),
                MAX_4D_TEXTURE_SIZE_SGIS = ((int)0x8138),
                PACK_SKIP_VOLUMES_SGIS = ((int)0x8130),
                TEXTURE_4D_SGIS = ((int)0x8134),
                PROXY_TEXTURE_4D_SGIS = ((int)0x8135),
                UNPACK_IMAGE_DEPTH_SGIS = ((int)0x8133),
                UNPACK_SKIP_VOLUMES_SGIS = ((int)0x8132),
                TEXTURE_4DSIZE_SGIS = ((int)0x8136),
                TEXTURE_WRAP_Q_SGIS = ((int)0x8137),
            }
            
            public enum SGIX_pixel_texture
            {
                PIXEL_TEX_GEN_SGIX = ((int)0x8139),
                PIXEL_TEX_GEN_MODE_SGIX = ((int)0x832B),
            }
            
            public enum SGIS_texture_lod
            {
                TEXTURE_MAX_LOD_SGIS = ((int)0x813B),
                TEXTURE_MAX_LEVEL = ((int)0x813D),
                TEXTURE_BASE_LEVEL_SGIS = ((int)0x813C),
                TEXTURE_MIN_LOD_SGIS = ((int)0x813A),
                TEXTURE_MIN_LOD = ((int)0x813A),
                TEXTURE_MAX_LOD = ((int)0x813B),
                TEXTURE_BASE_LEVEL = ((int)0x813C),
                TEXTURE_MAX_LEVEL_SGIS = ((int)0x813D),
            }
            
            public enum SGIX_pixel_tiles
            {
                PIXEL_TILE_CACHE_INCREMENT_SGIX = ((int)0x813F),
                PIXEL_TILE_GRID_WIDTH_SGIX = ((int)0x8142),
                PIXEL_TILE_GRID_HEIGHT_SGIX = ((int)0x8143),
                PIXEL_TILE_HEIGHT_SGIX = ((int)0x8141),
                PIXEL_TILE_CACHE_SIZE_SGIX = ((int)0x8145),
                PIXEL_TILE_BEST_ALIGNMENT_SGIX = ((int)0x813E),
                PIXEL_TILE_GRID_DEPTH_SGIX = ((int)0x8144),
                PIXEL_TILE_WIDTH_SGIX = ((int)0x8140),
            }
            
            public enum SGIS_texture_filter4
            {
                TEXTURE_FILTER4_SIZE_SGIS = ((int)0x8147),
                FILTER4_SGIS = ((int)0x8146),
            }
            
            public enum SGIX_sprite
            {
                SPRITE_SGIX = ((int)0x8148),
                SPRITE_MODE_SGIX = ((int)0x8149),
                SPRITE_TRANSLATION_SGIX = ((int)0x814B),
                SPRITE_AXIS_SGIX = ((int)0x814A),
                SPRITE_AXIAL_SGIX = ((int)0x814C),
                SPRITE_OBJECT_ALIGNED_SGIX = ((int)0x814D),
                SPRITE_EYE_ALIGNED_SGIX = ((int)0x814E),
            }
            
            public enum HP_convolution_border_modes
            {
                IGNORE_BORDER_HP = ((int)0x8150),
                CONVOLUTION_BORDER_COLOR = ((int)0x8154),
                CONVOLUTION_BORDER_COLOR_HP = ((int)0x8154),
                REPLICATE_BORDER_HP = ((int)0x8153),
                CONSTANT_BORDER = ((int)0x8151),
                CONSTANT_BORDER_HP = ((int)0x8151),
                REPLICATE_BORDER = ((int)0x8153),
            }
            
            public enum SGIX_clipmap
            {
                TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = ((int)0x8175),
                NEAREST_CLIPMAP_LINEAR_SGIX = ((int)0x844E),
                LINEAR_CLIPMAP_LINEAR_SGIX = ((int)0x8170),
                TEXTURE_CLIPMAP_FRAME_SGIX = ((int)0x8172),
                NEAREST_CLIPMAP_NEAREST_SGIX = ((int)0x844D),
                TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)0x8174),
                MAX_CLIPMAP_DEPTH_SGIX = ((int)0x8177),
                TEXTURE_CLIPMAP_OFFSET_SGIX = ((int)0x8173),
                TEXTURE_CLIPMAP_DEPTH_SGIX = ((int)0x8176),
                TEXTURE_CLIPMAP_CENTER_SGIX = ((int)0x8171),
                LINEAR_CLIPMAP_NEAREST_SGIX = ((int)0x844F),
                MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)0x8178),
            }
            
            public enum SGIX_texture_scale_bias
            {
                POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = ((int)0x817B),
                POST_TEXTURE_FILTER_BIAS_SGIX = ((int)0x8179),
                POST_TEXTURE_FILTER_SCALE_SGIX = ((int)0x817A),
                POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = ((int)0x817C),
            }
            
            public enum SGIX_reference_plane
            {
                REFERENCE_PLANE_EQUATION_SGIX = ((int)0x817E),
                REFERENCE_PLANE_SGIX = ((int)0x817D),
            }
            
            public enum SGIX_ir_instrument1
            {
                IR_INSTRUMENT1_SGIX = ((int)0x817F),
            }
            
            public enum SGIX_instruments
            {
                INSTRUMENT_MEASUREMENTS_SGIX = ((int)0x8181),
                INSTRUMENT_BUFFER_POINTER_SGIX = ((int)0x8180),
            }
            
            public enum SGIX_list_priority
            {
                LIST_PRIORITY_SGIX = ((int)0x8182),
            }
            
            public enum SGIX_calligraphic_fragment
            {
                CALLIGRAPHIC_FRAGMENT_SGIX = ((int)0x8183),
            }
            
            public enum SGIX_impact_pixel_texture
            {
                PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = ((int)0x8188),
                PIXEL_TEX_GEN_Q_ROUND_SGIX = ((int)0x8185),
                PIXEL_TEX_GEN_Q_CEILING_SGIX = ((int)0x8184),
                PIXEL_TEX_GEN_Q_FLOOR_SGIX = ((int)0x8186),
                PIXEL_TEX_GEN_ALPHA_MS_SGIX = ((int)0x818A),
                PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = ((int)0x8187),
                PIXEL_TEX_GEN_ALPHA_LS_SGIX = ((int)0x8189),
            }
            
            public enum SGIX_framezoom
            {
                FRAMEZOOM_FACTOR_SGIX = ((int)0x818C),
                MAX_FRAMEZOOM_FACTOR_SGIX = ((int)0x818D),
                FRAMEZOOM_SGIX = ((int)0x818B),
            }
            
            public enum SGIX_texture_lod_bias
            {
                TEXTURE_LOD_BIAS_R_SGIX = ((int)0x8190),
                TEXTURE_LOD_BIAS_S_SGIX = ((int)0x818E),
                TEXTURE_LOD_BIAS_T_SGIX = ((int)0x818F),
            }
            
            public enum SGIS_generate_mipmap
            {
                GENERATE_MIPMAP_HINT = ((int)0x8192),
                TEXTURE_DEFORMATION_SGIX = ((int)0x8195),
                GENERATE_MIPMAP = ((int)0x8191),
                GEOMETRY_DEFORMATION_SGIX = ((int)0x8194),
                GENERATE_MIPMAP_HINT_SGIS = ((int)0x8192),
                GENERATE_MIPMAP_SGIS = ((int)0x8191),
                DEFORMATIONS_MASK_SGIX = ((int)0x8196),
                MAX_DEFORMATION_ORDER_SGIX = ((int)0x8197),
            }
            
            public enum SGIX_fog_offset
            {
                FOG_OFFSET_VALUE_SGIX = ((int)0x8199),
                FOG_OFFSET_SGIX = ((int)0x8198),
            }
            
            public enum SGIX_shadow
            {
                TEXTURE_LEQUAL_R_SGIX = ((int)0x819C),
                TEXTURE_COMPARE_SGIX = ((int)0x819A),
                TEXTURE_COMPARE_OPERATOR_SGIX = ((int)0x819B),
                TEXTURE_GEQUAL_R_SGIX = ((int)0x819D),
            }
            
            public enum SGIX_depth_texture
            {
                DEPTH_COMPONENT16_SGIX = ((int)0x81A5),
                DEPTH_COMPONENT32_SGIX = ((int)0x81A7),
                DEPTH_COMPONENT16 = ((int)0x81A5),
                DEPTH_COMPONENT24 = ((int)0x81A6),
                DEPTH_COMPONENT24_SGIX = ((int)0x81A6),
                DEPTH_COMPONENT32 = ((int)0x81A7),
            }
            
            public enum SGIX_ycrcb
            {
                YCRCB_422_SGIX = ((int)0x81BB),
                YCRCB_444_SGIX = ((int)0x81BC),
            }
            
            public enum SGIS_texture_color_mask
            {
                TEXTURE_COLOR_WRITEMASK_SGIS = ((int)0x81EF),
            }
            
            public enum SGIS_point_line_texgen
            {
                EYE_DISTANCE_TO_LINE_SGIS = ((int)0x81F2),
                EYE_LINE_SGIS = ((int)0x81F6),
                OBJECT_LINE_SGIS = ((int)0x81F7),
                OBJECT_POINT_SGIS = ((int)0x81F5),
                OBJECT_DISTANCE_TO_POINT_SGIS = ((int)0x81F1),
                EYE_POINT_SGIS = ((int)0x81F4),
                OBJECT_DISTANCE_TO_LINE_SGIS = ((int)0x81F3),
                EYE_DISTANCE_TO_POINT_SGIS = ((int)0x81F0),
            }
            
            public enum EXT_separate_specular_color
            {
                SINGLE_COLOR_EXT = ((int)0x81F9),
                LIGHT_MODEL_COLOR_CONTROL = ((int)0x81F8),
                SEPARATE_SPECULAR_COLOR_EXT = ((int)0x81FA),
                LIGHT_MODEL_COLOR_CONTROL_EXT = ((int)0x81F8),
                SEPARATE_SPECULAR_COLOR = ((int)0x81FA),
                SINGLE_COLOR = ((int)0x81F9),
            }
            
            public enum EXT_shared_texture_palette
            {
                SHARED_TEXTURE_PALETTE_EXT = ((int)0x81FB),
            }
            
            public enum SGIX_convolution_accuracy
            {
                CONVOLUTION_HINT_SGIX = ((int)0x8316),
            }
            
            public enum SGIX_blend_alpha_minmax
            {
                ALPHA_MAX_SGIX = ((int)0x8321),
                ASYNC_MARKER_SGIX = ((int)0x8329),
                ALPHA_MIN_SGIX = ((int)0x8320),
            }
            
            public enum SGIX_async_histogram
            {
                MAX_ASYNC_HISTOGRAM_SGIX = ((int)0x832D),
                ASYNC_HISTOGRAM_SGIX = ((int)0x832C),
            }
            
            public enum EXT_pixel_transform
            {
                PIXEL_MIN_FILTER_EXT = ((int)0x8332),
                PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = ((int)0x8336),
                PIXEL_TRANSFORM_2D_EXT = ((int)0x8330),
                MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = ((int)0x8337),
                CUBIC_EXT = ((int)0x8334),
                PIXEL_CUBIC_WEIGHT_EXT = ((int)0x8333),
                AVERAGE_EXT = ((int)0x8335),
                PIXEL_TRANSFORM_2D_MATRIX_EXT = ((int)0x8338),
                PIXEL_MAG_FILTER_EXT = ((int)0x8331),
            }
            
            public enum SGIS_pixel_texture
            {
                PIXEL_FRAGMENT_RGB_SOURCE_SGIS = ((int)0x8354),
                PIXEL_TEXTURE_SGIS = ((int)0x8353),
                PIXEL_GROUP_COLOR_SGIS = ((int)0x8356),
                PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = ((int)0x8355),
            }
            
            public enum SGIX_async_pixel
            {
                ASYNC_TEX_IMAGE_SGIX = ((int)0x835C),
                MAX_ASYNC_TEX_IMAGE_SGIX = ((int)0x835F),
                ASYNC_DRAW_PIXELS_SGIX = ((int)0x835D),
                ASYNC_READ_PIXELS_SGIX = ((int)0x835E),
                MAX_ASYNC_DRAW_PIXELS_SGIX = ((int)0x8360),
                MAX_ASYNC_READ_PIXELS_SGIX = ((int)0x8361),
            }
            
            public enum SGIX_texture_coordinate_clamp
            {
                FOG_FACTOR_TO_ALPHA_SGIX = ((int)0x836F),
                TEXTURE_MAX_CLAMP_S_SGIX = ((int)0x8369),
                TEXTURE_MAX_CLAMP_R_SGIX = ((int)0x836B),
                TEXTURE_MAX_CLAMP_T_SGIX = ((int)0x836A),
            }
            
            public enum SGIX_vertex_preclip
            {
                VERTEX_PRECLIP_HINT_SGIX = ((int)0x83EF),
                VERTEX_PRECLIP_SGIX = ((int)0x83EE),
            }
            
            public enum EXT_texture_compression_s3tc
            {
                COMPRESSED_RGB_S3TC_DXT1_EXT = ((int)0x83F0),
                COMPRESSED_RGBA_S3TC_DXT1_EXT = ((int)0x83F1),
                COMPRESSED_RGBA_S3TC_DXT5_EXT = ((int)0x83F3),
                COMPRESSED_RGBA_S3TC_DXT3_EXT = ((int)0x83F2),
            }
            
            public enum INTEL_parallel_arrays
            {
                VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F5),
                NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F6),
                COLOR_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F7),
                PARALLEL_ARRAYS_INTEL = ((int)0x83F4),
                TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F8),
            }
            
            public enum SGIX_fragment_lighting
            {
                FRAGMENT_COLOR_MATERIAL_FACE_SGIX = ((int)0x8402),
                FRAGMENT_LIGHT1_SGIX = ((int)0x840D),
                LIGHT_ENV_MODE_SGIX = ((int)0x8407),
                FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = ((int)0x8408),
                CURRENT_RASTER_NORMAL_SGIX = ((int)0x8406),
                FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = ((int)0x8403),
                FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = ((int)0x840B),
                MAX_FRAGMENT_LIGHTS_SGIX = ((int)0x8404),
                FRAGMENT_LIGHT4_SGIX = ((int)0x8410),
                FRAGMENT_LIGHT5_SGIX = ((int)0x8411),
                FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = ((int)0x840A),
                FRAGMENT_LIGHTING_SGIX = ((int)0x8400),
                FRAGMENT_LIGHT6_SGIX = ((int)0x8412),
                MAX_ACTIVE_LIGHTS_SGIX = ((int)0x8405),
                FRAGMENT_LIGHT2_SGIX = ((int)0x840E),
                FRAGMENT_LIGHT0_SGIX = ((int)0x840C),
                FRAGMENT_COLOR_MATERIAL_SGIX = ((int)0x8401),
                FRAGMENT_LIGHT3_SGIX = ((int)0x840F),
                FRAGMENT_LIGHT7_SGIX = ((int)0x8413),
                FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = ((int)0x8409),
            }
            
            public enum SGIX_resample
            {
                UNPACK_RESAMPLE_SGIX = ((int)0x842D),
                RESAMPLE_DECIMATE_SGIX = ((int)0x8430),
                RESAMPLE_REPLICATE_SGIX = ((int)0x842E),
                PACK_RESAMPLE_SGIX = ((int)0x842C),
                RESAMPLE_ZERO_FILL_SGIX = ((int)0x842F),
            }
            
            public enum SGIX_subsample
            {
                PIXEL_SUBSAMPLE_2424_SGIX = ((int)0x85A3),
                PACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A0),
                PIXEL_SUBSAMPLE_4444_SGIX = ((int)0x85A2),
                PIXEL_SUBSAMPLE_4242_SGIX = ((int)0x85A4),
                UNPACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A1),
            }
            
            public enum All
            {
                TEXTURE_BLUE_SIZE = ((int)0x805E),
                MATRIX_INDEX_ARRAY_ARB = ((int)0x8844),
                BLEND_DST_RGB = ((int)0x80C8),
                DONT_CARE = ((int)0x1100),
                OP_FRAC_EXT = ((int)0x8789),
                SOURCE0_RGB = ((int)0x8580),
                MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = ((int)0x880E),
                POLYGON_TOKEN = ((int)0x0703),
                VARIABLE_C_NV = ((int)0x8525),
                TRIANGLE_FAN = ((int)0x0006),
                MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = ((int)0x87F1),
                TEXTURE2 = ((int)0x84C2),
                VERTEX_ARRAY_STRIDE = ((int)0x807C),
                SWIZZLE_STRQ_ATI = ((int)0x897A),
                ALPHA_MIN_SGIX = ((int)0x8320),
                CULL_FACE = ((int)0x0B44),
                FLOAT_MAT2 = ((int)0x8B5A),
                MATRIX7_ARB = ((int)0x88C7),
                POST_CONVOLUTION_GREEN_SCALE = ((int)0x801D),
                UNSIGNED_INT_SAMPLER_1D_EXT = ((int)0x8DD1),
                PIXEL_MAP_S_TO_S = ((int)0x0C71),
                DOT3_RGBA_EXT = ((int)0x8741),
                OP_FLOOR_EXT = ((int)0x878F),
                LINE_WIDTH = ((int)0x0B21),
                ATTRIB_ARRAY_POINTER_NV = ((int)0x8645),
                SUBTRACT_ARB = ((int)0x84E7),
                MAX_PROGRAM_RESULT_COMPONENTS_NV = ((int)0x8909),
                BUFFER_MAPPED_ARB = ((int)0x88BC),
                LOWER_LEFT = ((int)0x8CA1),
                MODELVIEW10_ARB = ((int)0x872A),
                POINT_SIZE_MAX_ARB = ((int)0x8127),
                TEXTURE3 = ((int)0x84C3),
                MAX_4D_TEXTURE_SIZE_SGIS = ((int)0x8138),
                SPRITE_OBJECT_ALIGNED_SGIX = ((int)0x814D),
                OP_LOG_BASE_2_EXT = ((int)0x8792),
                MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)0x8178),
                MATRIX3_ARB = ((int)0x88C3),
                SRC2_RGB = ((int)VERSION_1_3.SOURCE2_RGB),
                UPPER_LEFT = ((int)0x8CA2),
                INTENSITY16_EXT = ((int)0x804D),
                SECONDARY_COLOR_NV = ((int)0x852D),
                Y_EXT = ((int)0x87D6),
                ARRAY_BUFFER_BINDING = ((int)0x8894),
                MAX_PROGRAM_LOOP_DEPTH_NV = ((int)0x88F7),
                EVAL_VERTEX_ATTRIB1_NV = ((int)0x86C7),
                GL_4PASS_0_EXT = ((int)0x80A4),
                SRGB8_ALPHA8_EXT = ((int)0x8C43),
                CONSTANT_EXT = ((int)0x8576),
                TEXTURE_CONSTANT_DATA_SUNX = ((int)0x81D6),
                POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = ((int)0x8162),
                TEXTURE0 = ((int)0x84C0),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = ((int)0x8CD2),
                REPLACEMENT_CODE_SUN = ((int)0x81D8),
                STENCIL_INDEX = ((int)0x1901),
                WRITE_ONLY = ((int)0x88B9),
                DUAL_LUMINANCE_ALPHA4_SGIS = ((int)0x811C),
                CLIP_NEAR_HINT_PGI = ((int)0x1A220),
                MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = ((int)0x88F4),
                UNSIGNED_SHORT_8_8_APPLE = ((int)0x85BA),
                T2F_IUI_V3F_EXT = ((int)0x81B2),
                INTERLACE_OML = ((int)0x8980),
                DRAW_BUFFER2_ARB = ((int)0x8827),
                REG_23_ATI = ((int)0x8938),
                CLAMP_TO_EDGE_SGIS = ((int)0x812F),
                POINT_SIZE_MIN_ARB = ((int)0x8126),
                CURRENT_INDEX = ((int)0x0B01),
                POST_CONVOLUTION_BLUE_BIAS_EXT = ((int)0x8022),
                TEXTURE_WRAP_Q_SGIS = ((int)0x8137),
                POINT_SIZE_MAX_EXT = ((int)0x8127),
                MAP1_COLOR_4 = ((int)0x0D90),
                STATIC_READ = ((int)0x88E5),
                PASS_THROUGH_TOKEN = ((int)0x0700),
                POST_CONVOLUTION_ALPHA_SCALE = ((int)0x801F),
                TEXTURE1 = ((int)0x84C1),
                PERTURB_EXT = ((int)0x85AE),
                DRAW_BUFFER0_ARB = ((int)0x8825),
                ALPHA_TEST = ((int)0x0BC0),
                STENCIL_FUNC = ((int)0x0B92),
                DOT3_RGB_EXT = ((int)0x8740),
                INDEX_ARRAY_TYPE_EXT = ((int)0x8085),
                STENCIL_FAIL = ((int)0x0B94),
                SCREEN_COORDINATES_REND = ((int)0x8490),
                RGBA4 = ((int)0x8056),
                MATRIX7_NV = ((int)0x8637),
                POST_COLOR_MATRIX_RED_SCALE = ((int)0x80B4),
                INDEX_ARRAY_TYPE = ((int)0x8085),
                PIXEL_SUBSAMPLE_4242_SGIX = ((int)0x85A4),
                STENCIL_CLEAR_TAG_VALUE_EXT = ((int)0x88F3),
                TEXTURE_STACK_DEPTH = ((int)0x0BA5),
                SOURCE0_ALPHA = ((int)0x8588),
                LUMINANCE12_ALPHA12 = ((int)0x8047),
                MAP2_VERTEX_ATTRIB9_4_NV = ((int)0x8679),
                DEPTH_COMPONENT24_ARB = ((int)0x81A6),
                ACTIVE_UNIFORMS = ((int)0x8B86),
                GREEN_BITS = ((int)0x0D53),
                TEXTURE6 = ((int)0x84C6),
                TEXTURE_LEQUAL_R_SGIX = ((int)0x819C),
                ALPHA_TEST_REF = ((int)0x0BC2),
                POST_CONVOLUTION_ALPHA_SCALE_EXT = ((int)0x801F),
                SECONDARY_COLOR_ARRAY_LIST_IBM = ((int)103077),
                STREAM_READ_ARB = ((int)0x88E1),
                UNSIGNED_BYTE = ((int)0x1401),
                X_EXT = ((int)0x87D5),
                GREEN_BIAS = ((int)0x0D19),
                UNSIGNED_SHORT_4_4_4_4 = ((int)0x8033),
                MODELVIEW0_ARB = ((int)0x1700),
                MODULATE_SUBTRACT_ATI = ((int)0x8746),
                ARRAY_OBJECT_OFFSET_ATI = ((int)0x8767),
                UNPACK_CMYK_HINT_EXT = ((int)0x800F),
                EDGE_FLAG_ARRAY_EXT = ((int)0x8079),
                POST_CONVOLUTION_BLUE_SCALE_EXT = ((int)0x801E),
                LO_BIAS_NV = ((int)0x8715),
                ALPHA_SCALE = ((int)0x0D1C),
                VARIANT_ARRAY_TYPE_EXT = ((int)0x87E7),
                VERTEX_PRECLIP_HINT_SGIX = ((int)0x83EF),
                TEXTURE7 = ((int)0x84C7),
                TEXTURE_WRAP_R_EXT = ((int)0x8072),
                TEXTURE18_ARB = ((int)0x84D2),
                SOURCE1_RGB_ARB = ((int)0x8581),
                VARIABLE_E_NV = ((int)0x8527),
                OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = ((int)0x8B87),
                MAP1_VERTEX_ATTRIB15_4_NV = ((int)0x866F),
                MAX_3D_TEXTURE_SIZE = ((int)0x8073),
                PROGRAM_ADDRESS_REGISTERS_ARB = ((int)0x88B0),
                QUAD_INTENSITY8_SGIS = ((int)0x8123),
                CURRENT_WEIGHT_ARB = ((int)0x86A8),
                OP_DOT4_EXT = ((int)0x8785),
                TEXTURE_RESIDENT_EXT = ((int)0x8067),
                ALPHA12 = ((int)0x803D),
                INSTRUMENT_MEASUREMENTS_SGIX = ((int)0x8181),
                EQUAL = ((int)0x0202),
                MAP2_INDEX = ((int)0x0DB1),
                VERTEX_ATTRIB_ARRAY3_NV = ((int)0x8653),
                PIXEL_PACK_BUFFER_BINDING_EXT = ((int)0x88ED),
                FRAGMENT_PROGRAM_BINDING_NV = ((int)0x8873),
                OP_SUB_EXT = ((int)0x8796),
                BUMP_ROT_MATRIX_SIZE_ATI = ((int)0x8776),
                UNPACK_IMAGE_HEIGHT = ((int)0x806E),
                RESAMPLE_DECIMATE_SGIX = ((int)0x8430),
                COLOR_TABLE = ((int)0x80D0),
                DEPTH = ((int)0x1801),
                SHADER_CONSISTENT_NV = ((int)0x86DD),
                UNSIGNED_BYTE_2_3_3_REV = ((int)0x8362),
                OFFSET_HILO_TEXTURE_2D_NV = ((int)0x8854),
                FLOAT_R16_NV = ((int)0x8884),
                MATRIX1_ARB = ((int)0x88C1),
                POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = ((int)0x817C),
                VERTEX_ATTRIB_ARRAY_TYPE = ((int)0x8625),
                GL_422_EXT = ((int)0x80CC),
                FOG_COORDINATE_EXT = ((int)0x8451),
                LINES_ADJACENCY_EXT = ((int)0x000A),
                DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = ((int)0x8311),
                TEXTURE_1D_ARRAY_EXT = ((int)0x8C18),
                COMBINER_INPUT_NV = ((int)0x8542),
                UNSIGNED_SHORT_8_8_MESA = ((int)0x85BA),
                TEXTURE_LUMINANCE_SIZE_EXT = ((int)0x8060),
                DRAW_BUFFER2_ATI = ((int)0x8827),
                STENCIL_BACK_FAIL = ((int)0x8801),
                RGB_S3TC = ((int)0x83A0),
                TEXTURE5 = ((int)0x84C5),
                FLOAT_VEC4_ARB = ((int)0x8B52),
                VERTEX_ARRAY = ((int)0x8074),
                FUNC_SUBTRACT = ((int)0x800A),
                REPLACE_OLDEST_SUN = ((int)0x0003),
                MATRIX28_ARB = ((int)0x88DC),
                PER_STAGE_CONSTANTS_NV = ((int)0x8535),
                VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F5),
                RGBA16 = ((int)0x805B),
                GL_4PASS_2_SGIS = ((int)0x80A6),
                PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = ((int)0x8187),
                STORAGE_CACHED_APPLE = ((int)0x85BE),
                PIXEL_TEX_GEN_Q_CEILING_SGIX = ((int)0x8184),
                SRGB_ALPHA_EXT = ((int)0x8C42),
                CONSTANT_COLOR0_NV = ((int)0x852A),
                EVAL_VERTEX_ATTRIB0_NV = ((int)0x86C6),
                COMBINE_ALPHA_ARB = ((int)0x8572),
                MATRIX31_ARB = ((int)0x88DF),
                LINE_STIPPLE_REPEAT = ((int)0x0B26),
                ACTIVE_VERTEX_UNITS_ARB = ((int)0x86A5),
                INDEX_SHIFT = ((int)0x0D12),
                FOG_OFFSET_SGIX = ((int)0x8198),
                GEOMETRY_VERTICES_OUT_EXT = ((int)0x8DDA),
                DETAIL_TEXTURE_LEVEL_SGIS = ((int)0x809A),
                SAMPLE_ALPHA_TO_ONE_EXT = ((int)0x809F),
                TEXTURE13_ARB = ((int)0x84CD),
                TEXTURE_3D = ((int)0x806F),
                TEXTURE_2D = ((int)0x0DE1),
                SIGNED_NEGATE_NV = ((int)0x853D),
                DEPTH_CLAMP_NV = ((int)0x864F),
                COLOR_TABLE_WIDTH_SGI = ((int)0x80D9),
                RENDERBUFFER_EXT = ((int)0x8D41),
                VERTEX_ATTRIB_ARRAY_STRIDE = ((int)0x8624),
                TEXTURE14 = ((int)0x84CE),
                TEXTURE17 = ((int)0x84D1),
                TEXTURE16 = ((int)0x84D0),
                TEXTURE11 = ((int)0x84CB),
                TEXTURE10 = ((int)0x84CA),
                R5_G6_B5_A8_ICC_SGIX = ((int)0x8467),
                COMPRESSED_LUMINANCE_ALPHA_ARB = ((int)0x84EB),
                RGBA16_EXT = ((int)0x805B),
                MAX_MODELVIEW_STACK_DEPTH = ((int)0x0D36),
                COLOR_ATTACHMENT4_EXT = ((int)0x8CE4),
                TEXTURE19 = ((int)0x84D3),
                TEXTURE18 = ((int)0x84D2),
                PRIMITIVE_ID_NV = ((int)0x8C7C),
                QUERY_RESULT = ((int)0x8866),
                DRAW_BUFFER3_ARB = ((int)0x8828),
                UNSIGNED_SHORT_5_6_5_REV = ((int)0x8364),
                COMPRESSED_RGB_FXT1_3DFX = ((int)0x86B0),
                OBJECT_POINT_SGIS = ((int)0x81F5),
                TEXTURE_COLOR_WRITEMASK_SGIS = ((int)0x81EF),
                COLOR_MATERIAL_PARAMETER = ((int)0x0B56),
                FRAGMENT_PROGRAM_ARB = ((int)0x8804),
                FOG_START = ((int)0x0B63),
                COLOR_TABLE_FORMAT_SGI = ((int)0x80D8),
                CLIP_PLANE3 = ((int)0x3003),
                FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = ((int)0x8CD7),
                MAX_PROGRAM_NATIVE_PARAMETERS_ARB = ((int)0x88AB),
                ENABLE_BIT = ((int)0x00002000),
                COMPRESSED_RGBA_S3TC_DXT5_EXT = ((int)0x83F3),
                VERTEX_ATTRIB_ARRAY_INTEGER_NV = ((int)0x88FD),
                PIXEL_MAP_I_TO_I_SIZE = ((int)0x0CB0),
                FLOAT_MAT3x2 = ((int)0x8B67),
                DSDT_MAG_VIB_NV = ((int)0x86F7),
                SECONDARY_COLOR_ARRAY_STRIDE = ((int)0x845C),
                MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV = ((int)0x8C8A),
                SRGB8_ALPHA8 = ((int)0x8C43),
                COMPRESSED_RGBA_FXT1_3DFX = ((int)0x86B1),
                INFO_LOG_LENGTH = ((int)0x8B84),
                VECTOR_EXT = ((int)0x87BF),
                UNSIGNED_INT_SAMPLER_BUFFER_EXT = ((int)0x8DD8),
                FOG_COORD_SRC = ((int)VERSION_1_4.FOG_COORDINATE_SOURCE),
                UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = ((int)0x8DD6),
                MAD_ATI = ((int)0x8968),
                REG_26_ATI = ((int)0x893B),
                FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = ((int)0x840B),
                VERTEX_ATTRIB_ARRAY_NORMALIZED = ((int)0x886A),
                TEXTURE_MAG_SIZE_NV = ((int)0x871F),
                DYNAMIC_READ_ARB = ((int)0x88E9),
                OUTPUT_TEXTURE_COORD31_EXT = ((int)0x87BC),
                DEPENDENT_GB_TEXTURE_2D_NV = ((int)0x86EA),
                DRAW_BUFFER7_ARB = ((int)0x882C),
                TEXTURE10_ARB = ((int)0x84CA),
                PIXEL_MAP_G_TO_G = ((int)0x0C77),
                VALIDATE_STATUS = ((int)0x8B83),
                DOT3_RGBA_ARB = ((int)0x86AF),
                PROXY_TEXTURE_CUBE_MAP = ((int)0x851B),
                MAGNITUDE_BIAS_NV = ((int)0x8718),
                ALPHA_MAX_SGIX = ((int)0x8321),
                MATRIX19_ARB = ((int)0x88D3),
                ONE_MINUS_CONSTANT_COLOR_EXT = ((int)0x8002),
                DELETE_STATUS = ((int)0x8B80),
                SHADER_OPERATION_NV = ((int)0x86DF),
                R1UI_C4UB_V3F_SUN = ((int)0x85C5),
                MAX_DRAW_BUFFERS_ARB = ((int)0x8824),
                PROGRAM_TARGET_NV = ((int)0x8646),
                NUM_INSTRUCTIONS_PER_PASS_ATI = ((int)0x8971),
                STATIC_COPY = ((int)0x88E6),
                SEPARABLE_2D = ((int)0x8012),
                STENCIL_INDEX4_EXT = ((int)0x8D47),
                OUTPUT_TEXTURE_COORD24_EXT = ((int)0x87B5),
                BLUE_BIT_ATI = ((int)0x00000004),
                BLEND_EQUATION_RGB = ((int)ARB_imaging.BLEND_EQUATION),
                COLOR_TABLE_RED_SIZE = ((int)0x80DA),
                LINEAR = ((int)0x2601),
                MAX_VIEWPORT_DIMS = ((int)0x0D3A),
                BOOL = ((int)0x8B56),
                PROXY_POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D4),
                MAX_ELEMENTS_VERTICES_EXT = ((int)0x80E8),
                MAX_ASYNC_TEX_IMAGE_SGIX = ((int)0x835F),
                DS_BIAS_NV = ((int)0x8716),
                DETAIL_TEXTURE_2D_BINDING_SGIS = ((int)0x8096),
                DEPENDENT_AR_TEXTURE_2D_NV = ((int)0x86E9),
                FOG_COORDINATE_ARRAY_LIST_IBM = ((int)103076),
                COLOR_ATTACHMENT0_EXT = ((int)0x8CE0),
                PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = ((int)0x8336),
                STENCIL_BACK_FUNC_ATI = ((int)0x8800),
                ACCUM_GREEN_BITS = ((int)0x0D59),
                VERTEX_ARRAY_EXT = ((int)0x8074),
                INDEX_BITS = ((int)0x0D51),
                SOURCE1_RGB = ((int)0x8581),
                CURRENT_SECONDARY_COLOR = ((int)0x8459),
                MAX_ELEMENTS_INDICES_EXT = ((int)0x80E9),
                MIRROR_CLAMP_TO_BORDER_EXT = ((int)0x8912),
                CONSTANT_COLOR1_NV = ((int)0x852B),
                DUAL_LUMINANCE12_SGIS = ((int)0x8116),
                MAX_CUBE_MAP_TEXTURE_SIZE = ((int)0x851C),
                INTENSITY16I_EXT = ((int)0x8D8B),
                BUFFER_USAGE_ARB = ((int)0x8765),
                SAMPLE_BUFFERS = ((int)0x80A8),
                EVAL_VERTEX_ATTRIB3_NV = ((int)0x86C9),
                COMPRESSED_RGBA_S3TC_DXT1_EXT = ((int)0x83F1),
                MATRIX29_ARB = ((int)0x88DD),
                R11F_G11F_B10F_EXT = ((int)0x8C3A),
                DRAW_BUFFER13 = ((int)0x8832),
                DRAW_BUFFER12 = ((int)0x8831),
                DRAW_BUFFER11 = ((int)0x8830),
                DRAW_BUFFER10 = ((int)0x882F),
                IUI_N3F_V3F_EXT = ((int)0x81B0),
                CONSERVE_MEMORY_HINT_PGI = ((int)0x1A1FD),
                DRAW_BUFFER15 = ((int)0x8834),
                COLOR_MATRIX_STACK_DEPTH = ((int)0x80B2),
                VIBRANCE_SCALE_NV = ((int)0x8713),
                COMPRESSED_TEXTURE_FORMATS_ARB = ((int)0x86A3),
                FORMAT_SUBSAMPLE_244_244_OML = ((int)0x8983),
                UNPACK_SKIP_IMAGES_EXT = ((int)0x806D),
                FLOAT_R32_NV = ((int)0x8885),
                TEXTURE_COORD_ARRAY_EXT = ((int)0x8078),
                SHADING_LANGUAGE_VERSION = ((int)0x8B8C),
                SATURATE_BIT_ATI = ((int)0x00000040),
                LIST_INDEX = ((int)0x0B33),
                CONST_EYE_NV = ((int)0x86E5),
                BLEND_SRC_ALPHA = ((int)0x80CB),
                POINT_FADE_THRESHOLD_SIZE_EXT = ((int)0x8128),
                TEXTURE_WRAP_R = ((int)0x8072),
                OUTPUT_COLOR0_EXT = ((int)0x879B),
                FUNC_REVERSE_SUBTRACT = ((int)0x800B),
                INDEX_LOGIC_OP = ((int)0x0BF1),
                BUFFER_ACCESS_ARB = ((int)0x88BB),
                SHARED_TEXTURE_PALETTE_EXT = ((int)0x81FB),
                TEXTURE_ALPHA_SIZE = ((int)0x805F),
                ARRAY_OBJECT_BUFFER_ATI = ((int)0x8766),
                TEXTURE_UNSIGNED_REMAP_MODE_NV = ((int)0x888F),
                FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = ((int)0x8403),
                MAP2_VERTEX_ATTRIB14_4_NV = ((int)0x867E),
                CON_29_ATI = ((int)0x895E),
                RGBA_SIGNED_COMPONENTS_EXT = ((int)0x8C3C),
                CLAMP_FRAGMENT_COLOR_ARB = ((int)0x891B),
                AMBIENT = ((int)0x1200),
                TEXTURE_DEFORMATION_BIT_SGIX = ((int)0x00000001),
                STACK_OVERFLOW = ((int)0x0503),
                CLIP_PLANE2 = ((int)0x3002),
                LOAD = ((int)0x0101),
                BINORMAL_ARRAY_STRIDE_EXT = ((int)0x8441),
                DSDT_NV = ((int)0x86F5),
                VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87D2),
                SMOOTH_LINE_WIDTH_GRANULARITY = ((int)0x0B23),
                COLOR_ARRAY_LIST_STRIDE_IBM = ((int)103082),
                OBJECT_VALIDATE_STATUS_ARB = ((int)0x8B83),
                GREEN_MIN_CLAMP_INGR = ((int)0x8561),
                MAX_COLOR_ATTACHMENTS_EXT = ((int)0x8CDF),
                SECONDARY_COLOR_ARRAY_TYPE = ((int)0x845B),
                MAP2_TEXTURE_COORD_1 = ((int)0x0DB3),
                POINT = ((int)0x1B00),
                REG_16_ATI = ((int)0x8931),
                GENERIC_ATTRIB_NV = ((int)0x8C7D),
                EYE_PLANE_ABSOLUTE_NV = ((int)0x855C),
                STREAM_DRAW = ((int)0x88E0),
                ASYNC_READ_PIXELS_SGIX = ((int)0x835E),
                FRAMEZOOM_FACTOR_SGIX = ((int)0x818C),
                SAMPLER_2D_SHADOW = ((int)0x8B62),
                T2F_V3F = ((int)0x2A27),
                MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = ((int)0x880C),
                RGB32I_EXT = ((int)0x8D83),
                WEIGHT_ARRAY_TYPE_ARB = ((int)0x86A9),
                STATIC_READ_ARB = ((int)0x88E5),
                VERTEX_ARRAY_RANGE_POINTER_NV = ((int)0x8521),
                LINE_STIPPLE_PATTERN = ((int)0x0B25),
                ARRAY_ELEMENT_LOCK_COUNT_EXT = ((int)0x81A9),
                NUM_GENERAL_COMBINERS_NV = ((int)0x854E),
                SAMPLE_BUFFERS_ARB = ((int)0x80A8),
                PACK_IMAGE_HEIGHT_EXT = ((int)0x806C),
                SPRITE_EYE_ALIGNED_SGIX = ((int)0x814E),
                TEXTURE_APPLICATION_MODE_EXT = ((int)0x834F),
                POINTS = ((int)0x0000),
                ONE_EXT = ((int)0x87DE),
                TEXTURE_BINDING_CUBE_MAP_EXT = ((int)0x8514),
                TRANSFORM_BIT = ((int)0x00001000),
                SRC1_ALPHA = ((int)VERSION_1_3.SOURCE1_ALPHA),
                INVARIANT_VALUE_EXT = ((int)0x87EA),
                FRAGMENT_NORMAL_EXT = ((int)0x834A),
                SOURCE1_ALPHA = ((int)0x8589),
                LINEAR_MIPMAP_LINEAR = ((int)0x2703),
                DEPTH_TEXTURE_MODE_ARB = ((int)0x884B),
                SAMPLE_BUFFERS_3DFX = ((int)0x86B3),
                OBJECT_DELETE_STATUS_ARB = ((int)0x8B80),
                GL_1PASS_EXT = ((int)0x80A1),
                VERTEX_PROGRAM_ARB = ((int)0x8620),
                RGBA12 = ((int)0x805A),
                TEXTURE1_ARB = ((int)0x84C1),
                W_EXT = ((int)0x87D8),
                MODELVIEW3_ARB = ((int)0x8723),
                EVAL_VERTEX_ATTRIB7_NV = ((int)0x86CD),
                EDGE_FLAG_ARRAY_LIST_IBM = ((int)103075),
                BUFFER_MAPPED = ((int)0x88BC),
                DOMAIN = ((int)0x0A02),
                FRAGMENT_DEPTH_EXT = ((int)0x8452),
                LEQUAL = ((int)0x0203),
                RENDERBUFFER_DEPTH_SIZE_EXT = ((int)0x8D54),
                GL_4D_COLOR_TEXTURE = ((int)0x0604),
                TEXTURE19_ARB = ((int)0x84D3),
                FRONT_LEFT = ((int)0x0400),
                COLOR4_BIT_PGI = ((int)0x00020000),
                VERTEX_ATTRIB_ARRAY_STRIDE_ARB = ((int)0x8624),
                SMOOTH_POINT_SIZE_GRANULARITY = ((int)0x0B13),
                INTENSITY4 = ((int)0x804A),
                MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = ((int)0x8520),
                MAX_TEXTURE_BUFFER_SIZE_EXT = ((int)0x8C2B),
                TRANSPOSE_CURRENT_MATRIX_ARB = ((int)0x88B7),
                EVAL_VERTEX_ATTRIB13_NV = ((int)0x86D3),
                OP_ROUND_EXT = ((int)0x8790),
                VARIANT_ARRAY_EXT = ((int)0x87E8),
                VIBRANCE_BIAS_NV = ((int)0x8719),
                WRITE_ONLY_ARB = ((int)0x88B9),
                REFERENCE_PLANE_EQUATION_SGIX = ((int)0x817E),
                MAX_SPOT_EXPONENT_NV = ((int)0x8505),
                POSITION = ((int)0x1203),
                DOT_PRODUCT_DEPTH_REPLACE_NV = ((int)0x86ED),
                TRANSPOSE_TEXTURE_MATRIX_ARB = ((int)0x84E5),
                PROGRAM_STRING_ARB = ((int)0x8628),
                EVAL_VERTEX_ATTRIB2_NV = ((int)0x86C8),
                PN_TRIANGLES_ATI = ((int)0x87F0),
                T4F_C4F_N3F_V4F = ((int)0x2A2D),
                TEXTURE_BINDING_RECTANGLE_NV = ((int)0x84F6),
                VERTEX_ARRAY_SIZE_EXT = ((int)0x807A),
                CLIENT_PIXEL_STORE_BIT = ((int)0x00000001),
                SCALE_BY_ONE_HALF_NV = ((int)0x8540),
                IUI_V3F_EXT = ((int)0x81AE),
                LUMINANCE16UI_EXT = ((int)0x8D7A),
                VARIANT_VALUE_EXT = ((int)0x87E4),
                SRC0_RGB = ((int)VERSION_1_3.SOURCE0_RGB),
                POST_CONVOLUTION_GREEN_BIAS = ((int)0x8021),
                POLYGON_STIPPLE = ((int)0x0B42),
                INT_VEC3_ARB = ((int)0x8B54),
                TEXTURE_COORD_ARRAY_POINTER_EXT = ((int)0x8092),
                PIXEL_UNPACK_BUFFER_BINDING_ARB = ((int)0x88EF),
                BUFFER_SIZE = ((int)0x8764),
                MAX_TEXTURE_LOD_BIAS = ((int)0x84FD),
                OFFSET_TEXTURE_MATRIX_NV = ((int)0x86E1),
                ALPHA_FLOAT16_ATI = ((int)0x881C),
                MATRIX14_ARB = ((int)0x88CE),
                POST_COLOR_MATRIX_RED_SCALE_SGI = ((int)0x80B4),
                PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = ((int)0x88B2),
                STATIC_ATI = ((int)0x8760),
                ALPHA4_EXT = ((int)0x803B),
                TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = ((int)0x8518),
                INDEX_ARRAY_POINTER = ((int)0x8091),
                TEXTURE_2D_STACK_MESAX = ((int)0x875A),
                EDGE_FLAG_ARRAY_BUFFER_BINDING = ((int)0x889B),
                DEPTH_PASS_INSTRUMENT_MAX_SGIX = ((int)0x8312),
                CND_ATI = ((int)0x896A),
                FRAMEBUFFER_SRGB_CAPABLE_EXT = ((int)0x8DBA),
                LIGHT_MODEL_TWO_SIDE = ((int)0x0B52),
                TEXTURE_FLOAT_COMPONENTS_NV = ((int)0x888C),
                NEGATIVE_W_EXT = ((int)0x87DC),
                DRAW_BUFFER6_ATI = ((int)0x882B),
                PIXEL_UNPACK_BUFFER_BINDING = ((int)0x88EF),
                POINT_FADE_THRESHOLD_SIZE_SGIS = ((int)0x8128),
                POINT_SPRITE_COORD_ORIGIN = ((int)0x8CA0),
                LINE_TOKEN = ((int)0x0702),
                DOT_PRODUCT_TEXTURE_RECTANGLE_NV = ((int)0x864E),
                VERTEX_WEIGHT_ARRAY_SIZE_EXT = ((int)0x850D),
                OP_MADD_EXT = ((int)0x8788),
                SIGNED_RGB8_NV = ((int)0x86FF),
                SECONDARY_COLOR_ARRAY_SIZE = ((int)0x845A),
                CLIP_PLANE5 = ((int)0x3005),
                MAX_ELEMENTS_INDICES = ((int)0x80E9),
                LINE_STRIP_ADJACENCY_EXT = ((int)0x000B),
                INT_VEC4_ARB = ((int)0x8B55),
                YCBCR_422_APPLE = ((int)0x85B9),
                SIGNED_HILO16_NV = ((int)0x86FA),
                TEXTURE_ENV = ((int)0x2300),
                RGB9_E5_EXT = ((int)0x8C3D),
                UNPACK_CONSTANT_DATA_SUNX = ((int)0x81D5),
                TEXTURE_PRIORITY = ((int)0x8066),
                CON_16_ATI = ((int)0x8951),
                INDEX_WRITEMASK = ((int)0x0C21),
                SAMPLES = ((int)0x80A9),
                SIGNED_LUMINANCE8_NV = ((int)0x8702),
                NORMAL_ARRAY_COUNT_EXT = ((int)0x8080),
                DUAL_TEXTURE_SELECT_SGIS = ((int)0x8124),
                DRAW_BUFFER9 = ((int)0x882E),
                OPERAND1_ALPHA_EXT = ((int)0x8599),
                COLOR_CLEAR_UNCLAMPED_VALUE_ATI = ((int)0x8835),
                COMPARE_R_TO_TEXTURE = ((int)0x884E),
                UNSIGNED_BYTE_3_3_2 = ((int)0x8032),
                DEPTH_BOUNDS_EXT = ((int)0x8891),
                MAX_ASYNC_HISTOGRAM_SGIX = ((int)0x832D),
                OPERAND0_RGB = ((int)0x8590),
                COLOR_ARRAY_STRIDE = ((int)0x8083),
                INTERLACE_SGIX = ((int)0x8094),
                CONVOLUTION_FILTER_SCALE_EXT = ((int)0x8014),
                REG_14_ATI = ((int)0x892F),
                FLOAT_VEC4 = ((int)0x8B52),
                SAMPLER_2D_RECT_SHADOW_ARB = ((int)0x8B64),
                UNSIGNED_SHORT_1_5_5_5_REV_EXT = ((int)0x8366),
                PROGRAM_PARAMETERS_ARB = ((int)0x88A8),
                ALWAYS_SOFT_HINT_PGI = ((int)0x1A20D),
                IMPLEMENTATION_COLOR_READ_FORMAT_OES = ((int)0x8B9B),
                MAX_VERTEX_UNIFORM_COMPONENTS_ARB = ((int)0x8B4A),
                DRAW_BUFFER8 = ((int)0x882D),
                TEXTURE31_ARB = ((int)0x84DF),
                SRGB_ALPHA = ((int)0x8C42),
                INCR = ((int)0x1E02),
                TEXTURE12_ARB = ((int)0x84CC),
                DEPTH_ATTACHMENT_EXT = ((int)0x8D00),
                REPLACEMENT_CODE_ARRAY_POINTER_SUN = ((int)0x85C3),
                CLAMP_TO_BORDER = ((int)0x812D),
                T2F_IUI_N3F_V2F_EXT = ((int)0x81B3),
                PIXEL_MAP_S_TO_S_SIZE = ((int)0x0CB1),
                ORDER = ((int)0x0A01),
                MODELVIEW_PROJECTION_NV = ((int)0x8629),
                GL_2PASS_0_SGIS = ((int)0x80A2),
                R1UI_T2F_C4F_N3F_V3F_SUN = ((int)0x85CB),
                RESAMPLE_ZERO_FILL_OML = ((int)0x8987),
                SAMPLES_PASSED = ((int)0x8914),
                LUMINANCE6_ALPHA2 = ((int)0x8044),
                POST_COLOR_MATRIX_ALPHA_SCALE = ((int)0x80B7),
                FRAGMENT_COLOR_MATERIAL_SGIX = ((int)0x8401),
                TRANSFORM_FEEDBACK_VARYINGS_NV = ((int)0x8C83),
                PROGRAM_ATTRIB_COMPONENTS_NV = ((int)0x8906),
                OBJECT_ACTIVE_ATTRIBUTES_ARB = ((int)0x8B89),
                MULTISAMPLE_3DFX = ((int)0x86B2),
                REG_4_ATI = ((int)0x8925),
                DRAW_BUFFER7 = ((int)0x882C),
                EDGE_FLAG = ((int)0x0B43),
                NORMAL_ARRAY_BUFFER_BINDING = ((int)0x8897),
                DEPTH24_STENCIL8_EXT = ((int)0x88F0),
                MULTISAMPLE_FILTER_HINT_NV = ((int)0x8534),
                REG_19_ATI = ((int)0x8934),
                MAX_PROGRAM_ATTRIB_COMPONENTS_NV = ((int)0x8908),
                TEXTURE_DEPTH_TYPE_ARB = ((int)0x8C16),
                INVALID_VALUE = ((int)0x0501),
                OPERAND1_RGB = ((int)0x8591),
                TEXCOORD3_BIT_PGI = ((int)0x40000000),
                LUMINANCE16_ALPHA16 = ((int)0x8048),
                LUMINANCE_FLOAT32_ATI = ((int)0x8818),
                VERTEX_PROGRAM_TWO_SIDE = ((int)0x8643),
                OR = ((int)0x1507),
                ALL_COMPLETED_NV = ((int)0x84F2),
                REG_5_ATI = ((int)0x8926),
                COLOR_ARRAY_BUFFER_BINDING = ((int)0x8898),
                NEGATE_BIT_ATI = ((int)0x00000004),
                DRAW_BUFFER6 = ((int)0x882B),
                EVAL_VERTEX_ATTRIB5_NV = ((int)0x86CB),
                NATIVE_GRAPHICS_HANDLE_PGI = ((int)0x1A202),
                TEXTURE_BINDING_BUFFER_EXT = ((int)0x8C2C),
                BUFFER_SERIALIZED_MODIFY_APPLE = ((int)0x8A12),
                UNSIGNED_INT_2_10_10_10_REV_EXT = ((int)0x8368),
                RGB5 = ((int)0x8050),
                MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = ((int)0x8337),
                COMBINER_MUX_SUM_NV = ((int)0x8547),
                OUTPUT_TEXTURE_COORD8_EXT = ((int)0x87A5),
                CURRENT_VERTEX_ATTRIB = ((int)0x8626),
                TRANSPOSE_PROJECTION_MATRIX = ((int)0x84E4),
                MAT_DIFFUSE_BIT_PGI = ((int)0x00400000),
                DRAW_FRAMEBUFFER_BINDING_EXT = ((int)0x8CAA),
                PACK_RESAMPLE_OML = ((int)0x8984),
                ALPHA_MIN_CLAMP_INGR = ((int)0x8563),
                DOUBLE_EXT = ((int)0x140A),
                LIGHT_MODEL_COLOR_CONTROL_EXT = ((int)0x81F8),
                FOG_COORDINATE_ARRAY_STRIDE_EXT = ((int)0x8455),
                EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = ((int)103085),
                NORMAL_ARRAY = ((int)0x8075),
                SOURCE3_ALPHA_NV = ((int)0x858B),
                SIGNED_RGB8_UNSIGNED_ALPHA8_NV = ((int)0x870D),
                HISTOGRAM_LUMINANCE_SIZE = ((int)0x802C),
                SIGNED_RGBA8_NV = ((int)0x86FC),
                VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = ((int)0x8533),
                UNPACK_SKIP_ROWS = ((int)0x0CF3),
                POLYGON_OFFSET_FACTOR = ((int)0x8038),
                HISTOGRAM_WIDTH_EXT = ((int)0x8026),
                DEPTH_COMPONENT32F_NV = ((int)0x8DAB),
                MAP_ATTRIB_U_ORDER_NV = ((int)0x86C3),
                OUTPUT_TEXTURE_COORD15_EXT = ((int)0x87AC),
                COLOR_TABLE_BLUE_SIZE = ((int)0x80DC),
                INTENSITY32UI_EXT = ((int)0x8D73),
                CON_4_ATI = ((int)0x8945),
                CLAMP = ((int)0x2900),
                STENCIL_TEST = ((int)0x0B90),
                MAP2_VERTEX_ATTRIB3_4_NV = ((int)0x8673),
                DETAIL_TEXTURE_FUNC_POINTS_SGIS = ((int)0x809C),
                TEXTURE_COMPONENTS = ((int)0x1003),
                VERTEX4_BIT_PGI = ((int)0x00000008),
                NORMAL_MAP_NV = ((int)0x8511),
                INT_SAMPLER_1D_ARRAY_EXT = ((int)0x8DCE),
                DRAW_BUFFER4 = ((int)0x8829),
                VERTEX_WEIGHT_ARRAY_POINTER_EXT = ((int)0x8510),
                REG_24_ATI = ((int)0x8939),
                FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = ((int)0x8CD1),
                DUAL_LUMINANCE16_SGIS = ((int)0x8117),
                MODELVIEW30_ARB = ((int)0x873E),
                COLOR_INDEX16_EXT = ((int)0x80E7),
                RGBA_S3TC = ((int)0x83A2),
                INTENSITY_FLOAT32_ATI = ((int)0x8817),
                BLEND_COLOR = ((int)0x8005),
                COMPRESSED_LUMINANCE = ((int)0x84EA),
                TABLE_TOO_LARGE = ((int)0x8031),
                MAP2_VERTEX_ATTRIB8_4_NV = ((int)0x8678),
                UNIFORM_BUFFER_EXT = ((int)0x8DEE),
                FLOAT_MAT3_ARB = ((int)0x8B5B),
                HALF_BIT_ATI = ((int)0x00000008),
                LINEAR_MIPMAP_NEAREST = ((int)0x2701),
                MAP1_GRID_SEGMENTS = ((int)0x0DD1),
                MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = ((int)0x8DA0),
                OBJECT_INFO_LOG_LENGTH_ARB = ((int)0x8B84),
                PIXEL_CUBIC_WEIGHT_EXT = ((int)0x8333),
                COMBINER0_NV = ((int)0x8550),
                COMBINER1_NV = ((int)0x8551),
                DRAW_BUFFER3 = ((int)0x8828),
                MODELVIEW11_ARB = ((int)0x872B),
                CURRENT_PROGRAM = ((int)0x8B8D),
                COMPRESSED_RGBA = ((int)0x84EE),
                PREVIOUS_TEXTURE_INPUT_NV = ((int)0x86E4),
                TEXTURE_CUBE_MAP = ((int)0x8513),
                MATRIX2_ARB = ((int)0x88C2),
                TEXTURE4_ARB = ((int)0x84C4),
                INDEX_ARRAY_LIST_STRIDE_IBM = ((int)103083),
                UNSIGNED_SHORT_1_5_5_5_REV = ((int)0x8366),
                GEQUAL = ((int)0x0206),
                MULT = ((int)0x0103),
                RED_BIAS = ((int)0x0D15),
                INTENSITY8 = ((int)0x804B),
                REG_1_ATI = ((int)0x8922),
                INT = ((int)0x1404),
                TEXTURE28_ARB = ((int)0x84DC),
                INDEX_ARRAY_STRIDE_EXT = ((int)0x8086),
                HISTOGRAM_ALPHA_SIZE = ((int)0x802B),
                PACK_LSB_FIRST = ((int)0x0D01),
                COLOR_ARRAY_POINTER = ((int)0x8090),
                MAX_ELEMENTS_VERTICES = ((int)0x80E8),
                COMBINER_CD_OUTPUT_NV = ((int)0x854B),
                UNPACK_SKIP_VOLUMES_SGIS = ((int)0x8132),
                DYNAMIC_DRAW = ((int)0x88E8),
                INSTRUMENT_BUFFER_POINTER_SGIX = ((int)0x8180),
                SIGNED_RGBA_NV = ((int)0x86FB),
                OUTPUT_TEXTURE_COORD27_EXT = ((int)0x87B8),
                VERTEX_ARRAY_RANGE_LENGTH_APPLE = ((int)0x851E),
                PROGRAM_UNDER_NATIVE_LIMITS_ARB = ((int)0x88B6),
                TEXTURE_CUBE_MAP_POSITIVE_X_ARB = ((int)0x8515),
                OUTPUT_TEXTURE_COORD4_EXT = ((int)0x87A1),
                LUMINANCE_FLOAT16_ATI = ((int)0x881E),
                FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = ((int)0x8CD9),
                FOG_COORD = ((int)VERSION_1_4.FOG_COORDINATE),
                REG_6_ATI = ((int)0x8927),
                EDGE_FLAG_ARRAY_POINTER_EXT = ((int)0x8093),
                SLUMINANCE8_ALPHA8 = ((int)0x8C45),
                TABLE_TOO_LARGE_EXT = ((int)0x8031),
                MULTISAMPLE_BIT_ARB = ((int)0x20000000),
                RED_INTEGER_EXT = ((int)0x8D94),
                POLYGON = ((int)0x0009),
                TEXTURE_WRAP_T = ((int)0x2803),
                TEXTURE_LOD_BIAS = ((int)0x8501),
                PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = ((int)0x880A),
                POST_CONVOLUTION_RED_BIAS = ((int)0x8020),
                OBJECT_COMPILE_STATUS_ARB = ((int)0x8B81),
                SIGNED_ALPHA_NV = ((int)0x8705),
                PROXY_TEXTURE_3D_EXT = ((int)0x8070),
                LINEAR_ATTENUATION = ((int)0x1208),
                OUTPUT_TEXTURE_COORD3_EXT = ((int)0x87A0),
                VERTEX_SHADER_BINDING_EXT = ((int)0x8781),
                FLOAT_RG16_NV = ((int)0x8886),
                MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = ((int)0x00200000),
                BLEND_DST_RGB_EXT = ((int)0x80C8),
                COLOR_INDEX12_EXT = ((int)0x80E6),
                PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = ((int)0x8809),
                VERTEX_ARRAY_RANGE_NV = ((int)0x851D),
                TEXTURE_INTENSITY_SIZE = ((int)0x8061),
                FUNC_SUBTRACT_EXT = ((int)0x800A),
                LOGIC_OP = ((int)0x0BF1),
                BLUE_MIN_CLAMP_INGR = ((int)0x8562),
                CURRENT_RASTER_SECONDARY_COLOR = ((int)0x845F),
                TEXTURE_COMPARE_SGIX = ((int)0x819A),
                EVAL_VERTEX_ATTRIB14_NV = ((int)0x86D4),
                MODELVIEW2_ARB = ((int)0x8722),
                OUTPUT_TEXTURE_COORD6_EXT = ((int)0x87A3),
                MAX_PROGRAM_MATRICES_ARB = ((int)0x862F),
                ELEMENT_ARRAY_BUFFER_ARB = ((int)0x8893),
                DRAW_BUFFER11_ARB = ((int)0x8830),
                RGB32F_ARB = ((int)0x8815),
                RGB10_EXT = ((int)0x8052),
                TEXTURE_POST_SPECULAR_HP = ((int)0x8168),
                ALIASED_POINT_SIZE_RANGE = ((int)0x846D),
                TEXTURE_CUBE_MAP_NEGATIVE_X = ((int)0x8516),
                OUTPUT_TEXTURE_COORD25_EXT = ((int)0x87B6),
                DS_SCALE_NV = ((int)0x8710),
                TEXTURE_ALPHA_SIZE_EXT = ((int)0x805F),
                POINT_SPRITE_ARB = ((int)0x8861),
                SAMPLER_2D_SHADOW_ARB = ((int)0x8B62),
                POST_TEXTURE_FILTER_SCALE_SGIX = ((int)0x817A),
                FLOAT_VEC3 = ((int)0x8B51),
                NEGATIVE_Z_EXT = ((int)0x87DB),
                DUDV_ATI = ((int)0x8779),
                OUTPUT_TEXTURE_COORD5_EXT = ((int)0x87A2),
                OP_MUL_EXT = ((int)0x8786),
                MODELVIEW13_ARB = ((int)0x872D),
                PN_TRIANGLES_NORMAL_MODE_ATI = ((int)0x87F3),
                FOG_COORDINATE_ARRAY_STRIDE = ((int)0x8455),
                DRAW_BUFFER10_ARB = ((int)0x882F),
                MATRIX4_NV = ((int)0x8634),
                SAMPLE_COVERAGE_VALUE = ((int)0x80AA),
                READ_PIXEL_DATA_RANGE_NV = ((int)0x8879),
                FOG_COORDINATE_ARRAY = ((int)0x8457),
                VERTEX_STATE_PROGRAM_NV = ((int)0x8621),
                MATRIX5_NV = ((int)0x8635),
                LESS = ((int)0x0201),
                TEXTURE5_ARB = ((int)0x84C5),
                TRANSFORM_FEEDBACK_BUFFER_NV = ((int)0x8C8E),
                POLYGON_OFFSET_FACTOR_EXT = ((int)0x8038),
                MAX_BINDABLE_UNIFORM_SIZE_EXT = ((int)0x8DED),
                PREFER_DOUBLEBUFFER_HINT_PGI = ((int)0x1A1F8),
                SAMPLES_SGIS = ((int)0x80A9),
                DRAW_BUFFER13_ARB = ((int)0x8832),
                MODELVIEW14_ARB = ((int)0x872E),
                REG_2_ATI = ((int)0x8923),
                FASTEST = ((int)0x1101),
                MAX_ARRAY_TEXTURE_LAYERS_EXT = ((int)0x88FF),
                RGB16_EXT = ((int)0x8054),
                MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = ((int)0x8841),
                BUFFER_SIZE_ARB = ((int)0x8764),
                IMPLEMENTATION_COLOR_READ_TYPE_OES = ((int)0x8B9A),
                CON_27_ATI = ((int)0x895C),
                TRANSFORM_FEEDBACK_BUFFER_START_NV = ((int)0x8C84),
                UNPACK_RESAMPLE_SGIX = ((int)0x842D),
                CONVOLUTION_FILTER_SCALE = ((int)0x8014),
                FRAMEZOOM_SGIX = ((int)0x818B),
                MATRIX9_ARB = ((int)0x88C9),
                DRAW_BUFFER12_ARB = ((int)0x8831),
                COMPRESSED_LUMINANCE_ALPHA = ((int)0x84EB),
                CLIENT_VERTEX_ARRAY_BIT = ((int)0x00000002),
                MAX_LIST_NESTING = ((int)0x0B31),
                NORMAL_MAP = ((int)0x8511),
                VERTEX_ATTRIB_ARRAY8_NV = ((int)0x8658),
                FEEDBACK_BUFFER_POINTER = ((int)0x0DF0),
                CONSTANT_BORDER_HP = ((int)0x8151),
                COLOR_TABLE_GREEN_SIZE = ((int)0x80DB),
                DEPTH_COMPONENT16_SGIX = ((int)0x81A5),
                MAX_VERTEX_SHADER_LOCALS_EXT = ((int)0x87C9),
                STENCIL_BACK_PASS_DEPTH_PASS = ((int)0x8803),
                TEXTURE14_ARB = ((int)0x84CE),
                MAX_PROGRAM_TEMPORARIES_ARB = ((int)0x88A5),
                IDENTITY_NV = ((int)0x862A),
                INTENSITY16 = ((int)0x804D),
                TRANSFORM_HINT_APPLE = ((int)0x85B1),
                CONSTANT_ATTENUATION = ((int)0x1207),
                DUAL_INTENSITY4_SGIS = ((int)0x8118),
                FIXED_ONLY_ARB = ((int)0x891D),
                TEXTURE_DEFORMATION_SGIX = ((int)0x8195),
                REG_8_ATI = ((int)0x8929),
                DRAW_BUFFER15_ARB = ((int)0x8834),
                BLEND_DST_ALPHA_EXT = ((int)0x80CA),
                FOG_COORDINATE_ARRAY_BUFFER_BINDING = ((int)0x889D),
                MATRIX30_ARB = ((int)0x88DE),
                MATRIX25_ARB = ((int)0x88D9),
                DRAW_PIXELS_APPLE = ((int)0x8A0A),
                STENCIL = ((int)0x1802),
                SPRITE_AXIAL_SGIX = ((int)0x814C),
                RGBA16F_ARB = ((int)0x881A),
                DRAW_BUFFER12_ATI = ((int)0x8831),
                MAX_PROGRAM_LOOP_COUNT_NV = ((int)0x88F8),
                COLOR_ARRAY_SIZE = ((int)0x8081),
                PROGRAM_ERROR_POSITION_ARB = ((int)0x864B),
                BGRA_EXT = ((int)0x80E1),
                REG_9_ATI = ((int)0x892A),
                DRAW_BUFFER14_ARB = ((int)0x8833),
                OUTPUT_TEXTURE_COORD1_EXT = ((int)0x879E),
                CURRENT_RASTER_DISTANCE = ((int)0x0B09),
                INVERT = ((int)0x150A),
                PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)0x80D4),
                MINMAX = ((int)0x802E),
                INDEX_MATERIAL_PARAMETER_EXT = ((int)0x81B9),
                INT_SAMPLER_CUBE_EXT = ((int)0x8DCC),
                REPLICATE_BORDER = ((int)0x8153),
                GREEN = ((int)0x1904),
                MIRROR_CLAMP_ATI = ((int)0x8742),
                VERTEX_ARRAY_RANGE_VALID_NV = ((int)0x851F),
                FUNC_REVERSE_SUBTRACT_EXT = ((int)0x800B),
                SAMPLE_ALPHA_TO_ONE_ARB = ((int)0x809F),
                GL_4_BYTES = ((int)0x1409),
                STREAM_COPY_ARB = ((int)0x88E2),
                COMBINE_ALPHA_EXT = ((int)0x8572),
                MODELVIEW16_ARB = ((int)0x8730),
                EQUIV = ((int)0x1509),
                COLOR_SUM_CLAMP_NV = ((int)0x854F),
                VARIANT_EXT = ((int)0x87C1),
                GREEN_MAX_CLAMP_INGR = ((int)0x8565),
                HILO_NV = ((int)0x86F4),
                TEXTURE_RED_SIZE = ((int)0x805C),
                NEGATIVE_Y_EXT = ((int)0x87DA),
                RGB12_EXT = ((int)0x8053),
                MULTISAMPLE_BIT = ((int)0x20000000),
                MAX_CUBE_MAP_TEXTURE_SIZE_ARB = ((int)0x851C),
                DRAW_BUFFER15_ATI = ((int)0x8834),
                PIXEL_MAP_B_TO_B = ((int)0x0C78),
                VERTEX_SHADER_OPTIMIZED_EXT = ((int)0x87D4),
                POLYGON_OFFSET_POINT = ((int)0x2A01),
                DYNAMIC_COPY_ARB = ((int)0x88EA),
                INTERPOLATE_ARB = ((int)0x8575),
                COMPRESSED_RED_RGTC1_EXT = ((int)0x8DBB),
                PIXEL_MODE_BIT = ((int)0x00000020),
                DRAW_BUFFER5_ARB = ((int)0x882A),
                GENERATE_MIPMAP_SGIS = ((int)0x8191),
                STENCIL_BACK_FUNC = ((int)0x8800),
                MAGNITUDE_SCALE_NV = ((int)0x8712),
                COMPRESSED_ALPHA = ((int)0x84E9),
                CON_8_ATI = ((int)0x8949),
                PROGRAM_LENGTH_ARB = ((int)0x8627),
                DSDT8_NV = ((int)0x8709),
                OPERAND2_ALPHA_ARB = ((int)0x859A),
                PIXEL_COUNT_AVAILABLE_NV = ((int)0x8867),
                DRAW_BUFFER14_ATI = ((int)0x8833),
                MATERIAL_SIDE_HINT_PGI = ((int)0x1A22C),
                ALPHA_FLOAT32_ATI = ((int)0x8816),
                TRIANGLE_STRIP_ADJACENCY_EXT = ((int)0x000D),
                MIRROR_CLAMP_TO_EDGE_EXT = ((int)0x8743),
                DYNAMIC_ATI = ((int)0x8761),
                UNSIGNED_INT_8_8_8_8_EXT = ((int)0x8035),
                PIXEL_GROUP_COLOR_SGIS = ((int)0x8356),
                MODULATE_SIGNED_ADD_ATI = ((int)0x8745),
                COMPRESSED_RGBA_ARB = ((int)0x84EE),
                POST_CONVOLUTION_ALPHA_BIAS_EXT = ((int)0x8023),
                OPERAND0_RGB_EXT = ((int)0x8590),
                TEXTURE_RED_TYPE_ARB = ((int)0x8C10),
                DT_SCALE_NV = ((int)0x8711),
                FOG = ((int)0x0B60),
                MAX_VERTEX_ATTRIBS_ARB = ((int)0x8869),
                EXP = ((int)0x0800),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = ((int)0x8CD3),
                TEXTURE_COMPRESSED_ARB = ((int)0x86A1),
                E_TIMES_F_NV = ((int)0x8531),
                DT_BIAS_NV = ((int)0x8717),
                CURRENT_OCCLUSION_QUERY_ID_NV = ((int)0x8865),
                WEIGHT_ARRAY_STRIDE_ARB = ((int)0x86AA),
                MAP2_VERTEX_ATTRIB6_4_NV = ((int)0x8676),
                BLEND_COLOR_EXT = ((int)0x8005),
                TEXTURE_RECTANGLE_ARB = ((int)0x84F5),
                ALPHA32UI_EXT = ((int)0x8D72),
                DRAW_BUFFER4_ARB = ((int)0x8829),
                PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = ((int)0x8808),
                CURRENT_RASTER_POSITION_VALID = ((int)0x0B08),
                GEOMETRY_DEFORMATION_BIT_SGIX = ((int)0x00000002),
                NATIVE_GRAPHICS_BEGIN_HINT_PGI = ((int)0x1A203),
                DSDT8_MAG8_INTENSITY8_NV = ((int)0x870B),
                SOURCE1_RGB_EXT = ((int)0x8581),
                POINT_SPRITE = ((int)0x8861),
                ALLOW_DRAW_OBJ_HINT_PGI = ((int)0x1A20E),
                COLOR_TABLE_INTENSITY_SIZE_SGI = ((int)0x80DF),
                COLOR_SUM = ((int)0x8458),
                TEXTURE_LOD_BIAS_EXT = ((int)0x8501),
                FRAGMENT_SHADER_DERIVATIVE_HINT = ((int)0x8B8B),
                OBJECT_DISTANCE_TO_POINT_SGIS = ((int)0x81F1),
                COMPRESSED_SLUMINANCE = ((int)0x8C4A),
                UNPACK_SWAP_BYTES = ((int)0x0CF0),
                MODELVIEW20_ARB = ((int)0x8734),
                COPY = ((int)0x1503),
                LUMINANCE32F_ARB = ((int)0x8818),
                OP_RECIP_EXT = ((int)0x8794),
                ONE_MINUS_DST_COLOR = ((int)0x0307),
                MAP2_TEXTURE_COORD_3 = ((int)0x0DB5),
                PIXEL_MAG_FILTER_EXT = ((int)0x8331),
                BLEND = ((int)0x0BE2),
                SHININESS = ((int)0x1601),
                TEXTURE = ((int)0x1702),
                EYE_DISTANCE_TO_LINE_SGIS = ((int)0x81F2),
                INTENSITY16F_ARB = ((int)0x881D),
                TEXTURE_MATERIAL_FACE_EXT = ((int)0x8351),
                TEXTURE_INTENSITY_TYPE_ARB = ((int)0x8C15),
                MATRIX1_NV = ((int)0x8631),
                COLOR_TABLE_SGI = ((int)0x80D0),
                DEPENDENT_HILO_TEXTURE_2D_NV = ((int)0x8858),
                MAX_VARYING_FLOATS_ARB = ((int)0x8B4B),
                TEXTURE_FILTER_CONTROL_EXT = ((int)0x8500),
                CON_26_ATI = ((int)0x895B),
                MINMAX_SINK_EXT = ((int)0x8030),
                LIGHT5 = ((int)0x4005),
                RGBA12_EXT = ((int)0x805A),
                UNSIGNED_NORMALIZED_ARB = ((int)0x8C17),
                ALLOW_DRAW_FRG_HINT_PGI = ((int)0x1A210),
                MAP2_TEXTURE_COORD_2 = ((int)0x0DB4),
                MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = ((int)0x88A7),
                OPERAND1_ALPHA = ((int)0x8599),
                IUI_V2F_EXT = ((int)0x81AD),
                MAX_PROGRAM_INSTRUCTIONS_ARB = ((int)0x88A1),
                BLEND_EQUATION = ((int)0x8009),
                RGBA16I_EXT = ((int)0x8D88),
                BGR = ((int)0x80E0),
                GL_4PASS_1_EXT = ((int)0x80A5),
                TEXTURE0_ARB = ((int)0x84C0),
                RESCALE_NORMAL = ((int)0x803A),
                ELEMENT_ARRAY_BUFFER_BINDING = ((int)0x8895),
                PROGRAM_STRING_NV = ((int)0x8628),
                MIRROR_CLAMP_EXT = ((int)0x8742),
                CON_13_ATI = ((int)0x894E),
                ASYNC_TEX_IMAGE_SGIX = ((int)0x835C),
                CONSTANT = ((int)0x8576),
                VARIANT_ARRAY_STRIDE_EXT = ((int)0x87E6),
                NUM_PASSES_ATI = ((int)0x8970),
                MAP2_VERTEX_ATTRIB15_4_NV = ((int)0x867F),
                MATRIX12_ARB = ((int)0x88CC),
                CMYKA_EXT = ((int)0x800D),
                SEPARATE_SPECULAR_COLOR = ((int)0x81FA),
                BLUE_INTEGER_EXT = ((int)0x8D96),
                INTENSITY8I_EXT = ((int)0x8D91),
                SIGNED_IDENTITY_NV = ((int)0x853C),
                MAP2_VERTEX_ATTRIB0_4_NV = ((int)0x8670),
                LUMINANCE16F_ARB = ((int)0x881E),
                MAP2_NORMAL = ((int)0x0DB2),
                LIGHT_MODEL_AMBIENT = ((int)0x0B53),
                RGB5_A1 = ((int)0x8057),
                OFFSET_TEXTURE_2D_SCALE_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_SCALE_NV),
                OPERAND2_RGB = ((int)0x8592),
                MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = ((int)0x8B49),
                WRAP_BORDER_SUN = ((int)0x81D4),
                MATRIX2_NV = ((int)0x8632),
                SAMPLES_PASSED_ARB = ((int)0x8914),
                RGB16 = ((int)0x8054),
                HISTOGRAM_BLUE_SIZE_EXT = ((int)0x802A),
                RGB10 = ((int)0x8052),
                RGB12 = ((int)0x8053),
                INTERPOLATE = ((int)0x8575),
                MIN_EXT = ((int)0x8007),
                RGBA2 = ((int)0x8055),
                DUAL_INTENSITY8_SGIS = ((int)0x8119),
                TEXTURE_FILTER4_SIZE_SGIS = ((int)0x8147),
                RGBA8 = ((int)0x8058),
                SIGNED_RGB_UNSIGNED_ALPHA_NV = ((int)0x870C),
                DYNAMIC_READ = ((int)0x88E9),
                INT_VEC2 = ((int)0x8B53),
                COMPRESSED_RGBA_S3TC_DXT3_EXT = ((int)0x83F2),
                SOURCE0_RGB_ARB = ((int)0x8580),
                SOURCE2_ALPHA = ((int)0x858A),
                TEXTURE_GREEN_SIZE = ((int)0x805D),
                SAMPLE_MASK_VALUE_SGIS = ((int)0x80AA),
                INTENSITY4_EXT = ((int)0x804A),
                MODELVIEW22_ARB = ((int)0x8736),
                COMPRESSED_LUMINANCE_ARB = ((int)0x84EA),
                OP_INDEX_EXT = ((int)0x8782),
                DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = ((int)0x86F3),
                LINEAR_DETAIL_COLOR_SGIS = ((int)0x8099),
                MATRIX23_ARB = ((int)0x88D7),
                TEXTURE_BINDING_3D = ((int)0x806A),
                TEXTURE_BINDING_2D = ((int)0x8069),
                TEXTURE_BINDING_1D = ((int)0x8068),
                NORMAL_ARRAY_TYPE_EXT = ((int)0x807E),
                COLOR_ARRAY_SIZE_EXT = ((int)0x8081),
                VARIABLE_F_NV = ((int)0x8528),
                REPLACE_EXT = ((int)0x8062),
                MODULATE = ((int)0x2100),
                COLOR_MATRIX_SGI = ((int)0x80B1),
                PIXEL_TILE_WIDTH_SGIX = ((int)0x8140),
                MAX_PROGRAM_ENV_PARAMETERS_ARB = ((int)0x88B5),
                BYTE = ((int)0x1400),
                QUAD_MESH_SUN = ((int)0x8614),
                FLOAT_RGBA_NV = ((int)0x8883),
                ALPHA_MAX_CLAMP_INGR = ((int)0x8567),
                CULL_FACE_MODE = ((int)0x0B45),
                DOT4_ATI = ((int)0x8967),
                INDEX_ARRAY_EXT = ((int)0x8077),
                SAMPLE_COVERAGE_VALUE_ARB = ((int)0x80AA),
                SOURCE2_RGB_EXT = ((int)0x8582),
                POINT_DISTANCE_ATTENUATION = ((int)0x8129),
                ELEMENT_ARRAY_BUFFER = ((int)0x8893),
                ARRAY_ELEMENT_LOCK_FIRST_EXT = ((int)0x81A8),
                OUTPUT_TEXTURE_COORD26_EXT = ((int)0x87B7),
                OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = ((int)0x8852),
                R5_G6_B5_ICC_SGIX = ((int)0x8466),
                GENERATE_MIPMAP_HINT_SGIS = ((int)0x8192),
                MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = ((int)0x8DE4),
                HISTOGRAM_LUMINANCE_SIZE_EXT = ((int)0x802C),
                MAP2_VERTEX_ATTRIB5_4_NV = ((int)0x8675),
                YCRCB_444_SGIX = ((int)0x81BC),
                RGBA_MODE = ((int)0x0C31),
                RED_SCALE = ((int)0x0D14),
                SAMPLE_BUFFERS_SGIS = ((int)0x80A8),
                LIST_MODE = ((int)0x0B30),
                PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = ((int)0x8163),
                OBJECT_LINEAR = ((int)0x2401),
                CON_19_ATI = ((int)0x8954),
                LIGHT7 = ((int)0x4007),
                ALPHA16_ICC_SGIX = ((int)0x8468),
                STENCIL_PASS_DEPTH_PASS = ((int)0x0B96),
                OUTPUT_TEXTURE_COORD16_EXT = ((int)0x87AD),
                MAX_PROJECTION_STACK_DEPTH = ((int)0x0D38),
                SAMPLE_COVERAGE_INVERT = ((int)0x80AB),
                CURRENT_RASTER_POSITION = ((int)0x0B07),
                VERTEX_WEIGHT_ARRAY_TYPE_EXT = ((int)0x850E),
                FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = ((int)0x8D56),
                MAP1_VERTEX_ATTRIB2_4_NV = ((int)0x8662),
                COLOR_TABLE_BIAS = ((int)0x80D7),
                IGNORE_BORDER_HP = ((int)0x8150),
                VERTEX_ARRAY_BUFFER_BINDING_ARB = ((int)0x8896),
                NOOP = ((int)0x1505),
                SCISSOR_TEST = ((int)0x0C11),
                RGBA = ((int)0x1908),
                RGB8_EXT = ((int)0x8051),
                TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = ((int)0x8516),
                SAMPLER_3D = ((int)0x8B5F),
                SAMPLER_2D = ((int)0x8B5E),
                YCRCBA_SGIX = ((int)0x8319),
                STENCIL_BUFFER_BIT = ((int)0x00000400),
                BUFFER_USAGE = ((int)0x8765),
                PROXY_TEXTURE_RECTANGLE_ARB = ((int)0x84F7),
                BUFFER_MAP_POINTER_ARB = ((int)0x88BD),
                SINGLE_COLOR_EXT = ((int)0x81F9),
                SIGNED_LUMINANCE8_ALPHA8_NV = ((int)0x8704),
                LUMINANCE4_ALPHA4 = ((int)0x8043),
                VERTEX_STREAM0_ATI = ((int)0x876C),
                NORMAL_MAP_ARB = ((int)0x8511),
                RGB_SCALE_ARB = ((int)0x8573),
                T2F_C3F_V3F = ((int)0x2A2A),
                BITMAP_TOKEN = ((int)0x0704),
                ASYNC_HISTOGRAM_SGIX = ((int)0x832C),
                COLOR_ARRAY_TYPE_EXT = ((int)0x8082),
                BINORMAL_ARRAY_TYPE_EXT = ((int)0x8440),
                MODELVIEW9_ARB = ((int)0x8729),
                PIXEL_FRAGMENT_RGB_SOURCE_SGIS = ((int)0x8354),
                VERTEX_ARRAY_RANGE_LENGTH_NV = ((int)0x851E),
                MULTISAMPLE_SGIS = ((int)0x809D),
                UNSIGNED_INT_10_10_10_2_EXT = ((int)0x8036),
                UNSIGNED_INT = ((int)0x1405),
                INDEX_TEST_EXT = ((int)0x81B5),
                ONE_MINUS_SRC_COLOR = ((int)0x0301),
                MAX_TEXTURE_STACK_DEPTH = ((int)0x0D39),
                PROGRAM_ERROR_POSITION_NV = ((int)0x864B),
                INTENSITY = ((int)0x8049),
                MODELVIEW12_ARB = ((int)0x872C),
                VERTEX_CONSISTENT_HINT_PGI = ((int)0x1A22B),
                COMBINE_EXT = ((int)0x8570),
                MAP1_VERTEX_4 = ((int)0x0D98),
                UNSIGNED_INT_24_8_NV = ((int)0x84FA),
                OBJECT_SUBTYPE_ARB = ((int)0x8B4F),
                OUTPUT_TEXTURE_COORD23_EXT = ((int)0x87B4),
                MAP1_VERTEX_3 = ((int)0x0D97),
                RETURN = ((int)0x0102),
                TANGENT_ARRAY_EXT = ((int)0x8439),
                FLOAT_MAT3x4 = ((int)0x8B68),
                DEPENDENT_RGB_TEXTURE_3D_NV = ((int)0x8859),
                SHARPEN_TEXTURE_FUNC_POINTS_SGIS = ((int)0x80B0),
                TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = ((int)0x8C85),
                INDEX_MODE = ((int)0x0C30),
                OUTPUT_TEXTURE_COORD12_EXT = ((int)0x87A9),
                INTENSITY16_ICC_SGIX = ((int)0x846A),
                REG_28_ATI = ((int)0x893D),
                RED_MAX_CLAMP_INGR = ((int)0x8564),
                POINT_SMOOTH_HINT = ((int)0x0C51),
                COLOR_ARRAY_EXT = ((int)0x8076),
                CLIP_PLANE4 = ((int)0x3004),
                HALF_FLOAT_NV = ((int)0x140B),
                TEXTURE_COMPRESSED = ((int)0x86A1),
                LINE = ((int)0x1B01),
                BINORMAL_ARRAY_EXT = ((int)0x843A),
                PROGRAM_LENGTH_NV = ((int)0x8627),
                MAX_PROGRAM_NATIVE_ATTRIBS_ARB = ((int)0x88AF),
                TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = ((int)0x8518),
                TRACK_MATRIX_TRANSFORM_NV = ((int)0x8649),
                SELECTION_BUFFER_POINTER = ((int)0x0DF3),
                DRAW_FRAMEBUFFER_EXT = ((int)0x8CA9),
                OUTPUT_TEXTURE_COORD13_EXT = ((int)0x87AA),
                TEXTURE_INDEX_SIZE_EXT = ((int)0x80ED),
                MAP2_VERTEX_ATTRIB2_4_NV = ((int)0x8672),
                RECLAIM_MEMORY_HINT_PGI = ((int)0x1A1FE),
                RENDERBUFFER_WIDTH_EXT = ((int)0x8D42),
                DEPTH_BIAS = ((int)0x0D1F),
                FOG_COORDINATE_ARRAY_POINTER = ((int)0x8456),
                SAMPLE_ALPHA_TO_ONE = ((int)0x809F),
                VARIABLE_D_NV = ((int)0x8526),
                AUX_BUFFERS = ((int)0x0C00),
                TANGENT_ARRAY_POINTER_EXT = ((int)0x8442),
                CON_12_ATI = ((int)0x894D),
                MODELVIEW1_EXT = ((int)0x850A),
                HISTOGRAM_GREEN_SIZE_EXT = ((int)0x8029),
                T2F_N3F_V3F = ((int)0x2A2B),
                ZOOM_Y = ((int)0x0D17),
                FOG_COORD_ARRAY_STRIDE = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_STRIDE),
                MAX_PROGRAM_CALL_DEPTH_NV = ((int)0x88F5),
                TEXTURE_MAX_CLAMP_S_SGIX = ((int)0x8369),
                COLOR = ((int)0x1800),
                TEXTURE_PRIORITY_EXT = ((int)0x8066),
                INCR_WRAP_EXT = ((int)0x8507),
                LUMINANCE16 = ((int)0x8042),
                MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8B4D),
                CONVOLUTION_BORDER_MODE = ((int)0x8013),
                LUMINANCE_ALPHA16UI_EXT = ((int)0x8D7B),
                FLOAT_MAT4x2 = ((int)0x8B69),
                TEXTURE30_ARB = ((int)0x84DE),
                TEXTURE_MATERIAL_PARAMETER_EXT = ((int)0x8352),
                BUMP_TARGET_ATI = ((int)0x877C),
                FRAGMENT_SHADER_ARB = ((int)0x8B30),
                LIGHT1 = ((int)0x4001),
                POST_CONVOLUTION_GREEN_BIAS_EXT = ((int)0x8021),
                UNPACK_IMAGE_HEIGHT_EXT = ((int)0x806E),
                FRAGMENT_SHADER = ((int)0x8B30),
                POLYGON_STIPPLE_BIT = ((int)0x00000010),
                TEXTURE_CUBE_MAP_EXT = ((int)0x8513),
                DRAW_BUFFER2 = ((int)0x8827),
                STREAM_DRAW_ARB = ((int)0x88E0),
                DEPTH_STENCIL_TO_BGRA_NV = ((int)0x886F),
                UNPACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A1),
                TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = ((int)0x8C8F),
                TEXCOORD2_BIT_PGI = ((int)0x20000000),
                MAX_VARYING_COMPONENTS_EXT = ((int)0x8B4B),
                MATRIX_INDEX_ARRAY_STRIDE_ARB = ((int)0x8848),
                OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = ((int)0x8853),
                CLIP_VOLUME_CLIPPING_HINT_EXT = ((int)0x80F0),
                DECAL = ((int)0x2101),
                CONVOLUTION_1D = ((int)0x8010),
                CONVOLUTION_2D = ((int)0x8011),
                UNSIGNED_SHORT_5_5_5_1 = ((int)0x8034),
                PRIMARY_COLOR = ((int)0x8577),
                LUMINANCE_ALPHA8UI_EXT = ((int)0x8D81),
                CONVOLUTION_WIDTH_EXT = ((int)0x8018),
                MAP_TESSELLATION_NV = ((int)0x86C2),
                EVAL_VERTEX_ATTRIB10_NV = ((int)0x86D0),
                COLOR_ARRAY_LIST_IBM = ((int)103072),
                MAT_SPECULAR_BIT_PGI = ((int)0x04000000),
                LIGHT_MODEL_LOCAL_VIEWER = ((int)0x0B51),
                DRAW_BUFFER1 = ((int)0x8826),
                DEPTH_BITS = ((int)0x0D56),
                OPERAND0_ALPHA_EXT = ((int)0x8598),
                PIXEL_UNPACK_BUFFER_ARB = ((int)0x88EC),
                HINT_BIT = ((int)0x00008000),
                ONE_MINUS_SRC_ALPHA = ((int)0x0303),
                NORMAL_ARRAY_TYPE = ((int)0x807E),
                PRIMITIVE_RESTART_INDEX_NV = ((int)0x8559),
                EVAL_2D_NV = ((int)0x86C0),
                VIEWPORT_BIT = ((int)0x00000800),
                OUTPUT_TEXTURE_COORD17_EXT = ((int)0x87AE),
                PIXEL_PACK_BUFFER_ARB = ((int)0x88EB),
                SRGB8 = ((int)0x8C41),
                LOCAL_EXT = ((int)0x87C4),
                EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = ((int)0x889B),
                REFLECTION_MAP = ((int)0x8512),
                EVAL_VERTEX_ATTRIB4_NV = ((int)0x86CA),
                MATRIX26_ARB = ((int)0x88DA),
                FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = ((int)103086),
                FOG_COORD_ARRAY_TYPE = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_TYPE),
                ONE_MINUS_CONSTANT_COLOR = ((int)0x8002),
                NORMAL_ARRAY_LIST_STRIDE_IBM = ((int)103081),
                DRAW_BUFFER8_ARB = ((int)0x882D),
                GL_2PASS_0_EXT = ((int)0x80A2),
                DRAW_BUFFER0 = ((int)0x8825),
                MAP2_VERTEX_ATTRIB13_4_NV = ((int)0x867D),
                GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA3),
                TRANSFORM_FEEDBACK_RECORD_NV = ((int)0x8C86),
                BACK = ((int)0x0405),
                PACK_RESAMPLE_SGIX = ((int)0x842C),
                MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = ((int)0x8DE1),
                CURRENT_FOG_COORDINATE = ((int)0x8453),
                FOG_SCALE_SGIX = ((int)0x81FC),
                MATRIX20_ARB = ((int)0x88D4),
                BLEND_SRC_RGB = ((int)0x80C9),
                CURRENT_TANGENT_EXT = ((int)0x843B),
                PROGRAM_TEX_INSTRUCTIONS_ARB = ((int)0x8806),
                MODELVIEW31_ARB = ((int)0x873F),
                TEXTURE_3D_BINDING_EXT = ((int)0x806A),
                RGBA4_EXT = ((int)0x8056),
                GREEN_SCALE = ((int)0x0D18),
                FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = ((int)0x8B8B),
                POINT_SIZE_MIN_EXT = ((int)0x8126),
                CON_18_ATI = ((int)0x8953),
                ALPHA32I_EXT = ((int)0x8D84),
                LINE_BIT = ((int)0x00000004),
                SAMPLE_ALPHA_TO_COVERAGE_ARB = ((int)0x809E),
                DEPTH_TEST = ((int)0x0B71),
                HISTOGRAM_FORMAT = ((int)0x8027),
                FLOAT_VEC3_ARB = ((int)0x8B51),
                COORD_REPLACE = ((int)0x8862),
                STENCIL_REF = ((int)0x0B97),
                TEXTURE_COORD_ARRAY_STRIDE_EXT = ((int)0x808A),
                POST_COLOR_MATRIX_GREEN_SCALE_SGI = ((int)0x80B5),
                RGBA32UI_EXT = ((int)0x8D70),
                STEREO = ((int)0x0C33),
                DOT3_ATI = ((int)0x8966),
                REG_18_ATI = ((int)0x8933),
                LIGHT2 = ((int)0x4002),
                UNSIGNED_BYTE_3_3_2_EXT = ((int)0x8032),
                SRC2_ALPHA = ((int)VERSION_1_3.SOURCE2_ALPHA),
                MODELVIEW1_MATRIX_EXT = ((int)0x8506),
                LUMINANCE32UI_EXT = ((int)0x8D74),
                ALPHA12_EXT = ((int)0x803D),
                TEXTURE15 = ((int)0x84CF),
                LUMINANCE = ((int)0x1909),
                MAP2_VERTEX_ATTRIB7_4_NV = ((int)0x8677),
                COLOR_SUM_EXT = ((int)0x8458),
                ADD = ((int)0x0104),
                TEXTURE13 = ((int)0x84CD),
                TEXTURE12 = ((int)0x84CC),
                FOG_COORDINATE_ARRAY_EXT = ((int)0x8457),
                COMPRESSED_RGB = ((int)0x84ED),
                TRANSPOSE_NV = ((int)0x862C),
                RENDERBUFFER_RED_SIZE_EXT = ((int)0x8D50),
                TANGENT_ARRAY_STRIDE_EXT = ((int)0x843F),
                SECONDARY_COLOR_ARRAY_POINTER = ((int)0x845D),
                LIGHT3 = ((int)0x4003),
                CULL_VERTEX_EXT = ((int)0x81AA),
                SOURCE2_RGB_ARB = ((int)0x8582),
                FRAGMENT_LIGHT7_SGIX = ((int)0x8413),
                VERTEX_ARRAY_TYPE_EXT = ((int)0x807B),
                TEXTURE_LOD_BIAS_T_SGIX = ((int)0x818F),
                MAP2_VERTEX_ATTRIB11_4_NV = ((int)0x867B),
                TRANSPOSE_MODELVIEW_MATRIX = ((int)0x84E3),
                PROXY_HISTOGRAM = ((int)0x8025),
                DSDT_MAG_INTENSITY_NV = ((int)0x86DC),
                COPY_PIXEL_TOKEN = ((int)0x0706),
                POINT_SPRITE_NV = ((int)0x8861),
                IMAGE_TRANSLATE_Y_HP = ((int)0x8158),
                PROGRAM_BINDING_ARB = ((int)0x8677),
                LUMINANCE_ALPHA_ICC_SGIX = ((int)0x8465),
                CON_15_ATI = ((int)0x8950),
                REDUCE = ((int)0x8016),
                RESAMPLE_ZERO_FILL_SGIX = ((int)0x842F),
                SPRITE_MODE_SGIX = ((int)0x8149),
                OFFSET_HILO_TEXTURE_RECTANGLE_NV = ((int)0x8855),
                INTENSITY_EXT = ((int)0x8049),
                GL_4PASS_3_SGIS = ((int)0x80A7),
                RGB16UI_EXT = ((int)0x8D77),
                INTENSITY12 = ((int)0x804C),
                COMPRESSED_TEXTURE_FORMATS = ((int)0x86A3),
                ALLOW_DRAW_WIN_HINT_PGI = ((int)0x1A20F),
                MAX_EXT = ((int)0x8008),
                MAX_VERTEX_STREAMS_ATI = ((int)0x876B),
                HI_BIAS_NV = ((int)0x8714),
                POLYGON_OFFSET_LINE = ((int)0x2A02),
                GL_2PASS_1_SGIS = ((int)0x80A3),
                LUMINANCE_ALPHA32F_ARB = ((int)0x8819),
                TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = ((int)0x851A),
                READ_BUFFER = ((int)0x0C02),
                PIXEL_MAP_A_TO_A_SIZE = ((int)0x0CB9),
                TRANSFORM_FEEDBACK_BUFFER_MODE_NV = ((int)0x8C7F),
                BITMAP = ((int)0x1A00),
                UNSIGNED_SHORT_5_6_5 = ((int)0x8363),
                LUMINANCE8_ALPHA8_EXT = ((int)0x8045),
                CURRENT_MATRIX_NV = ((int)0x8641),
                POST_COLOR_MATRIX_ALPHA_BIAS_SGI = ((int)0x80BB),
                CONVOLUTION_FILTER_BIAS = ((int)0x8015),
                MAX_PROGRAM_IF_DEPTH_NV = ((int)0x88F6),
                COMBINE_RGB = ((int)0x8571),
                OPERAND3_ALPHA_NV = ((int)0x859B),
                SOURCE1_ALPHA_EXT = ((int)0x8589),
                ALPHA_TEST_FUNC = ((int)0x0BC1),
                FLOAT_RGB32_NV = ((int)0x8889),
                BLEND_DST = ((int)0x0BE0),
                READ_ONLY_ARB = ((int)0x88B8),
                MODELVIEW18_ARB = ((int)0x8732),
                LIGHT_MODEL_COLOR_CONTROL = ((int)0x81F8),
                MAP2_VERTEX_ATTRIB12_4_NV = ((int)0x867C),
                DEPTH_SCALE = ((int)0x0D1E),
                TEXTURE_BASE_LEVEL = ((int)0x813C),
                BLEND_EQUATION_RGB_EXT = ((int)ARB_imaging.BLEND_EQUATION),
                CLAMP_TO_BORDER_ARB = ((int)0x812D),
                MATRIX_MODE = ((int)0x0BA0),
                MAX_RATIONAL_EVAL_ORDER_NV = ((int)0x86D7),
                TEXTURE_RESIDENT = ((int)0x8067),
                MAX_DRAW_BUFFERS_ATI = ((int)0x8824),
                PIXEL_TILE_GRID_DEPTH_SGIX = ((int)0x8144),
                CURRENT_VERTEX_EXT = ((int)0x87E2),
                SRGB = ((int)0x8C40),
                MODELVIEW15_ARB = ((int)0x872F),
                VERTEX_ATTRIB_ARRAY7_NV = ((int)0x8657),
                FOG_COORDINATE_SOURCE = ((int)0x8450),
                COMPRESSED_LUMINANCE_LATC1_EXT = ((int)0x8C70),
                DRAW_BUFFER8_ATI = ((int)0x882D),
                LUMINANCE4_EXT = ((int)0x803F),
                TEXTURE_MAX_ANISOTROPY_EXT = ((int)0x84FE),
                COLOR_TABLE_BIAS_SGI = ((int)0x80D7),
                AUX3 = ((int)0x040C),
                BUMP_NUM_TEX_UNITS_ATI = ((int)0x8777),
                FRAGMENT_COLOR_MATERIAL_FACE_SGIX = ((int)0x8402),
                RGBA8I_EXT = ((int)0x8D8E),
                OUTPUT_FOG_EXT = ((int)0x87BD),
                GENERATE_MIPMAP = ((int)0x8191),
                INVERTED_SCREEN_W_REND = ((int)0x8491),
                CON_25_ATI = ((int)0x895A),
                PIXEL_TEXTURE_SGIS = ((int)0x8353),
                UNSIGNED_INT_8_8_8_8_REV_EXT = ((int)0x8367),
                RGBA8UI_EXT = ((int)0x8D7C),
                TEXTURE21 = ((int)0x84D5),
                TANGENT_ARRAY_TYPE_EXT = ((int)0x843E),
                SECONDARY_COLOR_ARRAY_TYPE_EXT = ((int)0x845B),
                STENCIL_BACK_PASS_DEPTH_FAIL_ATI = ((int)0x8802),
                INVALID_FRAMEBUFFER_OPERATION_EXT = ((int)0x0506),
                RASTER_POSITION_UNCLIPPED_IBM = ((int)0x19262),
                AUX2 = ((int)0x040B),
                NOTEQUAL = ((int)0x0205),
                POST_CONVOLUTION_BLUE_SCALE = ((int)0x801E),
                MAX_GEOMETRY_OUTPUT_VERTICES_EXT = ((int)0x8DE0),
                MATRIX_INDEX_ARRAY_TYPE_ARB = ((int)0x8847),
                ATTRIB_ARRAY_TYPE_NV = ((int)0x8625),
                COLOR_ARRAY_TYPE = ((int)0x8082),
                XOR = ((int)0x1506),
                TEXTURE_ENV_COLOR = ((int)0x2201),
                ZERO_EXT = ((int)0x87DD),
                POST_COLOR_MATRIX_RED_BIAS_SGI = ((int)0x80B8),
                TEXTURE_COORD_ARRAY_TYPE_EXT = ((int)0x8089),
                BACK_LEFT = ((int)0x0402),
                VERTEX_ATTRIB_ARRAY0_NV = ((int)0x8650),
                COLOR_MATERIAL = ((int)0x0B57),
                POLYGON_OFFSET_BIAS_EXT = ((int)0x8039),
                TEXTURE_COMPARE_FUNC = ((int)0x884D),
                MAT_EMISSION_BIT_PGI = ((int)0x00800000),
                DRAW_BUFFER5 = ((int)0x882A),
                DRAW_BUFFER6_ARB = ((int)0x882B),
                DEPTH_BUFFER_BIT = ((int)0x00000100),
                NOR = ((int)0x1508),
                MAP1_VERTEX_ATTRIB14_4_NV = ((int)0x866E),
                DSDT8_MAG8_NV = ((int)0x870A),
                AUX1 = ((int)0x040A),
                MAX_TRACK_MATRICES_NV = ((int)0x862F),
                QUERY_RESULT_ARB = ((int)0x8866),
                OPERAND0_ALPHA = ((int)0x8598),
                FOG_SCALE_VALUE_SGIX = ((int)0x81FD),
                TEXTURE_MAX_LEVEL = ((int)0x813D),
                LINE_WIDTH_GRANULARITY = ((int)0x0B23),
                MODELVIEW7_ARB = ((int)0x8727),
                LINE_STIPPLE = ((int)0x0B24),
                PROGRAM_ERROR_STRING_ARB = ((int)0x8874),
                T4F_V4F = ((int)0x2A28),
                CONVOLUTION_HINT_SGIX = ((int)0x8316),
                CURRENT_RASTER_INDEX = ((int)0x0B05),
                ALPHA16UI_EXT = ((int)0x8D78),
                TEXTURE_BIT = ((int)0x00040000),
                VERTEX_WEIGHTING_EXT = ((int)0x8509),
                SAMPLER_2D_ARRAY_SHADOW_EXT = ((int)0x8DC4),
                RGB2_EXT = ((int)0x804E),
                BLUE_BITS = ((int)0x0D54),
                GEOMETRY_INPUT_TYPE_EXT = ((int)0x8DDB),
                ABGR_EXT = ((int)0x8000),
                GL_3D_COLOR = ((int)0x0602),
                UNPACK_ROW_LENGTH = ((int)0x0CF2),
                MAX_VERTEX_TEXTURE_IMAGE_UNITS = ((int)0x8B4C),
                MAX_PROGRAM_TEXEL_OFFSET_NV = ((int)0x8905),
                AUX0 = ((int)0x0409),
                FOG_DENSITY = ((int)0x0B62),
                C4F_N3F_V3F = ((int)0x2A26),
                PN_TRIANGLES_POINT_MODE_LINEAR_ATI = ((int)0x87F5),
                POST_COLOR_MATRIX_BLUE_SCALE = ((int)0x80B6),
                MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = ((int)0x87CE),
                CONVOLUTION_BORDER_MODE_EXT = ((int)0x8013),
                ELEMENT_ARRAY_TYPE_APPLE = ((int)0x8769),
                MATRIX_INDEX_ARRAY_POINTER_ARB = ((int)0x8849),
                PIXEL_TEX_GEN_ALPHA_LS_SGIX = ((int)0x8189),
                CLAMP_TO_BORDER_SGIS = ((int)0x812D),
                SAMPLE_MASK_INVERT_EXT = ((int)0x80AB),
                TEXT_FRAGMENT_SHADER_ATI = ((int)0x8200),
                MODELVIEW17_ARB = ((int)0x8731),
                CMYK_EXT = ((int)0x800C),
                RGBA2_EXT = ((int)0x8055),
                MODELVIEW0_EXT = ((int)All.MODELVIEW),
                PERSPECTIVE_CORRECTION_HINT = ((int)0x0C50),
                UNPACK_CLIENT_STORAGE_APPLE = ((int)0x85B2),
                SPARE0_PLUS_SECONDARY_COLOR_NV = ((int)0x8532),
                LINEAR_SHARPEN_COLOR_SGIS = ((int)0x80AF),
                COPY_INVERTED = ((int)0x150C),
                PROGRAM_NATIVE_TEMPORARIES_ARB = ((int)0x88A6),
                FRAGMENT_LIGHT5_SGIX = ((int)0x8411),
                FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA4),
                COMPARE_REF_DEPTH_TO_TEXTURE_EXT = ((int)0x884E),
                COMPRESSED_SRGB = ((int)0x8C48),
                PROXY_TEXTURE_2D_EXT = ((int)0x8064),
                TEXTURE_1D = ((int)0x0DE0),
                PACK_INVERT_MESA = ((int)0x8758),
                COMPRESSED_RED_GREEN_RGTC2_EXT = ((int)0x8DBD),
                UNPACK_SKIP_PIXELS = ((int)0x0CF4),
                VERTEX_PRECLIP_SGIX = ((int)0x83EE),
                UNPACK_IMAGE_DEPTH_SGIS = ((int)0x8133),
                EDGE_FLAG_ARRAY = ((int)0x8079),
                FRAGMENT_SHADER_ATI = ((int)0x8920),
                EVAL_VERTEX_ATTRIB6_NV = ((int)0x86CC),
                SELECTION_BUFFER_SIZE = ((int)0x0DF4),
                TEXTURE_COORD_ARRAY_SIZE_EXT = ((int)0x8088),
                PN_TRIANGLES_POINT_MODE_CUBIC_ATI = ((int)0x87F6),
                BUMP_TEX_UNITS_ATI = ((int)0x8778),
                MAX_ACTIVE_LIGHTS_SGIX = ((int)0x8405),
                DEPTH_TEXTURE_MODE = ((int)0x884B),
                FULL_STIPPLE_HINT_PGI = ((int)0x1A219),
                POINT_SIZE_GRANULARITY = ((int)0x0B13),
                CONSTANT_ALPHA = ((int)0x8003),
                LUMINANCE16I_EXT = ((int)0x8D8C),
                QUAD_ALPHA4_SGIS = ((int)0x811E),
                CURRENT_RASTER_NORMAL_SGIX = ((int)0x8406),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)0x80D5),
                MAX_EVAL_ORDER = ((int)0x0D30),
                UNIFORM_BUFFER_BINDING_EXT = ((int)0x8DEF),
                RGBA8_EXT = ((int)0x8058),
                INDEX_BIT_PGI = ((int)0x00080000),
                SHADER_OBJECT_ARB = ((int)0x8B48),
                VARIANT_ARRAY_POINTER_EXT = ((int)0x87E9),
                TEXTURE_CLIPMAP_FRAME_SGIX = ((int)0x8172),
                STENCIL_BACK_FAIL_ATI = ((int)0x8801),
                MAX_ASYNC_READ_PIXELS_SGIX = ((int)0x8361),
                TEXTURE25 = ((int)0x84D9),
                MIRRORED_REPEAT_IBM = ((int)0x8370),
                LUMINANCE16_ALPHA16_EXT = ((int)0x8048),
                TEXTURE26 = ((int)0x84DA),
                TEXTURE_MULTI_BUFFER_HINT_SGIX = ((int)0x812E),
                ALPHA8I_EXT = ((int)0x8D90),
                TEXTURE22 = ((int)0x84D6),
                TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = ((int)0x8175),
                OP_NEGATE_EXT = ((int)0x8783),
                NORMAL_ARRAY_STRIDE_EXT = ((int)0x807F),
                CURRENT_BINORMAL_EXT = ((int)0x843C),
                TEXTURE29 = ((int)0x84DD),
                SAMPLE_COVERAGE_INVERT_ARB = ((int)0x80AB),
                PIXEL_TEX_GEN_SGIX = ((int)0x8139),
                SCALE_BY_FOUR_NV = ((int)0x853F),
                PIXEL_MAP_R_TO_R = ((int)0x0C76),
                VERTEX_ARRAY_LIST_IBM = ((int)103070),
                GL_422_AVERAGE_EXT = ((int)0x80CE),
                TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = ((int)0x8517),
                RESAMPLE_REPLICATE_SGIX = ((int)0x842E),
                ALIASED_LINE_WIDTH_RANGE = ((int)0x846E),
                FRAGMENT_LIGHT3_SGIX = ((int)0x840F),
                TEXTURE_COMPARE_MODE_ARB = ((int)0x884C),
                TEXTURE7_ARB = ((int)0x84C7),
                CON_14_ATI = ((int)0x894F),
                REPLACEMENT_CODE_ARRAY_STRIDE_SUN = ((int)0x85C2),
                TEXTURE22_ARB = ((int)0x84D6),
                SAMPLER_CUBE_SHADOW_EXT = ((int)0x8DC5),
                QUADS = ((int)0x0007),
                TEXTURE_BLUE_SIZE_EXT = ((int)0x805E),
                OUT_OF_MEMORY = ((int)0x0505),
                MAT_SHININESS_BIT_PGI = ((int)0x02000000),
                MAP1_VERTEX_ATTRIB9_4_NV = ((int)0x8669),
                VIEWPORT = ((int)0x0BA2),
                PIXEL_TILE_BEST_ALIGNMENT_SGIX = ((int)0x813E),
                MODELVIEW25_ARB = ((int)0x8739),
                OBJECT_PLANE = ((int)0x2501),
                FOG_COORDINATE_SOURCE_EXT = ((int)0x8450),
                MODELVIEW28_ARB = ((int)0x873C),
                ALPHA8UI_EXT = ((int)0x8D7E),
                TEXTURE_CUBE_MAP_POSITIVE_Z = ((int)0x8519),
                MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = ((int)0x8C8B),
                FLOAT_MAT3 = ((int)0x8B5B),
                READ_FRAMEBUFFER_BINDING_EXT = ((int)EXT_framebuffer_object.FRAMEBUFFER_BINDING_EXT),
                IMAGE_ROTATE_ORIGIN_Y_HP = ((int)0x815B),
                VERTEX_WEIGHT_ARRAY_STRIDE_EXT = ((int)0x850F),
                INDEX_ARRAY_BUFFER_BINDING = ((int)0x8899),
                OPERAND2_ALPHA = ((int)0x859A),
                REFERENCE_PLANE_SGIX = ((int)0x817D),
                POINT_SIZE_RANGE = ((int)0x0B12),
                STACK_UNDERFLOW = ((int)0x0504),
                BOOL_VEC3_ARB = ((int)0x8B58),
                SIGNED_RGB_NV = ((int)0x86FE),
                CLEAR = ((int)0x1500),
                TEXTURE9_ARB = ((int)0x84C9),
                GL_4X_BIT_ATI = ((int)0x00000002),
                TEXTURE_COMPRESSED_IMAGE_SIZE = ((int)0x86A0),
                OFFSET_TEXTURE_RECTANGLE_SCALE_NV = ((int)0x864D),
                WRITE_PIXEL_DATA_RANGE_LENGTH_NV = ((int)0x887A),
                AND_INVERTED = ((int)0x1504),
                CONSTANT_ALPHA_EXT = ((int)0x8003),
                MAX_GEOMETRY_VARYING_COMPONENTS_EXT = ((int)0x8DDD),
                BLEND_EQUATION_ALPHA_EXT = ((int)0x883D),
                PIXEL_MAP_A_TO_A = ((int)0x0C79),
                RGB10_A2_EXT = ((int)0x8059),
                CURRENT_PALETTE_MATRIX_ARB = ((int)0x8843),
                TEXCOORD1_BIT_PGI = ((int)0x10000000),
                LUMINANCE_ALPHA8I_EXT = ((int)0x8D93),
                MODELVIEW19_ARB = ((int)0x8733),
                T2F_IUI_N3F_V3F_EXT = ((int)0x81B4),
                SEPARATE_ATTRIBS_NV = ((int)0x8C8D),
                INT_SAMPLER_2D_EXT = ((int)0x8DCA),
                EYE_RADIAL_NV = ((int)0x855B),
                RGB5_EXT = ((int)0x8050),
                ACTIVE_ATTRIBUTES = ((int)0x8B89),
                PIXEL_TEX_GEN_MODE_SGIX = ((int)0x832B),
                UNSIGNED_SHORT_4_4_4_4_REV = ((int)0x8365),
                OFFSET_TEXTURE_2D_MATRIX_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_MATRIX_NV),
                COORD_REPLACE_NV = ((int)0x8862),
                COLOR_ATTACHMENT11_EXT = ((int)0x8CEB),
                SECONDARY_COLOR_ARRAY_BUFFER_BINDING = ((int)0x889C),
                LINEAR_DETAIL_SGIS = ((int)0x8097),
                AVERAGE_HP = ((int)0x8160),
                TEXTURE_LOD_BIAS_S_SGIX = ((int)0x818E),
                TRIANGLE_MESH_SUN = ((int)0x8615),
                CLIP_DISTANCE_NV = ((int)0x8C7A),
                ALL_ATTRIB_BITS = unchecked((int)0xFFFFFFFF),
                MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87C5),
                TEXTURE4 = ((int)0x84C4),
                ELEMENT_ARRAY_POINTER_ATI = ((int)0x876A),
                MAX_DEFORMATION_ORDER_SGIX = ((int)0x8197),
                FILTER4_SGIS = ((int)0x8146),
                INT_SAMPLER_1D_EXT = ((int)0x8DC9),
                TEXTURE8_ARB = ((int)0x84C8),
                FEEDBACK_BUFFER_SIZE = ((int)0x0DF1),
                CURRENT_SECONDARY_COLOR_EXT = ((int)0x8459),
                CON_22_ATI = ((int)0x8957),
                ACCUM_BLUE_BITS = ((int)0x0D5A),
                STRICT_DEPTHFUNC_HINT_PGI = ((int)0x1A216),
                ACCUM_ALPHA_BITS = ((int)0x0D5B),
                LERP_ATI = ((int)0x8969),
                EVAL_VERTEX_ATTRIB9_NV = ((int)0x86CF),
                PROXY_TEXTURE_1D_EXT = ((int)0x8063),
                CLIENT_ATTRIB_STACK_DEPTH = ((int)0x0BB1),
                CURRENT_MATRIX_STACK_DEPTH_NV = ((int)0x8640),
                DUAL_INTENSITY12_SGIS = ((int)0x811A),
                IMAGE_TRANSFORM_2D_HP = ((int)0x8161),
                GL_4PASS_2_EXT = ((int)0x80A6),
                TEXTURE_WIDTH = ((int)0x1000),
                INT_VEC4 = ((int)0x8B55),
                MAX_PROGRAM_GENERIC_ATTRIBS_NV = ((int)0x8DA5),
                MAP1_BINORMAL_EXT = ((int)0x8446),
                MIRROR_CLAMP_TO_EDGE_ATI = ((int)0x8743),
                LUMINANCE_ALPHA = ((int)0x190A),
                AND = ((int)0x1501),
                FLOAT_MAT4 = ((int)0x8B5C),
                TEXTURE_CUBE_MAP_NEGATIVE_Z = ((int)0x851A),
                TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = ((int)0x8519),
                MODELVIEW23_ARB = ((int)0x8737),
                TRIANGLE_LIST_SUN = ((int)0x81D7),
                PASS_THROUGH_NV = ((int)0x86E6),
                UNSIGNED_SHORT_5_6_5_REV_EXT = ((int)0x8364),
                STENCIL_BACK_PASS_DEPTH_PASS_ATI = ((int)0x8803),
                OP_POWER_EXT = ((int)0x8793),
                DRAW_BUFFER1_ATI = ((int)0x8826),
                RESAMPLE_REPLICATE_OML = ((int)0x8986),
                UNPACK_ALIGNMENT = ((int)0x0CF5),
                TEXTURE_BINDING_CUBE_MAP = ((int)0x8514),
                INT_SAMPLER_3D_EXT = ((int)0x8DCB),
                PROGRAM_NATIVE_PARAMETERS_ARB = ((int)0x88AA),
                TEXTURE_DEPTH_EXT = ((int)0x8071),
                INT_VEC3 = ((int)0x8B54),
                MATRIX3_NV = ((int)0x8633),
                PROXY_TEXTURE_1D_STACK_MESAX = ((int)0x875B),
                MAX_SAMPLES_EXT = ((int)0x8D57),
                COMBINE4_NV = ((int)0x8503),
                EYE_POINT_SGIS = ((int)0x81F4),
                MODELVIEW = ((int)0x1700),
                TEXTURE_COMPRESSION_HINT_ARB = ((int)0x84EF),
                MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = ((int)0x8810),
                GL_4PASS_3_EXT = ((int)0x80A7),
                SOURCE0_ALPHA_ARB = ((int)0x8588),
                VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = ((int)0x889F),
                VERTEX_ATTRIB_ARRAY9_NV = ((int)0x8659),
                VERTEX_ATTRIB_ARRAY_POINTER = ((int)0x8645),
                CLIP_FAR_HINT_PGI = ((int)0x1A221),
                DUAL_ALPHA8_SGIS = ((int)0x8111),
                PIXEL_MAP_I_TO_G_SIZE = ((int)0x0CB3),
                FUNC_ADD_EXT = ((int)0x8006),
                QUAD_INTENSITY4_SGIS = ((int)0x8122),
                MATRIX27_ARB = ((int)0x88DB),
                LINE_RESET_TOKEN = ((int)0x0707),
                FOG_INDEX = ((int)0x0B61),
                MODELVIEW0_STACK_DEPTH_EXT = ((int)All.MODELVIEW_STACK_DEPTH),
                RENDERBUFFER_COVERAGE_SAMPLES_NV = ((int)0x8CAB),
                VERTEX_ATTRIB_ARRAY14_NV = ((int)0x865E),
                SRGB8_EXT = ((int)0x8C41),
                PIXEL_SUBSAMPLE_4444_SGIX = ((int)0x85A2),
                VERTEX_ATTRIB_ARRAY13_NV = ((int)0x865D),
                VERTEX_ATTRIB_ARRAY10_NV = ((int)0x865A),
                LINE_LOOP = ((int)0x0002),
                UNSIGNED_INT_SAMPLER_2D_RECT_EXT = ((int)0x8DD5),
                VERTEX_ATTRIB_ARRAY5_NV = ((int)0x8655),
                REPLACEMENT_CODE_ARRAY_SUN = ((int)0x85C0),
                OPERAND1_ALPHA_ARB = ((int)0x8599),
                PROGRAM_TEX_INDIRECTIONS_ARB = ((int)0x8807),
                FLOAT_MAT2_ARB = ((int)0x8B5A),
                ASYNC_MARKER_SGIX = ((int)0x8329),
                COMBINER_BIAS_NV = ((int)0x8549),
                SPARE0_NV = ((int)0x852E),
                UNSIGNED_INT_VEC2_EXT = ((int)0x8DC6),
                RGBA_FLOAT_MODE_ARB = ((int)0x8820),
                TEXTURE_COMPARE_FUNC_ARB = ((int)0x884D),
                TEXTURE_INTERNAL_FORMAT = ((int)0x1003),
                MAP1_VERTEX_ATTRIB4_4_NV = ((int)0x8664),
                NICEST = ((int)0x1102),
                MAX_TRACK_MATRIX_STACK_DEPTH_NV = ((int)0x862E),
                MAX_FRAMEZOOM_FACTOR_SGIX = ((int)0x818D),
                IMAGE_MAG_FILTER_HP = ((int)0x815C),
                COMBINER_SUM_OUTPUT_NV = ((int)0x854C),
                R1UI_T2F_V3F_SUN = ((int)0x85C9),
                FOG_COORDINATE_ARRAY_POINTER_EXT = ((int)0x8456),
                RGB_FLOAT32_ATI = ((int)0x8815),
                CURRENT_RASTER_TEXTURE_COORDS = ((int)0x0B06),
                MAX_TEXTURE_IMAGE_UNITS_NV = ((int)0x8872),
                ASYNC_DRAW_PIXELS_SGIX = ((int)0x835D),
                EMISSION = ((int)0x1600),
                COLOR_ATTACHMENT3_EXT = ((int)0x8CE3),
                TEXTURE_LIGHT_EXT = ((int)0x8350),
                VERTEX_ATTRIB_ARRAY15_NV = ((int)0x865F),
                PROGRAM_INSTRUCTIONS_ARB = ((int)0x88A0),
                LUMINANCE_ALPHA16F_ARB = ((int)0x881F),
                OP_SET_GE_EXT = ((int)0x878C),
                VERTEX_ATTRIB_ARRAY11_NV = ((int)0x865B),
                TEXTURE_2D_BINDING_EXT = ((int)0x8069),
                RENDERBUFFER_COLOR_SAMPLES_NV = ((int)0x8E10),
                MAX_FRAGMENT_UNIFORM_COMPONENTS = ((int)0x8B49),
                DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = ((int)0x885D),
                OBJECT_BUFFER_USAGE_ATI = ((int)0x8765),
                TEXCOORD4_BIT_PGI = unchecked((int)0x80000000),
                REFLECTION_MAP_ARB = ((int)0x8512),
                LUMINANCE_ALPHA32I_EXT = ((int)0x8D87),
                TRACK_MATRIX_NV = ((int)0x8648),
                MATRIX10_ARB = ((int)0x88CA),
                BIAS_BY_NEGATIVE_ONE_HALF_NV = ((int)0x8541),
                GLOBAL_ALPHA_FACTOR_SUN = ((int)0x81DA),
                RGBA16UI_EXT = ((int)0x8D76),
                PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = ((int)0x8355),
                COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = ((int)0x8C4F),
                TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = ((int)0x8519),
                OUTPUT_TEXTURE_COORD7_EXT = ((int)0x87A4),
                COLOR_ARRAY_BUFFER_BINDING_ARB = ((int)0x8898),
                MODELVIEW1_STACK_DEPTH_EXT = ((int)0x8502),
                MAP1_GRID_DOMAIN = ((int)0x0DD0),
                ELEMENT_ARRAY_BUFFER_BINDING_ARB = ((int)0x8895),
                ALPHA_BITS = ((int)0x0D55),
                PIXEL_TILE_GRID_WIDTH_SGIX = ((int)0x8142),
                LUMINANCE16_EXT = ((int)0x8042),
                COMPILE_AND_EXECUTE = ((int)0x1301),
                YCRCB_422_SGIX = ((int)0x81BB),
                TEXTURE_CLIPMAP_CENTER_SGIX = ((int)0x8171),
                SAMPLER_1D_ARRAY_SHADOW_EXT = ((int)0x8DC3),
                MATRIX0_ARB = ((int)0x88C0),
                PIXEL_TEX_GEN_Q_FLOOR_SGIX = ((int)0x8186),
                RGB8 = ((int)0x8051),
                PACK_SKIP_IMAGES_EXT = ((int)0x806B),
                FORCE_BLUE_TO_ONE_NV = ((int)0x8860),
                VERTEX_PROGRAM_POINT_SIZE_ARB = ((int)0x8642),
                PACK_SKIP_PIXELS = ((int)0x0D04),
                VERTEX_ARRAY_RANGE_APPLE = ((int)0x851D),
                ALPHA_BIAS = ((int)0x0D1D),
                MODELVIEW26_ARB = ((int)0x873A),
                GENERATE_MIPMAP_HINT = ((int)0x8192),
                EYE_DISTANCE_TO_POINT_SGIS = ((int)0x81F0),
                MAX_VERTEX_VARYING_COMPONENTS_EXT = ((int)0x8DDE),
                TEXTURE_CLIPMAP_OFFSET_SGIX = ((int)0x8173),
                EXTENSIONS = ((int)0x1F03),
                WRITE_PIXEL_DATA_RANGE_POINTER_NV = ((int)0x887C),
                OFFSET_TEXTURE_2D_BIAS_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_BIAS_NV),
                PROGRAM_NATIVE_ATTRIBS_ARB = ((int)0x88AE),
                PREVIOUS_EXT = ((int)0x8578),
                DEPTH_BOUNDS_TEST_EXT = ((int)0x8890),
                BOOL_VEC4_ARB = ((int)0x8B59),
                DEPTH32F_STENCIL8_NV = ((int)0x8DAC),
                TEXTURE_BINDING_1D_ARRAY_EXT = ((int)0x8C1C),
                VERTEX_WEIGHT_ARRAY_EXT = ((int)0x850C),
                TEXTURE_COORD_NV = ((int)0x8C79),
                VERTEX_ATTRIB_ARRAY12_NV = ((int)0x865C),
                OBJECT_ACTIVE_UNIFORMS_ARB = ((int)0x8B86),
                COLOR_TABLE_LUMINANCE_SIZE = ((int)0x80DE),
                RGBA_INTEGER_EXT = ((int)0x8D99),
                MAX_TEXTURE_UNITS = ((int)0x84E2),
                MIRRORED_REPEAT_ARB = ((int)0x8370),
                PACK_IMAGE_HEIGHT = ((int)0x806C),
                SHADER_SOURCE_LENGTH = ((int)0x8B88),
                MAX_SHININESS_NV = ((int)0x8504),
                OUTPUT_TEXTURE_COORD9_EXT = ((int)0x87A6),
                NEAREST_MIPMAP_NEAREST = ((int)0x2700),
                TEXTURE_BUFFER_EXT = ((int)0x8C2A),
                HISTOGRAM_RED_SIZE = ((int)0x8028),
                MATRIX0_NV = ((int)0x8630),
                SLUMINANCE8_ALPHA8_EXT = ((int)0x8C45),
                TEXTURE_LOD_BIAS_R_SGIX = ((int)0x8190),
                ONE_MINUS_CONSTANT_ALPHA_EXT = ((int)0x8004),
                R1UI_N3F_V3F_SUN = ((int)0x85C7),
                SIGNED_HILO_NV = ((int)0x86F9),
                SRC0_ALPHA = ((int)VERSION_1_3.SOURCE0_ALPHA),
                POST_TEXTURE_FILTER_BIAS_SGIX = ((int)0x8179),
                COLOR_MATERIAL_FACE = ((int)0x0B55),
                INTENSITY32F_ARB = ((int)0x8817),
                OCCLUSION_TEST_HP = ((int)0x8165),
                VERTEX_ATTRIB_ARRAY_ENABLED = ((int)0x8622),
                RGBA_FLOAT32_ATI = ((int)0x8814),
                LINEAR_CLIPMAP_LINEAR_SGIX = ((int)0x8170),
                LUMINANCE_ALPHA32UI_EXT = ((int)0x8D75),
                TEXTURE_COMPARE_OPERATOR_SGIX = ((int)0x819B),
                RGBA_INTEGER_MODE_EXT = ((int)0x8D9E),
                ALPHA16F_ARB = ((int)0x881C),
                OBJECT_LINK_STATUS_ARB = ((int)0x8B82),
                MAX_ATTRIB_STACK_DEPTH = ((int)0x0D35),
                MULTISAMPLE_EXT = ((int)0x809D),
                PROXY_TEXTURE_2D_STACK_MESAX = ((int)0x875C),
                SPECULAR = ((int)0x1202),
                GL_4PASS_0_SGIS = ((int)0x80A4),
                PARALLEL_ARRAYS_INTEL = ((int)0x83F4),
                OUTPUT_COLOR1_EXT = ((int)0x879C),
                BGRA_INTEGER_EXT = ((int)0x8D9B),
                VERTEX_ARRAY_POINTER = ((int)0x808E),
                SAMPLES_3DFX = ((int)0x86B4),
                LINE_SMOOTH = ((int)0x0B20),
                LINE_SMOOTH_HINT = ((int)0x0C52),
                CONVOLUTION_HEIGHT_EXT = ((int)0x8019),
                EYE_LINEAR = ((int)0x2400),
                TEXTURE_CUBE_MAP_POSITIVE_X = ((int)0x8515),
                RED_MIN_CLAMP_INGR = ((int)0x8560),
                MAP1_TANGENT_EXT = ((int)0x8444),
                MATRIX16_ARB = ((int)0x88D0),
                QUAD_ALPHA8_SGIS = ((int)0x811F),
                MINMAX_EXT = ((int)0x802E),
                MAX_PROGRAM_GENERIC_RESULTS_NV = ((int)0x8DA6),
                FRAGMENT_MATERIAL_EXT = ((int)0x8349),
                DRAW_BUFFER9_ATI = ((int)0x882E),
                READ_PIXEL_DATA_RANGE_LENGTH_NV = ((int)0x887B),
                MAX_FRAGMENT_LIGHTS_SGIX = ((int)0x8404),
                TEXTURE_DT_SIZE_NV = ((int)0x871E),
                PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = ((int)0x87F7),
                POST_CONVOLUTION_COLOR_TABLE_SGI = ((int)0x80D1),
                TEXTURE_CUBE_MAP_ARB = ((int)0x8513),
                VERTEX_PROGRAM_TWO_SIDE_ARB = ((int)0x8643),
                MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = ((int)0x8DE3),
                COMPRESSED_ALPHA_ARB = ((int)0x84E9),
                REPEAT = ((int)0x2901),
                CONVOLUTION_FORMAT_EXT = ((int)0x8017),
                HISTOGRAM_WIDTH = ((int)0x8026),
                TEXTURE29_ARB = ((int)0x84DD),
                MULTISAMPLE = ((int)0x809D),
                POINT_SIZE_MIN = ((int)0x8126),
                OUTPUT_TEXTURE_COORD30_EXT = ((int)0x87BB),
                IR_INSTRUMENT1_SGIX = ((int)0x817F),
                DRAW_BUFFER10_ATI = ((int)0x882F),
                DEPTH_STENCIL_NV = ((int)0x84F9),
                TEXTURE3_ARB = ((int)0x84C3),
                FRAMEBUFFER_UNSUPPORTED_EXT = ((int)0x8CDD),
                SET = ((int)0x150F),
                COMPRESSED_SLUMINANCE_EXT = ((int)0x8C4A),
                MAX_CUBE_MAP_TEXTURE_SIZE_EXT = ((int)0x851C),
                R3_G3_B2 = ((int)0x2A10),
                NORMAL_ARRAY_EXT = ((int)0x8075),
                HISTOGRAM_EXT = ((int)0x8024),
                CURRENT_MATRIX_ARB = ((int)0x8641),
                COMPILE = ((int)0x1300),
                DOT_PRODUCT_NV = ((int)0x86EC),
                POINT_SIZE_MIN_SGIS = ((int)0x8126),
                SHADING_LANGUAGE_VERSION_ARB = ((int)0x8B8C),
                SELECT = ((int)0x1C02),
                READ_FRAMEBUFFER_EXT = ((int)0x8CA8),
                CUBIC_EXT = ((int)0x8334),
                COMBINER7_NV = ((int)0x8557),
                COMBINER4_NV = ((int)0x8554),
                COLOR_ARRAY_STRIDE_EXT = ((int)0x8083),
                SOURCE0_RGB_EXT = ((int)0x8580),
                OBJECT_LINE_SGIS = ((int)0x81F7),
                CONSTANT_BORDER = ((int)0x8151),
                FRONT_RIGHT = ((int)0x0401),
                POST_CONVOLUTION_BLUE_BIAS = ((int)0x8022),
                COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = ((int)0x8C73),
                MODELVIEW_MATRIX = ((int)0x0BA6),
                IMAGE_ROTATE_ORIGIN_X_HP = ((int)0x815A),
                CW = ((int)0x0900),
                OUTPUT_TEXTURE_COORD0_EXT = ((int)0x879D),
                STENCIL_VALUE_MASK = ((int)0x0B93),
                SRC_ALPHA = ((int)0x0302),
                DUAL_LUMINANCE4_SGIS = ((int)0x8114),
                ALPHA_ICC_SGIX = ((int)0x8462),
                UNPACK_SKIP_IMAGES = ((int)0x806D),
                TEXTURE_PRE_SPECULAR_HP = ((int)0x8169),
                LIGHT_ENV_MODE_SGIX = ((int)0x8407),
                HALF_FLOAT_ARB = ((int)0x140B),
                FRAGMENT_PROGRAM_NV = ((int)0x8870),
                FRAMEBUFFER_COMPLETE_EXT = ((int)0x8CD5),
                OFFSET_TEXTURE_SCALE_NV = ((int)0x86E2),
                RGB5_A1_EXT = ((int)0x8057),
                CURRENT_VERTEX_WEIGHT_EXT = ((int)0x850B),
                C4UB_V3F = ((int)0x2A23),
                REG_27_ATI = ((int)0x893C),
                TRIANGLES = ((int)0x0004),
                BLUE_MAX_CLAMP_INGR = ((int)0x8566),
                CUBIC_HP = ((int)0x815F),
                PROGRAM_PARAMETER_NV = ((int)0x8644),
                TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = ((int)0x8516),
                DUAL_ALPHA12_SGIS = ((int)0x8112),
                INDEX_TEST_FUNC_EXT = ((int)0x81B6),
                GL_2PASS_1_EXT = ((int)0x80A3),
                EIGHTH_BIT_ATI = ((int)0x00000020),
                GL_422_REV_EXT = ((int)0x80CD),
                RGB_SCALE_EXT = ((int)0x8573),
                MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87CD),
                TEXTURE_4D_BINDING_SGIS = ((int)0x814F),
                PROXY_TEXTURE_COLOR_TABLE_SGI = ((int)0x80BD),
                MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = ((int)0x8C29),
                HISTOGRAM_FORMAT_EXT = ((int)0x8027),
                LUMINANCE8UI_EXT = ((int)0x8D80),
                CURRENT_QUERY = ((int)0x8865),
                VERTEX_ARRAY_POINTER_EXT = ((int)0x808E),
                R1UI_C4F_N3F_V3F_SUN = ((int)0x85C8),
                QUAD_LUMINANCE4_SGIS = ((int)0x8120),
                PIXEL_PACK_BUFFER_BINDING_ARB = ((int)0x88ED),
                ELEMENT_ARRAY_TYPE_ATI = ((int)0x8769),
                FOG_COORD_ARRAY_POINTER = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_POINTER),
                PRIMARY_COLOR_EXT = ((int)0x8577),
                CULL_VERTEX_IBM = ((int)103050),
                OCCLUSION_TEST_RESULT_HP = ((int)0x8166),
                TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = ((int)0x8C2D),
                CURRENT_MATRIX_INDEX_ARB = ((int)0x8845),
                MAX_MULTISAMPLE_COVERAGE_MODES_NV = ((int)0x8E11),
                ONE_MINUS_DST_ALPHA = ((int)0x0305),
                VERTEX_ARRAY_RANGE_POINTER_APPLE = ((int)0x8521),
                NEGATIVE_X_EXT = ((int)0x87D9),
                CLIENT_ALL_ATTRIB_BITS = unchecked((int)0xFFFFFFFF),
                COMBINE_ALPHA = ((int)0x8572),
                INCR_WRAP = ((int)0x8507),
                SAMPLER_2D_ARRAY_EXT = ((int)0x8DC1),
                PIXEL_UNPACK_BUFFER_EXT = ((int)0x88EC),
                OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = ((int)0x8B8A),
                SHADER_TYPE = ((int)0x8B4F),
                VERTEX_ATTRIB_ARRAY_SIZE = ((int)0x8623),
                MUL_ATI = ((int)0x8964),
                GREEN_BIT_ATI = ((int)0x00000002),
                PIXEL_MAP_I_TO_B_SIZE = ((int)0x0CB4),
                LUMINANCE_ICC_SGIX = ((int)0x8463),
                REPLACE_MIDDLE_SUN = ((int)0x0002),
                TEXTURE_CUBE_MAP_POSITIVE_Y = ((int)0x8517),
                FALSE = ((int)0),
                OFFSET_TEXTURE_RECTANGLE_NV = ((int)0x864C),
                POST_COLOR_MATRIX_BLUE_SCALE_SGI = ((int)0x80B6),
                PACK_SKIP_ROWS = ((int)0x0D03),
                VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = ((int)0x889F),
                BLEND_SRC_RGB_EXT = ((int)0x80C9),
                PREVIOUS_ARB = ((int)0x8578),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D5),
                LIGHT_MODEL_SPECULAR_VECTOR_APPLE = ((int)0x85B0),
                LUMINANCE_ALPHA_FLOAT16_ATI = ((int)0x881F),
                MATRIX_INDEX_ARRAY_SIZE_ARB = ((int)0x8846),
                NUM_LOOPBACK_COMPONENTS_ATI = ((int)0x8974),
                ALLOW_DRAW_MEM_HINT_PGI = ((int)0x1A211),
                POST_COLOR_MATRIX_GREEN_SCALE = ((int)0x80B5),
                TEXTURE_GEN_MODE = ((int)0x2500),
                CONVOLUTION_FILTER_BIAS_EXT = ((int)0x8015),
                PIXEL_PACK_BUFFER_BINDING = ((int)0x88ED),
                RASTERIZER_DISCARD_NV = ((int)0x8C89),
                COLOR_INDEXES = ((int)0x1603),
                POST_COLOR_MATRIX_RED_BIAS = ((int)0x80B8),
                PIXEL_UNPACK_BUFFER = ((int)0x88EC),
                SAMPLER_2D_RECT_ARB = ((int)0x8B63),
                LUMINANCE8_ALPHA8 = ((int)0x8045),
                PIXEL_MAP_I_TO_R = ((int)0x0C72),
                COLOR_CLEAR_VALUE = ((int)0x0C22),
                BOOL_VEC2_ARB = ((int)0x8B57),
                RGB16I_EXT = ((int)0x8D89),
                LUMINANCE4 = ((int)0x803F),
                T2F_C4UB_V3F = ((int)0x2A29),
                SAMPLER_1D = ((int)0x8B5D),
                INDEX_ARRAY_LIST_IBM = ((int)103073),
                FRAGMENT_LIGHT2_SGIX = ((int)0x840E),
                V2F = ((int)0x2A20),
                ACCUM_BUFFER_BIT = ((int)0x00000200),
                DSDT_MAG_NV = ((int)0x86F6),
                TEXTURE_BORDER = ((int)0x1005),
                MAX_TEXTURE_MAX_ANISOTROPY_EXT = ((int)0x84FF),
                SPARE1_NV = ((int)0x852F),
                OP_DOT3_EXT = ((int)0x8784),
                MAX_RECTANGLE_TEXTURE_SIZE_NV = ((int)0x84F8),
                RENDERBUFFER_BINDING_EXT = ((int)0x8CA7),
                FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = ((int)0x8CDA),
                OBJECT_BUFFER_SIZE_ATI = ((int)0x8764),
                UNSIGNED_SHORT_8_8_REV_MESA = ((int)0x85BB),
                POLYGON_BIT = ((int)0x00000008),
                TEXTURE_4D_SGIS = ((int)0x8134),
                TEXTURE_3D_EXT = ((int)0x806F),
                TEXTURE_COMPARE_MODE = ((int)0x884C),
                PN_TRIANGLES_POINT_MODE_ATI = ((int)0x87F2),
                OP_ADD_EXT = ((int)0x8787),
                MAX_TEXTURE_COORDS_ARB = ((int)0x8871),
                TEXTURE_COORD_ARRAY_POINTER = ((int)0x8092),
                TEXTURE_HEIGHT = ((int)0x1001),
                TEXTURE_BINDING_RECTANGLE_ARB = ((int)0x84F6),
                ALPHA4 = ((int)0x803B),
                NAME_STACK_DEPTH = ((int)0x0D70),
                STENCIL_BACK_PASS_DEPTH_FAIL = ((int)0x8802),
                TEXTURE_WRAP_S = ((int)0x2802),
                DOUBLE = ((int)0x140A),
                RGB_ICC_SGIX = ((int)0x8460),
                QUAD_LUMINANCE8_SGIS = ((int)0x8121),
                TEXTURE_ENV_MODE = ((int)0x2200),
                MAX_PROGRAM_PARAMETERS_ARB = ((int)0x88A9),
                DOT3_RGBA = ((int)0x86AF),
                UNSIGNED_INT_24_8_EXT = ((int)0x84FA),
                VERTEX_ARRAY_STRIDE_EXT = ((int)0x807C),
                LUMINANCE12_ALPHA12_EXT = ((int)0x8047),
                CURRENT_NORMAL = ((int)0x0B02),
                FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = ((int)0x8CDC),
                TEXTURE30 = ((int)0x84DE),
                DRAW_BUFFER3_ATI = ((int)0x8828),
                COLOR_INDEX8_EXT = ((int)0x80E5),
                SAMPLE_PATTERN_EXT = ((int)0x80AC),
                DU8DV8_ATI = ((int)0x877A),
                UNSIGNED_INT_S8_S8_8_8_NV = ((int)0x86DA),
                C4UB_V2F = ((int)0x2A22),
                COMPARE_R_TO_TEXTURE_ARB = ((int)0x884E),
                VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87D1),
                VERTEX_ATTRIB_ARRAY_ENABLED_ARB = ((int)0x8622),
                NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F6),
                CLAMP_TO_EDGE = ((int)0x812F),
                POLYGON_SMOOTH = ((int)0x0B41),
                EYE_PLANE = ((int)0x2502),
                IMAGE_TRANSLATE_X_HP = ((int)0x8157),
                DYNAMIC_COPY = ((int)0x88EA),
                MIN_PROGRAM_TEXEL_OFFSET_NV = ((int)0x8904),
                MAX_NAME_STACK_DEPTH = ((int)0x0D37),
                REPLACEMENT_CODE_ARRAY_TYPE_SUN = ((int)0x85C1),
                TEXTURE_HI_SIZE_NV = ((int)0x871B),
                SWIZZLE_STQ_DQ_ATI = ((int)0x8979),
                SPOT_DIRECTION = ((int)0x1204),
                TEXTURE_DS_SIZE_NV = ((int)0x871D),
                REFLECTION_MAP_EXT = ((int)0x8512),
                CON_7_ATI = ((int)0x8948),
                OBJECT_TYPE_ARB = ((int)0x8B4E),
                DITHER = ((int)0x0BD0),
                VERTEX_PROGRAM_NV = ((int)0x8620),
                MAP1_VERTEX_ATTRIB11_4_NV = ((int)0x866B),
                FLOAT_R_NV = ((int)0x8880),
                PRIMITIVES_GENERATED_NV = ((int)0x8C87),
                TRANSFORM_FEEDBACK_ATTRIBS_NV = ((int)0x8C7E),
                RGB32UI_EXT = ((int)0x8D71),
                FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = ((int)0x8408),
                SIGNED_ALPHA8_NV = ((int)0x8706),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = ((int)0x8CD4),
                BGR_EXT = ((int)0x80E0),
                MAP1_VERTEX_ATTRIB3_4_NV = ((int)0x8663),
                VERTEX_ATTRIB_ARRAY_POINTER_ARB = ((int)0x8645),
                FORMAT_SUBSAMPLE_24_24_OML = ((int)0x8982),
                RENDERBUFFER_BLUE_SIZE_EXT = ((int)0x8D52),
                DRAW_BUFFER0_ATI = ((int)0x8825),
                DETAIL_TEXTURE_2D_SGIS = ((int)0x8095),
                SHADE_MODEL = ((int)0x0B54),
                MAX_PIXEL_MAP_TABLE = ((int)0x0D34),
                NORMAL_BIT_PGI = ((int)0x08000000),
                OPERAND2_RGB_EXT = ((int)0x8592),
                STREAM_READ = ((int)0x88E1),
                PROXY_TEXTURE_1D = ((int)0x8063),
                DST_ALPHA = ((int)0x0304),
                COLOR_ALPHA_PAIRING_ATI = ((int)0x8975),
                BLUE_SCALE = ((int)0x0D1A),
                LUMINANCE_INTEGER_EXT = ((int)0x8D9C),
                SWIZZLE_STRQ_DQ_ATI = ((int)0x897B),
                COMPRESSED_RGB_S3TC_DXT1_EXT = ((int)0x83F0),
                POINT_SIZE_MAX_SGIS = ((int)0x8127),
                UNSIGNED_SHORT_4_4_4_4_REV_EXT = ((int)0x8365),
                ACTIVE_TEXTURE = ((int)0x84E0),
                MAX_GENERAL_COMBINERS_NV = ((int)0x854D),
                DISTANCE_ATTENUATION_EXT = ((int)0x8129),
                MAX_TEXTURE_UNITS_ARB = ((int)0x84E2),
                MAX_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8872),
                LINES = ((int)0x0001),
                PIXEL_MAP_I_TO_I = ((int)0x0C70),
                MODELVIEW24_ARB = ((int)0x8738),
                MODELVIEW27_ARB = ((int)0x873B),
                CON_5_ATI = ((int)0x8946),
                MAP2_GRID_DOMAIN = ((int)0x0DD2),
                PROXY_COLOR_TABLE = ((int)0x80D3),
                TEXTURE_1D_BINDING_EXT = ((int)0x8068),
                ELEMENT_ARRAY_POINTER_APPLE = ((int)0x876A),
                PIXEL_TILE_HEIGHT_SGIX = ((int)0x8141),
                DISCARD_NV = ((int)0x8530),
                OUTPUT_VERTEX_EXT = ((int)0x879A),
                TRANSPOSE_COLOR_MATRIX = ((int)0x84E6),
                SCISSOR_BIT = ((int)0x00080000),
                FOG_HINT = ((int)0x0C54),
                STRICT_SCISSOR_HINT_PGI = ((int)0x1A218),
                COLOR_TABLE_INTENSITY_SIZE = ((int)0x80DF),
                T2F_C4F_N3F_V3F = ((int)0x2A2C),
                DRAW_BUFFER9_ARB = ((int)0x882E),
                SCALAR_EXT = ((int)0x87BE),
                NUM_INSTRUCTIONS_TOTAL_ATI = ((int)0x8972),
                TEXTURE27 = ((int)0x84DB),
                VERTEX_ARRAY_COUNT_EXT = ((int)0x807D),
                OPERAND3_RGB_NV = ((int)0x8593),
                NORMAL_ARRAY_LIST_IBM = ((int)103071),
                TEXTURE23 = ((int)0x84D7),
                EDGEFLAG_BIT_PGI = ((int)0x00040000),
                QUERY_COUNTER_BITS_ARB = ((int)0x8864),
                LOCAL_CONSTANT_VALUE_EXT = ((int)0x87EC),
                OP_MIN_EXT = ((int)0x878B),
                SOURCE3_RGB_NV = ((int)0x8583),
                CON_0_ATI = ((int)0x8941),
                WEIGHT_ARRAY_ARB = ((int)0x86AD),
                BOOL_VEC4 = ((int)0x8B59),
                MAX_TEXTURE_SIZE = ((int)0x0D33),
                EVAL_VERTEX_ATTRIB8_NV = ((int)0x86CE),
                BOOL_VEC3 = ((int)0x8B58),
                OBJECT_SHADER_SOURCE_LENGTH_ARB = ((int)0x8B88),
                INT_SAMPLER_2D_RECT_EXT = ((int)0x8DCD),
                SPRITE_AXIS_SGIX = ((int)0x814A),
                OP_MOV_EXT = ((int)0x8799),
                RGBA_ICC_SGIX = ((int)0x8461),
                QUERY_RESULT_AVAILABLE_ARB = ((int)0x8867),
                LUMINANCE12_EXT = ((int)0x8041),
                DRAW_BUFFER = ((int)0x0C01),
                EMBOSS_MAP_NV = ((int)0x855F),
                ADD_ATI = ((int)0x8963),
                IMAGE_SCALE_Y_HP = ((int)0x8156),
                IMAGE_SCALE_X_HP = ((int)0x8155),
                EVAL_VERTEX_ATTRIB12_NV = ((int)0x86D2),
                BGR_INTEGER_EXT = ((int)0x8D9A),
                COLOR_ATTACHMENT5_EXT = ((int)0x8CE5),
                MAX_PROGRAM_TEX_INDIRECTIONS_ARB = ((int)0x880D),
                ALPHA8_EXT = ((int)0x803C),
                NEAREST = ((int)0x2600),
                PROGRAM_FORMAT_ARB = ((int)0x8876),
                PROGRAM_NATIVE_INSTRUCTIONS_ARB = ((int)0x88A2),
                DEPTH_FUNC = ((int)0x0B74),
                DOT_PRODUCT_TEXTURE_3D_NV = ((int)0x86EF),
                NORMAL_ARRAY_POINTER_EXT = ((int)0x808F),
                REG_12_ATI = ((int)0x892D),
                NORMALIZE = ((int)0x0BA1),
                FOG_COORDINATE = ((int)0x8451),
                SLICE_ACCUM_SUN = ((int)0x85CC),
                TEXTURE_MAX_LEVEL_SGIS = ((int)0x813D),
                COLOR_TABLE_WIDTH = ((int)0x80D9),
                FOG_MODE = ((int)0x0B65),
                EVAL_BIT = ((int)0x00010000),
                RGBA32F_ARB = ((int)0x8814),
                ATTACHED_SHADERS = ((int)0x8B85),
                POST_CONVOLUTION_RED_BIAS_EXT = ((int)0x8020),
                ATTRIB_STACK_DEPTH = ((int)0x0BB0),
                TEXTURE_BINDING_CUBE_MAP_ARB = ((int)0x8514),
                CON_6_ATI = ((int)0x8947),
                TEXTURE_LIGHTING_MODE_HP = ((int)0x8167),
                UNSIGNED_INT_10F_11F_11F_REV_EXT = ((int)0x8C3B),
                QUADRATIC_ATTENUATION = ((int)0x1209),
                ADD_SIGNED_EXT = ((int)0x8574),
                LUMINANCE16_ALPHA8_ICC_SGIX = ((int)0x846B),
                DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = ((int)0x885A),
                GREATER = ((int)0x0204),
                MAX = ((int)0x8008),
                OP_MAX_EXT = ((int)0x878A),
                RENDERER = ((int)0x1F01),
                VERTEX_ARRAY_TYPE = ((int)0x807B),
                MULTISAMPLE_BIT_EXT = ((int)0x20000000),
                FLOAT_RGB_NV = ((int)0x8882),
                MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = ((int)0x88A3),
                TEXTURE_BORDER_VALUES_NV = ((int)0x871A),
                INDEX_TEST_REF_EXT = ((int)0x81B7),
                CON_1_ATI = ((int)0x8942),
                MAP2_VERTEX_ATTRIB4_4_NV = ((int)0x8674),
                VERTEX_STREAM4_ATI = ((int)0x8770),
                POINT_SMOOTH = ((int)0x0B10),
                PRIMARY_COLOR_NV = ((int)0x852C),
                SUBPIXEL_BITS = ((int)0x0D50),
                REPLACE = ((int)0x1E01),
                CONSTANT_COLOR = ((int)0x8001),
                LINEAR_CLIPMAP_NEAREST_SGIX = ((int)0x844F),
                EDGE_FLAG_ARRAY_COUNT_EXT = ((int)0x808D),
                NUM_COMPRESSED_TEXTURE_FORMATS_ARB = ((int)0x86A2),
                VERTEX_ARRAY_SIZE = ((int)0x807A),
                BUFFER_ACCESS = ((int)0x88BB),
                EVAL_VERTEX_ATTRIB11_NV = ((int)0x86D1),
                BLUE = ((int)0x1905),
                INDEX_ARRAY_BUFFER_BINDING_ARB = ((int)0x8899),
                POST_COLOR_MATRIX_COLOR_TABLE_SGI = ((int)0x80D2),
                BACK_SECONDARY_COLOR_NV = ((int)0x8C78),
                CURRENT_ATTRIB_NV = ((int)0x8626),
                PROXY_TEXTURE_4D_SGIS = ((int)0x8135),
                COLOR_TABLE_LUMINANCE_SIZE_SGI = ((int)0x80DE),
                TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = ((int)0x8174),
                OFFSET_PROJECTIVE_TEXTURE_2D_NV = ((int)0x8850),
                OR_INVERTED = ((int)0x150D),
                MATRIX17_ARB = ((int)0x88D1),
                MAX_TEXTURE_LOD_BIAS_EXT = ((int)0x84FD),
                PROXY_TEXTURE_CUBE_MAP_EXT = ((int)0x851B),
                MAP1_VERTEX_ATTRIB1_4_NV = ((int)0x8661),
                VERTEX_PROGRAM_TWO_SIDE_NV = ((int)0x8643),
                COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = ((int)0x8DBE),
                UNSIGNED_INT_8_8_8_8_REV = ((int)0x8367),
                INVARIANT_EXT = ((int)0x87C2),
                MAX_CLIPMAP_DEPTH_SGIX = ((int)0x8177),
                CURRENT_FOG_COORDINATE_EXT = ((int)0x8453),
                COLOR_ATTACHMENT1_EXT = ((int)0x8CE1),
                LUMINANCE6_ALPHA2_EXT = ((int)0x8044),
                OR_REVERSE = ((int)0x150B),
                COLOR_INDEX2_EXT = ((int)0x80E3),
                MIN = ((int)0x8007),
                PIXEL_SUBSAMPLE_2424_SGIX = ((int)0x85A3),
                CONVOLUTION_BORDER_COLOR_HP = ((int)0x8154),
                ALPHA16 = ((int)0x803E),
                BLUE_BIAS = ((int)0x0D1B),
                TEXTURE_COORD_ARRAY = ((int)0x8078),
                VERTEX_SHADER = ((int)0x8B31),
                SEPARATE_SPECULAR_COLOR_EXT = ((int)0x81FA),
                MAP2_BINORMAL_EXT = ((int)0x8447),
                PROJECTION = ((int)0x1701),
                VERTEX_ATTRIB_ARRAY_SIZE_ARB = ((int)0x8623),
                SHADOW_ATTENUATION_EXT = ((int)0x834E),
                COLOR_TABLE_ALPHA_SIZE = ((int)0x80DD),
                FRAGMENT_LIGHT1_SGIX = ((int)0x840D),
                COMPRESSED_RGB_ARB = ((int)0x84ED),
                HISTOGRAM = ((int)0x8024),
                VARIABLE_B_NV = ((int)0x8524),
                ALPHA8 = ((int)0x803C),
                NEAREST_CLIPMAP_NEAREST_SGIX = ((int)0x844D),
                TEXTURE_INTENSITY_SIZE_EXT = ((int)0x8061),
                COLOR_ATTACHMENT6_EXT = ((int)0x8CE6),
                MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87CA),
                BOOL_VEC2 = ((int)0x8B57),
                COMPRESSED_SRGB_S3TC_DXT1_EXT = ((int)0x8C4C),
                DEPTH_COMPONENT16_ARB = ((int)0x81A5),
                OPERAND1_RGB_ARB = ((int)0x8591),
                MAX_VERTEX_BINDABLE_UNIFORMS_EXT = ((int)0x8DE2),
                TEXTURE_LO_SIZE_NV = ((int)0x871C),
                COLOR_TABLE_GREEN_SIZE_SGI = ((int)0x80DB),
                OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = ((int)0x8856),
                CONVOLUTION_WIDTH = ((int)0x8018),
                OUTPUT_TEXTURE_COORD21_EXT = ((int)0x87B2),
                TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = ((int)103084),
                POST_COLOR_MATRIX_BLUE_BIAS_SGI = ((int)0x80BA),
                DOT_PRODUCT_TEXTURE_2D_NV = ((int)0x86EE),
                DOT3_RGB = ((int)0x86AE),
                COLOR_ATTACHMENT7_EXT = ((int)0x8CE7),
                REG_22_ATI = ((int)0x8937),
                VERTEX_ATTRIB_ARRAY4_NV = ((int)0x8654),
                OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = ((int)0x8851),
                POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D1),
                INDEX_ARRAY_STRIDE = ((int)0x8086),
                LUMINANCE12_ALPHA4 = ((int)0x8046),
                STENCIL_WRITEMASK = ((int)0x0B98),
                OP_CLAMP_EXT = ((int)0x878E),
                SUB_ATI = ((int)0x8965),
                FOG_COLOR = ((int)0x0B66),
                BACK_RIGHT = ((int)0x0403),
                LIST_PRIORITY_SGIX = ((int)0x8182),
                TEXTURE_MAG_FILTER = ((int)0x2800),
                PIXEL_MAP_I_TO_A_SIZE = ((int)0x0CB5),
                MAX_CONVOLUTION_HEIGHT_EXT = ((int)0x801B),
                MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = ((int)0x8DDF),
                OUTPUT_TEXTURE_COORD11_EXT = ((int)0x87A8),
                PROGRAM_OBJECT_ARB = ((int)0x8B40),
                CLAMP_READ_COLOR_ARB = ((int)0x891C),
                MAX_PROGRAM_ATTRIBS_ARB = ((int)0x88AD),
                R1UI_T2F_N3F_V3F_SUN = ((int)0x85CA),
                TRIANGLE_STRIP = ((int)0x0005),
                DUAL_LUMINANCE8_SGIS = ((int)0x8115),
                PIXEL_TEX_GEN_ALPHA_MS_SGIX = ((int)0x818A),
                POLYGON_OFFSET_EXT = ((int)0x8037),
                CONVOLUTION_HEIGHT = ((int)0x8019),
                ONE = ((int)1),
                POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = ((int)0x817B),
                PACK_SKIP_VOLUMES_SGIS = ((int)0x8130),
                VERTEX_SHADER_LOCALS_EXT = ((int)0x87D3),
                MAX_CONVOLUTION_WIDTH_EXT = ((int)0x801A),
                INVARIANT_DATATYPE_EXT = ((int)0x87EB),
                STENCIL_BACK_VALUE_MASK = ((int)0x8CA4),
                TEXTURE_DEPTH = ((int)0x8071),
                BOOL_ARB = ((int)0x8B56),
                PIXEL_PACK_BUFFER = ((int)0x88EB),
                SMOOTH = ((int)0x1D01),
                WEIGHT_ARRAY_POINTER_ARB = ((int)0x86AC),
                SCISSOR_BOX = ((int)0x0C10),
                GREEN_INTEGER_EXT = ((int)0x8D95),
                RESAMPLE_DECIMATE_OML = ((int)0x8989),
                TEXTURE_GEN_S = ((int)0x0C60),
                TEXTURE_GEN_R = ((int)0x0C62),
                TEXTURE_GEN_Q = ((int)0x0C63),
                UNSIGNED_INT_10_10_10_2 = ((int)0x8036),
                FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = ((int)0x8DA8),
                TEXTURE_GEN_T = ((int)0x0C61),
                COLOR_INDEX1_EXT = ((int)0x80E2),
                EMBOSS_LIGHT_NV = ((int)0x855D),
                PN_TRIANGLES_TESSELATION_LEVEL_ATI = ((int)0x87F4),
                SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = ((int)0x889C),
                ACTIVE_ATTRIBUTE_MAX_LENGTH = ((int)0x8B8A),
                DEPTH_COMPONENT32_SGIX = ((int)0x81A7),
                RGBA32I_EXT = ((int)0x8D82),
                CULL_VERTEX_EYE_POSITION_EXT = ((int)0x81AB),
                FLOAT_VEC2_ARB = ((int)0x8B50),
                RGB_FLOAT16_ATI = ((int)0x881B),
                V3F = ((int)0x2A21),
                FOG_COORDINATE_ARRAY_TYPE = ((int)0x8454),
                RED_BITS = ((int)0x0D52),
                POINT_SPRITE_R_MODE_NV = ((int)0x8863),
                NORMALIZED_RANGE_EXT = ((int)0x87E0),
                READ_WRITE_ARB = ((int)0x88BA),
                REGISTER_COMBINERS_NV = ((int)0x8522),
                RESTART_SUN = ((int)0x0001),
                COLOR_ATTACHMENT2_EXT = ((int)0x8CE2),
                STENCIL_INDEX16_EXT = ((int)0x8D49),
                R = ((int)0x2002),
                REG_15_ATI = ((int)0x8930),
                OUTPUT_TEXTURE_COORD14_EXT = ((int)0x87AB),
                PROGRAM_RESULT_COMPONENTS_NV = ((int)0x8907),
                TEXTURE_2D_STACK_BINDING_MESAX = ((int)0x875E),
                PROXY_TEXTURE_1D_ARRAY_EXT = ((int)0x8C19),
                VERTEX_BLEND_ARB = ((int)0x86A7),
                OUTPUT_TEXTURE_COORD29_EXT = ((int)0x87BA),
                LIST_BIT = ((int)0x00020000),
                VERTEX_ARRAY_LIST_STRIDE_IBM = ((int)103080),
                BLEND_DST_ALPHA = ((int)0x80CA),
                TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = ((int)0x889A),
                CON_28_ATI = ((int)0x895D),
                VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = ((int)0x886A),
                COMBINE_ARB = ((int)0x8570),
                FRONT_FACE = ((int)0x0B46),
                TEXTURE_COMPRESSION_HINT = ((int)0x84EF),
                INDEX_OFFSET = ((int)0x0D13),
                CON_17_ATI = ((int)0x8952),
                MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = ((int)0x87CB),
                DRAW_BUFFER7_ATI = ((int)0x882C),
                BGRA = ((int)0x80E1),
                TEXTURE_ALPHA_TYPE_ARB = ((int)0x8C13),
                INDEX_CLEAR_VALUE = ((int)0x0C20),
                TEXTURE_FILTER_CONTROL = ((int)0x8500),
                VERTEX_PROGRAM_POINT_SIZE = ((int)0x8642),
                VERTEX_SHADER_VARIANTS_EXT = ((int)0x87D0),
                LINEAR_DETAIL_ALPHA_SGIS = ((int)0x8098),
                FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = ((int)0x8CD6),
                OUTPUT_TEXTURE_COORD19_EXT = ((int)0x87B0),
                RENDER_MODE = ((int)0x0C40),
                FEEDBACK = ((int)0x1C01),
                OPERAND0_ALPHA_ARB = ((int)0x8598),
                HISTOGRAM_GREEN_SIZE = ((int)0x8029),
                PACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A0),
                PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = ((int)0x87F8),
                PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = ((int)0x8188),
                SRC1_RGB = ((int)VERSION_1_3.SOURCE1_RGB),
                SCALEBIAS_HINT_SGIX = ((int)0x8322),
                QUAD_TEXTURE_SELECT_SGIS = ((int)0x8125),
                MAX_TEXTURE_COORDS_NV = ((int)0x8871),
                TEXTURE_COORD_ARRAY_TYPE = ((int)0x8089),
                VERTEX_STREAM7_ATI = ((int)0x8773),
                PIXEL_MAP_I_TO_R_SIZE = ((int)0x0CB2),
                QUAD_STRIP = ((int)0x0008),
                NORMAL_ARRAY_POINTER = ((int)0x808F),
                MAX_COLOR_MATRIX_STACK_DEPTH = ((int)0x80B3),
                HISTOGRAM_SINK_EXT = ((int)0x802D),
                SHORT = ((int)0x1402),
                ATTENUATION_EXT = ((int)0x834D),
                TEXTURE_BUFFER_FORMAT_EXT = ((int)0x8C2E),
                SEPARABLE_2D_EXT = ((int)0x8012),
                SECONDARY_COLOR_ARRAY = ((int)0x845E),
                DISCARD_ATI = ((int)0x8763),
                GEOMETRY_OUTPUT_TYPE_EXT = ((int)0x8DDC),
                VERTEX_STREAM3_ATI = ((int)0x876F),
                COLOR_ATTACHMENT8_EXT = ((int)0x8CE8),
                FLOAT_VEC2 = ((int)0x8B50),
                MAP2_GRID_SEGMENTS = ((int)0x0DD3),
                CALLIGRAPHIC_FRAGMENT_SGIX = ((int)0x8183),
                TEXTURE_MAX_CLAMP_T_SGIX = ((int)0x836A),
                MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = ((int)0x8868),
                FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = ((int)0x840A),
                MAT_AMBIENT_BIT_PGI = ((int)0x00100000),
                FLOAT_RGBA32_NV = ((int)0x888B),
                IMAGE_ROTATE_ANGLE_HP = ((int)0x8159),
                MULTISAMPLE_COVERAGE_MODES_NV = ((int)0x8E12),
                CURRENT_TEXTURE_COORDS = ((int)0x0B03),
                MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = ((int)0x862E),
                DISTANCE_ATTENUATION_SGIS = ((int)0x8129),
                MULTISAMPLE_BIT_3DFX = ((int)0x20000000),
                GL_3D = ((int)0x0601),
                COMBINER_SCALE_NV = ((int)0x8548),
                SAMPLER_BUFFER_EXT = ((int)0x8DC2),
                AND_REVERSE = ((int)0x1502),
                ACTIVE_VARYINGS_NV = ((int)0x8C81),
                UNSIGNED_SHORT_8_8_REV_APPLE = ((int)0x85BB),
                TRIANGLES_ADJACENCY_EXT = ((int)0x000C),
                COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = ((int)0x8C72),
                DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = ((int)0x86F0),
                PIXEL_TRANSFORM_2D_MATRIX_EXT = ((int)0x8338),
                SAMPLE_ALPHA_TO_COVERAGE = ((int)0x809E),
                VERTEX_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA2),
                LIGHTING = ((int)0x0B50),
                RGB_INTEGER_EXT = ((int)0x8D98),
                VERTEX_ATTRIB_ARRAY1_NV = ((int)0x8651),
                FENCE_APPLE = ((int)0x8A0B),
                LUMINANCE32I_EXT = ((int)0x8D86),
                REG_0_ATI = ((int)0x8921),
                COMPRESSED_INTENSITY_ARB = ((int)0x84EC),
                ONE_MINUS_CONSTANT_ALPHA = ((int)0x8004),
                SAMPLE_MASK_INVERT_SGIS = ((int)0x80AB),
                TEXTURE_COORD_ARRAY_LIST_IBM = ((int)103074),
                VERTEX_DATA_HINT_PGI = ((int)0x1A22A),
                GEOMETRY_PROGRAM_NV = ((int)0x8C26),
                RGB4_S3TC = ((int)0x83A1),
                REG_25_ATI = ((int)0x893A),
                TEXTURE_TOO_LARGE_EXT = ((int)0x8065),
                QUERY_COUNTER_BITS = ((int)0x8864),
                COLOR_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F7),
                INVALID_OPERATION = ((int)0x0502),
                MAX_COLOR_MATRIX_STACK_DEPTH_SGI = ((int)0x80B3),
                TEXTURE27_ARB = ((int)0x84DB),
                UNSIGNED_INT_VEC4_EXT = ((int)0x8DC8),
                PROGRAM_ATTRIBS_ARB = ((int)0x88AC),
                STREAM_COPY = ((int)0x88E2),
                RGB = ((int)0x1907),
                INTENSITY16UI_EXT = ((int)0x8D79),
                GL_1PASS_SGIS = ((int)0x80A1),
                RENDER = ((int)0x1C00),
                MAP1_VERTEX_ATTRIB10_4_NV = ((int)0x866A),
                CLIENT_ACTIVE_TEXTURE = ((int)0x84E1),
                MAP_STENCIL = ((int)0x0D11),
                TEXTURE_CLIPMAP_DEPTH_SGIX = ((int)0x8176),
                SOURCE0_ALPHA_EXT = ((int)0x8588),
                RGBA_FLOAT16_ATI = ((int)0x881A),
                POST_COLOR_MATRIX_GREEN_BIAS = ((int)0x80B9),
                DEPTH_COMPONENT32_ARB = ((int)0x81A7),
                CULL_FRAGMENT_NV = ((int)0x86E7),
                NORMAL_MAP_EXT = ((int)0x8511),
                MAP1_INDEX = ((int)0x0D91),
                DUAL_INTENSITY16_SGIS = ((int)0x811B),
                TEXTURE_CUBE_MAP_POSITIVE_X_EXT = ((int)0x8515),
                R1UI_C3F_V3F_SUN = ((int)0x85C6),
                TEXTURE_4DSIZE_SGIS = ((int)0x8136),
                UNSIGNED_BYTE_2_3_3_REV_EXT = ((int)0x8362),
                TEXTURE26_ARB = ((int)0x84DA),
                MODELVIEW1_ARB = ((int)0x850A),
                EDGE_FLAG_ARRAY_STRIDE = ((int)0x808C),
                Q = ((int)0x2003),
                LUMINANCE16_ICC_SGIX = ((int)0x8469),
                S = ((int)0x2000),
                T = ((int)0x2001),
                MAX_VARYING_FLOATS = ((int)0x8B4B),
                COLOR_TABLE_ALPHA_SIZE_SGI = ((int)0x80DD),
                BLEND_SRC_ALPHA_EXT = ((int)0x80CB),
                CURRENT_MATRIX_STACK_DEPTH_ARB = ((int)0x8640),
                NEAREST_CLIPMAP_LINEAR_SGIX = ((int)0x844E),
                DUAL_ALPHA16_SGIS = ((int)0x8113),
                SHADOW_AMBIENT_SGIX = ((int)0x80BF),
                FLOAT_RGBA16_NV = ((int)0x888A),
                POST_COLOR_MATRIX_GREEN_BIAS_SGI = ((int)0x80B9),
                UNSIGNED_SHORT_5_5_5_1_EXT = ((int)0x8034),
                TRANSPOSE_MODELVIEW_MATRIX_ARB = ((int)0x84E3),
                TEXTURE_COORD_ARRAY_BUFFER_BINDING = ((int)0x889A),
                POLYGON_SMOOTH_HINT = ((int)0x0C53),
                TEXTURE25_ARB = ((int)0x84D9),
                MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = ((int)0x880F),
                SLUMINANCE8 = ((int)0x8C47),
                MODELVIEW29_ARB = ((int)0x873D),
                ZERO = ((int)0),
                REG_7_ATI = ((int)0x8928),
                COMP_BIT_ATI = ((int)0x00000002),
                PIXEL_UNPACK_BUFFER_BINDING_EXT = ((int)0x88EF),
                SAMPLER_1D_SHADOW_ARB = ((int)0x8B61),
                COLOR_ATTACHMENT9_EXT = ((int)0x8CE9),
                MAP2_TANGENT_EXT = ((int)0x8445),
                NONE = ((int)0),
                UNPACK_LSB_FIRST = ((int)0x0CF1),
                COMPRESSED_SRGB_ALPHA = ((int)0x8C49),
                SAMPLER_3D_ARB = ((int)0x8B5F),
                MATRIX_EXT = ((int)0x87C0),
                DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = ((int)0x86F1),
                PROGRAM_FORMAT_ASCII_ARB = ((int)0x8875),
                UNSIGNED_SHORT = ((int)0x1403),
                COLOR_MATRIX_STACK_DEPTH_SGI = ((int)0x80B2),
                TEXTURE24_ARB = ((int)0x84D8),
                CON_3_ATI = ((int)0x8944),
                FUNC_ADD = ((int)0x8006),
                POLYGON_OFFSET_UNITS = ((int)0x2A00),
                MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87CC),
                GL_2_BYTES = ((int)0x1407),
                MINMAX_SINK = ((int)0x8030),
                NORMAL_ARRAY_BUFFER_BINDING_ARB = ((int)0x8897),
                WIDE_LINE_HINT_PGI = ((int)0x1A222),
                ELEMENT_ARRAY_APPLE = ((int)0x8768),
                REG_10_ATI = ((int)0x892B),
                TEXTURE_DEPTH_SIZE = ((int)0x884A),
                DRAW_BUFFER4_ATI = ((int)0x8829),
                BIAS_BIT_ATI = ((int)0x00000008),
                VERTEX_PROGRAM_BINDING_NV = ((int)0x864A),
                MODELVIEW8_ARB = ((int)0x8728),
                CON_31_ATI = ((int)0x8960),
                SAMPLER_2D_ARB = ((int)0x8B5E),
                STENCIL_BACK_REF = ((int)0x8CA3),
                MINMAX_FORMAT_EXT = ((int)0x802F),
                DEPTH_COMPONENT24 = ((int)0x81A6),
                COLOR_TABLE_SCALE_SGI = ((int)0x80D6),
                POST_CONVOLUTION_RED_SCALE_EXT = ((int)0x801C),
                MAP1_VERTEX_ATTRIB12_4_NV = ((int)0x866C),
                DUAL_LUMINANCE_ALPHA8_SGIS = ((int)0x811D),
                MAX_CLIP_PLANES = ((int)0x0D32),
                TEXTURE23_ARB = ((int)0x84D7),
                RESAMPLE_AVERAGE_OML = ((int)0x8988),
                INTENSITY_ICC_SGIX = ((int)0x8464),
                VENDOR = ((int)0x1F00),
                TIME_ELAPSED_EXT = ((int)0x88BF),
                NAND = ((int)0x150E),
                UNSIGNED_IDENTITY_NV = ((int)0x8536),
                ACCUM = ((int)0x0100),
                MAX_3D_TEXTURE_SIZE_EXT = ((int)0x8073),
                DEPTH_COMPONENT32 = ((int)0x81A7),
                DOT_PRODUCT_REFLECT_CUBE_MAP_NV = ((int)0x86F2),
                ALWAYS_FAST_HINT_PGI = ((int)0x1A20C),
                GEOMETRY_DEFORMATION_SGIX = ((int)0x8194),
                OP_MULTIPLY_MATRIX_EXT = ((int)0x8798),
                TEXTURE8 = ((int)0x84C8),
                UNSIGNED_INT_VEC3_EXT = ((int)0x8DC7),
                STORAGE_SHARED_APPLE = ((int)0x85BF),
                SLUMINANCE_ALPHA = ((int)0x8C44),
                CON_11_ATI = ((int)0x894C),
                PHONG_WIN = ((int)0x80EA),
                UNSIGNED_INVERT_NV = ((int)0x8537),
                COLOR_TABLE_SCALE = ((int)0x80D6),
                KEEP = ((int)0x1E00),
                ADD_SIGNED = ((int)0x8574),
                MULTISAMPLE_ARB = ((int)0x809D),
                COMBINER_AB_OUTPUT_NV = ((int)0x854A),
                REG_3_ATI = ((int)0x8924),
                WEIGHT_ARRAY_BUFFER_BINDING_ARB = ((int)0x889E),
                FOG_FACTOR_TO_ALPHA_SGIX = ((int)0x836F),
                INVALID_ENUM = ((int)0x0500),
                IMAGE_MIN_FILTER_HP = ((int)0x815D),
                INTERLEAVED_ATTRIBS_NV = ((int)0x8C8C),
                TEXTURE21_ARB = ((int)0x84D5),
                STATIC_COPY_ARB = ((int)0x88E6),
                SMOOTH_LINE_WIDTH_RANGE = ((int)0x0B22),
                TEXTURE9 = ((int)0x84C9),
                FENCE_STATUS_NV = ((int)0x84F3),
                RENDERBUFFER_STENCIL_SIZE_EXT = ((int)0x8D55),
                OBJECT_DISTANCE_TO_LINE_SGIS = ((int)0x81F3),
                COMBINER_COMPONENT_USAGE_NV = ((int)0x8544),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = ((int)0x8CD4),
                VERTEX_ARRAY_STORAGE_HINT_APPLE = ((int)0x851F),
                CULL_VERTEX_OBJECT_POSITION_EXT = ((int)0x81AC),
                MAX_PROGRAM_ADDRESS_REGISTERS_ARB = ((int)0x88B1),
                MAP2_TEXTURE_COORD_4 = ((int)0x0DB6),
                DRAW_BUFFER1_ARB = ((int)0x8826),
                FEEDBACK_BUFFER_TYPE = ((int)0x0DF2),
                INDEX_MATERIAL_FACE_EXT = ((int)0x81BA),
                COMBINE = ((int)0x8570),
                READ_WRITE = ((int)0x88BA),
                DEPTH_COMPONENT16 = ((int)0x81A5),
                TEXTURE20_ARB = ((int)0x84D4),
                COLOR_ATTACHMENT14_EXT = ((int)0x8CEE),
                FOG_FUNC_SGIS = ((int)0x812A),
                MAP1_TEXTURE_COORD_4 = ((int)0x0D96),
                UNSIGNED_INT_5_9_9_9_REV_EXT = ((int)0x8C3E),
                LUMINANCE12_ALPHA4_EXT = ((int)0x8046),
                GL_4PASS_1_SGIS = ((int)0x80A5),
                PACK_ALIGNMENT = ((int)0x0D05),
                MODELVIEW21_ARB = ((int)0x8735),
                LEFT = ((int)0x0406),
                SOURCE2_ALPHA_ARB = ((int)0x858A),
                MAP2_VERTEX_ATTRIB10_4_NV = ((int)0x867A),
                PROXY_TEXTURE_RECTANGLE_NV = ((int)0x84F7),
                TEXTURE_MAX_LOD_SGIS = ((int)0x813B),
                PROJECTION_STACK_DEPTH = ((int)0x0BA4),
                RENDERBUFFER_HEIGHT_EXT = ((int)0x8D43),
                RENDERBUFFER_GREEN_SIZE_EXT = ((int)0x8D51),
                MAX_TEXTURE_IMAGE_UNITS = ((int)0x8872),
                MATRIX24_ARB = ((int)0x88D8),
                CONVOLUTION_BORDER_COLOR = ((int)0x8154),
                TEXTURE_BINDING_2D_ARRAY_EXT = ((int)0x8C1D),
                RENDERBUFFER_SAMPLES_EXT = ((int)0x8CAB),
                COMBINER6_NV = ((int)0x8556),
                LINEAR_SHARPEN_SGIS = ((int)0x80AD),
                LIGHT4 = ((int)0x4004),
                COMBINER5_NV = ((int)0x8555),
                COMBINER2_NV = ((int)0x8552),
                COMBINER3_NV = ((int)0x8553),
                EDGE_FLAG_ARRAY_STRIDE_EXT = ((int)0x808C),
                CON_2_ATI = ((int)0x8943),
                BLEND_EQUATION_EXT = ((int)0x8009),
                VERTEX_PROGRAM_POINT_SIZE_NV = ((int)0x8642),
                STATIC_DRAW = ((int)0x88E4),
                NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = ((int)0x8973),
                MAX_VERTEX_UNITS_ARB = ((int)0x86A4),
                GL_8X_BIT_ATI = ((int)0x00000004),
                MAP1_VERTEX_ATTRIB5_4_NV = ((int)0x8665),
                CON_21_ATI = ((int)0x8956),
                TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = ((int)0x851A),
                MATRIX5_ARB = ((int)0x88C5),
                STATIC_DRAW_ARB = ((int)0x88E4),
                PIXEL_COUNT_NV = ((int)0x8866),
                TEXTURE_COLOR_TABLE_SGI = ((int)0x80BC),
                MATRIX4_ARB = ((int)0x88C4),
                MAP2_VERTEX_ATTRIB1_4_NV = ((int)0x8671),
                INDEX_ARRAY_POINTER_EXT = ((int)0x8091),
                MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87C8),
                VERTEX_STREAM1_ATI = ((int)0x876D),
                FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = ((int)0x8DA9),
                CULL_MODES_NV = ((int)0x86E0),
                COMBINER_MAPPING_NV = ((int)0x8543),
                MAP1_TEXTURE_COORD_2 = ((int)0x0D94),
                TEXTURE_SHARED_SIZE_EXT = ((int)0x8C3F),
                DEPTH_RANGE = ((int)0x0B70),
                EXP2 = ((int)0x0801),
                COLOR_TABLE_FORMAT = ((int)0x80D8),
                DEPTH_STENCIL_EXT = ((int)0x84F9),
                WRITE_PIXEL_DATA_RANGE_NV = ((int)0x8878),
                PIXEL_TILE_CACHE_INCREMENT_SGIX = ((int)0x813F),
                UNSIGNED_SHORT_5_6_5_EXT = ((int)0x8363),
                PROJECTION_MATRIX = ((int)0x0BA7),
                FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = ((int)0x8409),
                MINMAX_FORMAT = ((int)0x802F),
                MAP_COLOR = ((int)0x0D10),
                VERTEX_STREAM6_ATI = ((int)0x8772),
                CLIP_PLANE1 = ((int)0x3001),
                SAMPLER_1D_ARB = ((int)0x8B5D),
                OPERAND2_ALPHA_EXT = ((int)0x859A),
                POINT_SIZE_MAX = ((int)0x8127),
                SAMPLE_ALPHA_TO_MASK_EXT = ((int)0x809E),
                MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = ((int)0x8C80),
                STENCIL_BACK_WRITEMASK = ((int)0x8CA5),
                SLUMINANCE = ((int)0x8C46),
                DUAL_ALPHA4_SGIS = ((int)0x8110),
                MAP1_TEXTURE_COORD_3 = ((int)0x0D95),
                POLYGON_MODE = ((int)0x0B40),
                PRESERVE_ATI = ((int)0x8762),
                MAX_RECTANGLE_TEXTURE_SIZE_ARB = ((int)0x84F8),
                INTERLACE_READ_OML = ((int)0x8981),
                SAMPLE_MASK_VALUE_EXT = ((int)0x80AA),
                LUMINANCE8 = ((int)0x8040),
                UNPACK_RESAMPLE_OML = ((int)0x8985),
                SUBTRACT = ((int)0x84E7),
                LOCAL_CONSTANT_DATATYPE_EXT = ((int)0x87ED),
                SECONDARY_COLOR_ARRAY_STRIDE_EXT = ((int)0x845C),
                CONSTANT_COLOR_EXT = ((int)0x8001),
                UNSIGNED_INT_8_8_S8_S8_REV_NV = ((int)0x86DB),
                TEXTURE_SHADER_NV = ((int)0x86DE),
                SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = ((int)103087),
                TYPE_RGBA_FLOAT_ATI = ((int)0x8820),
                FLOAT_MAT2x3 = ((int)0x8B65),
                TEXTURE_COORD_ARRAY_COUNT_EXT = ((int)0x808B),
                VERTEX_STREAM2_ATI = ((int)0x876E),
                PREVIOUS = ((int)0x8578),
                FRAGMENT_COLOR_EXT = ((int)0x834C),
                OFFSET_TEXTURE_BIAS_NV = ((int)0x86E3),
                MATRIX6_NV = ((int)0x8636),
                PRIMITIVE_RESTART_NV = ((int)0x8558),
                INTENSITY8_EXT = ((int)0x804B),
                DOT3_RGB_ARB = ((int)0x86AE),
                PROGRAM_POINT_SIZE_EXT = ((int)0x8642),
                RGB4_EXT = ((int)0x804F),
                LIGHTING_BIT = ((int)0x00000040),
                SAMPLE_COVERAGE = ((int)0x80A0),
                ALPHA = ((int)0x1906),
                TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = ((int)0x8C88),
                N3F_V3F = ((int)0x2A25),
                MAX_CONVOLUTION_HEIGHT = ((int)0x801B),
                RGB_SCALE = ((int)0x8573),
                FRONT_AND_BACK = ((int)0x0408),
                LUMINANCE4_ALPHA4_EXT = ((int)0x8043),
                PROXY_HISTOGRAM_EXT = ((int)0x8025),
                RESCALE_NORMAL_EXT = ((int)0x803A),
                FOG_BIT = ((int)0x00000080),
                CON_30_ATI = ((int)0x895F),
                QUERY_RESULT_AVAILABLE = ((int)0x8867),
                FRAGMENT_LIGHT6_SGIX = ((int)0x8412),
                MAP1_TEXTURE_COORD_1 = ((int)0x0D93),
                FOG_OFFSET_VALUE_SGIX = ((int)0x8199),
                SAMPLE_MASK_EXT = ((int)0x80A0),
                MODELVIEW6_ARB = ((int)0x8726),
                LOGIC_OP_MODE = ((int)0x0BF0),
                MAP1_VERTEX_ATTRIB7_4_NV = ((int)0x8667),
                ALWAYS = ((int)0x0207),
                GLOBAL_ALPHA_SUN = ((int)0x81D9),
                PROXY_COLOR_TABLE_SGI = ((int)0x80D3),
                CURRENT_FOG_COORD = ((int)VERSION_1_4.CURRENT_FOG_COORDINATE),
                WEIGHT_SUM_UNITY_ARB = ((int)0x86A6),
                FULL_RANGE_EXT = ((int)0x87E1),
                PRIMARY_COLOR_ARB = ((int)0x8577),
                MAX_VERTEX_ATTRIBS = ((int)0x8869),
                DOT_PRODUCT_PASS_THROUGH_NV = ((int)0x885B),
                RGB10_A2 = ((int)0x8059),
                OPERAND0_RGB_ARB = ((int)0x8590),
                ACTIVE_STENCIL_FACE_EXT = ((int)0x8911),
                UNSIGNED_INT_2_10_10_10_REV = ((int)0x8368),
                LIGHT6 = ((int)0x4006),
                MAT_COLOR_INDEXES_BIT_PGI = ((int)0x01000000),
                DEPTH_PASS_INSTRUMENT_SGIX = ((int)0x8310),
                TEXTURE6_ARB = ((int)0x84C6),
                CON_9_ATI = ((int)0x894A),
                TEXTURE_MIN_LOD_SGIS = ((int)0x813A),
                WEIGHT_ARRAY_SIZE_ARB = ((int)0x86AB),
                PACK_ROW_LENGTH = ((int)0x0D02),
                CND0_ATI = ((int)0x896B),
                TEXTURE_1D_STACK_BINDING_MESAX = ((int)0x875D),
                TEXTURE_1D_STACK_MESAX = ((int)0x8759),
                VERTEX_STREAM5_ATI = ((int)0x8771),
                STENCIL_TEST_TWO_SIDE_EXT = ((int)0x8910),
                FLOAT_RG32_NV = ((int)0x8887),
                INTERPOLATE_EXT = ((int)0x8575),
                CON_10_ATI = ((int)0x894B),
                SPOT_EXPONENT = ((int)0x1205),
                POST_CONVOLUTION_GREEN_SCALE_EXT = ((int)0x801D),
                COLOR_INDEX = ((int)0x1900),
                SLUMINANCE8_EXT = ((int)0x8C47),
                FLOAT_MAT4_ARB = ((int)0x8B5C),
                PIXEL_MAP_I_TO_G = ((int)0x0C73),
                YCBCR_MESA = ((int)0x8757),
                RENDERBUFFER_INTERNAL_FORMAT_EXT = ((int)0x8D44),
                RGB8UI_EXT = ((int)0x8D7D),
                PIXEL_MAP_G_TO_G_SIZE = ((int)0x0CB7),
                SECONDARY_INTERPOLATOR_ATI = ((int)0x896D),
                COLOR3_BIT_PGI = ((int)0x00010000),
                MAX_FOG_FUNC_POINTS_SGIS = ((int)0x812C),
                SINGLE_COLOR = ((int)0x81F9),
                QUARTER_BIT_ATI = ((int)0x00000010),
                TRUE = ((int)1),
                ACCUM_CLEAR_VALUE = ((int)0x0B80),
                HISTOGRAM_SINK = ((int)0x802D),
                PIXEL_MIN_FILTER_EXT = ((int)0x8332),
                MVP_MATRIX_EXT = ((int)0x87E3),
                NO_ERROR = ((int)0),
                PACK_SKIP_IMAGES = ((int)0x806B),
                CURRENT_QUERY_ARB = ((int)0x8865),
                OPERAND1_RGB_EXT = ((int)0x8591),
                IUI_N3F_V2F_EXT = ((int)0x81AF),
                TEXTURE_COORD_ARRAY_SIZE = ((int)0x8088),
                POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D2),
                COLOR_ATTACHMENT12_EXT = ((int)0x8CEC),
                FOG_COORD_ARRAY_BUFFER_BINDING = ((int)VERSION_1_5.FOG_COORDINATE_ARRAY_BUFFER_BINDING),
                DOUBLEBUFFER = ((int)0x0C32),
                SPRITE_TRANSLATION_SGIX = ((int)0x814B),
                FOG_DISTANCE_MODE_NV = ((int)0x855A),
                INDEX_MATERIAL_EXT = ((int)0x81B8),
                RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = ((int)0x86D9),
                INT_VEC2_ARB = ((int)0x8B53),
                MODELVIEW5_ARB = ((int)0x8725),
                INVERSE_NV = ((int)0x862B),
                CLIP_PLANE0 = ((int)0x3000),
                LUMINANCE_ALPHA_INTEGER_EXT = ((int)0x8D9D),
                TEXTURE_STENCIL_SIZE_EXT = ((int)0x88F1),
                POINT_DISTANCE_ATTENUATION_ARB = ((int)0x8129),
                ADD_SIGNED_ARB = ((int)0x8574),
                ALPHA_INTEGER_EXT = ((int)0x8D97),
                PIXEL_TEX_GEN_Q_ROUND_SGIX = ((int)0x8185),
                EXPAND_NORMAL_NV = ((int)0x8538),
                PIXEL_MAP_I_TO_A = ((int)0x0C75),
                SIGNED_INTENSITY_NV = ((int)0x8707),
                FLOAT_MAT2x4 = ((int)0x8B66),
                STENCIL_TAG_BITS_EXT = ((int)0x88F2),
                TEXTURE_MIN_FILTER = ((int)0x2801),
                TEXTURE_GREEN_TYPE_ARB = ((int)0x8C11),
                ARRAY_BUFFER = ((int)0x8892),
                C3F_V3F = ((int)0x2A24),
                VARIABLE_G_NV = ((int)0x8529),
                VERTEX_ATTRIB_ARRAY_TYPE_ARB = ((int)0x8625),
                PROGRAM_TEMPORARIES_ARB = ((int)0x88A4),
                FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = ((int)0x889D),
                MAX_PROGRAM_OUTPUT_VERTICES_NV = ((int)0x8C27),
                COLOR_TABLE_RED_SIZE_SGI = ((int)0x80DA),
                MAX_COMBINED_TEXTURE_IMAGE_UNITS = ((int)0x8B4D),
                EVAL_TRIANGULAR_2D_NV = ((int)0x86C1),
                STRICT_LIGHTING_HINT_PGI = ((int)0x1A217),
                INTENSITY12_EXT = ((int)0x804C),
                CON_20_ATI = ((int)0x8955),
                MAX_ASYNC_DRAW_PIXELS_SGIX = ((int)0x8360),
                BUMP_ROT_MATRIX_ATI = ((int)0x8775),
                POST_COLOR_MATRIX_ALPHA_BIAS = ((int)0x80BB),
                DEPTH_WRITEMASK = ((int)0x0B72),
                COEFF = ((int)0x0A00),
                TEXTURE24 = ((int)0x84D8),
                RED = ((int)0x1903),
                MAX_PALETTE_MATRICES_ARB = ((int)0x8842),
                TEXTURE_RED_SIZE_EXT = ((int)0x805C),
                TEXTURE20 = ((int)0x84D4),
                UNSIGNED_INT_8_8_8_8 = ((int)0x8035),
                POST_COLOR_MATRIX_ALPHA_SCALE_SGI = ((int)0x80B7),
                Z_EXT = ((int)0x87D7),
                BLEND_EQUATION_ALPHA = ((int)0x883D),
                SECONDARY_COLOR_ARRAY_EXT = ((int)0x845E),
                TEXTURE28 = ((int)0x84DC),
                DECR_WRAP = ((int)0x8508),
                ZOOM_X = ((int)0x0D16),
                FLOAT_RG_NV = ((int)0x8881),
                STENCIL_CLEAR_VALUE = ((int)0x0B91),
                DRAW_BUFFER14 = ((int)0x8833),
                BINORMAL_ARRAY_POINTER_EXT = ((int)0x8443),
                IMAGE_CUBIC_WEIGHT_HP = ((int)0x815E),
                NATIVE_GRAPHICS_END_HINT_PGI = ((int)0x1A204),
                OPERAND2_RGB_ARB = ((int)0x8592),
                COMBINE_RGB_ARB = ((int)0x8571),
                CURRENT_COLOR = ((int)0x0B00),
                UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = ((int)0x8DD7),
                SRC_COLOR = ((int)0x0300),
                LIGHT0 = ((int)0x4000),
                TEXTURE31 = ((int)0x84DF),
                STENCIL_ATTACHMENT_EXT = ((int)0x8D20),
                LUMINANCE12 = ((int)0x8041),
                MAX_VERTEX_SHADER_VARIANTS_EXT = ((int)0x87C6),
                MAP2_VERTEX_4 = ((int)0x0DB8),
                SIGNED_HILO8_NV = ((int)0x885F),
                DRAW_BUFFER5_ATI = ((int)0x882A),
                NORMAL_ARRAY_STRIDE = ((int)0x807F),
                OBJECT_ATTACHED_OBJECTS_ARB = ((int)0x8B85),
                MAP2_VERTEX_3 = ((int)0x0DB7),
                PIXEL_MAP_B_TO_B_SIZE = ((int)0x0CB8),
                MATRIX21_ARB = ((int)0x88D5),
                PROXY_TEXTURE_3D = ((int)0x8070),
                TEXTURE_GREEN_SIZE_EXT = ((int)0x805D),
                MAX_PROGRAM_LOCAL_PARAMETERS_ARB = ((int)0x88B4),
                SPRITE_SGIX = ((int)0x8148),
                VERTEX_ATTRIB_ARRAY2_NV = ((int)0x8652),
                PIXEL_MAP_I_TO_B = ((int)0x0C74),
                INT_SAMPLER_BUFFER_EXT = ((int)0x8DD0),
                PACK_IMAGE_DEPTH_SGIS = ((int)0x8131),
                ACTIVE_TEXTURE_ARB = ((int)0x84E0),
                VERTEX_ARRAY_BINDING_APPLE = ((int)0x85B5),
                NUM_COMPRESSED_TEXTURE_FORMATS = ((int)0x86A2),
                MAX_CLIENT_ATTRIB_STACK_DEPTH = ((int)0x0D3B),
                ACTIVE_VARYING_MAX_LENGTH_NV = ((int)0x8C82),
                PROXY_TEXTURE_2D_ARRAY_EXT = ((int)0x8C1B),
                MATRIX8_ARB = ((int)0x88C8),
                FRAMEBUFFER_SRGB_EXT = ((int)0x8DB9),
                MATRIX18_ARB = ((int)0x88D2),
                FRAGMENT_LIGHT4_SGIX = ((int)0x8410),
                ARRAY_BUFFER_BINDING_ARB = ((int)0x8894),
                ELEMENT_ARRAY_ATI = ((int)0x8768),
                FOG_SPECULAR_TEXTURE_WIN = ((int)0x80EC),
                REDUCE_EXT = ((int)0x8016),
                GL_3D_COLOR_TEXTURE = ((int)0x0603),
                MAX_VERTEX_UNIFORM_COMPONENTS = ((int)0x8B4A),
                LO_SCALE_NV = ((int)0x870F),
                FRAMEBUFFER_BINDING_EXT = ((int)0x8CA6),
                DEFORMATIONS_MASK_SGIX = ((int)0x8196),
                TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = ((int)0x8517),
                HISTOGRAM_RED_SIZE_EXT = ((int)0x8028),
                MAX_CONVOLUTION_WIDTH = ((int)0x801A),
                TEXTURE_BASE_LEVEL_SGIS = ((int)0x813C),
                POLYGON_OFFSET_FILL = ((int)0x8037),
                LUMINANCE_ALPHA16I_EXT = ((int)0x8D8D),
                FRONT = ((int)0x0404),
                LINEAR_SHARPEN_ALPHA_SGIS = ((int)0x80AE),
                FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = ((int)0x8DA7),
                MATRIX11_ARB = ((int)0x88CB),
                MAX_MAP_TESSELLATION_NV = ((int)0x86D6),
                DRAW_BUFFER11_ATI = ((int)0x8830),
                CCW = ((int)0x0901),
                INVERSE_TRANSPOSE_NV = ((int)0x862D),
                BACK_NORMALS_HINT_PGI = ((int)0x1A223),
                FLOAT_RGBA_MODE_NV = ((int)0x888E),
                COLOR_ARRAY_POINTER_EXT = ((int)0x8090),
                FLOAT_32_UNSIGNED_INT_24_8_REV_NV = ((int)0x8DAD),
                T2F_IUI_V2F_EXT = ((int)0x81B1),
                MAP1_VERTEX_ATTRIB13_4_NV = ((int)0x866D),
                MATRIX13_ARB = ((int)0x88CD),
                VERTEX_ARRAY_BUFFER_BINDING = ((int)0x8896),
                SAMPLE_ALPHA_TO_MASK_SGIS = ((int)0x809E),
                COMBINE_RGB_EXT = ((int)0x8571),
                HILO8_NV = ((int)0x885E),
                PIXEL_TILE_GRID_HEIGHT_SGIX = ((int)0x8143),
                PIXEL_TILE_CACHE_SIZE_SGIX = ((int)0x8145),
                SCALE_BY_TWO_NV = ((int)0x853E),
                PIXEL_TRANSFORM_2D_EXT = ((int)0x8330),
                COMPILE_STATUS = ((int)0x8B81),
                CONSTANT_ARB = ((int)0x8576),
                LIST_BASE = ((int)0x0B32),
                EMBOSS_CONSTANT_NV = ((int)0x855E),
                SECONDARY_COLOR_ARRAY_POINTER_EXT = ((int)0x845D),
                DYNAMIC_DRAW_ARB = ((int)0x88E8),
                CURRENT_BIT = ((int)0x00000001),
                TEXTURE_MIN_LOD = ((int)0x813A),
                MAP1_VERTEX_ATTRIB6_4_NV = ((int)0x8666),
                VERSION = ((int)0x1F02),
                FILL = ((int)0x1B02),
                REG_17_ATI = ((int)0x8932),
                MAP2_COLOR_4 = ((int)0x0DB0),
                SWIZZLE_STQ_ATI = ((int)0x8977),
                FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = ((int)0x8CDB),
                DRAW_BUFFER13_ATI = ((int)0x8832),
                TEXTURE_LUMINANCE_TYPE_ARB = ((int)0x8C14),
                COMPRESSED_SRGB_ALPHA_EXT = ((int)0x8C49),
                UNSIGNED_INT_SAMPLER_3D_EXT = ((int)0x8DD3),
                BUFFER_FLUSHING_UNMAP_APPLE = ((int)0x8A13),
                STENCIL_PASS_DEPTH_FAIL = ((int)0x0B95),
                FOG_COORD_ARRAY = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY),
                AUTO_NORMAL = ((int)0x0D80),
                TEXTURE_ENV_BIAS_SGIX = ((int)0x80BE),
                SAMPLER_1D_SHADOW = ((int)0x8B61),
                PIXEL_MAP_R_TO_R_SIZE = ((int)0x0CB6),
                GL_2D = ((int)0x0600),
                LUMINANCE_ALPHA_FLOAT32_ATI = ((int)0x8819),
                SIGNED_LUMINANCE_NV = ((int)0x8701),
                COLOR_LOGIC_OP = ((int)0x0BF2),
                SAMPLE_PATTERN_SGIS = ((int)0x80AC),
                LINE_STRIP = ((int)0x0003),
                READ_PIXEL_DATA_RANGE_POINTER_NV = ((int)0x887D),
                HISTOGRAM_BLUE_SIZE = ((int)0x802A),
                MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8B4C),
                STENCIL_INDEX8_EXT = ((int)0x8D48),
                GL_422_REV_AVERAGE_EXT = ((int)0x80CF),
                BLEND_SRC = ((int)0x0BE1),
                SECONDARY_COLOR_ARRAY_SIZE_EXT = ((int)0x845A),
                MODELVIEW0_MATRIX_EXT = ((int)All.MODELVIEW_MATRIX),
                MODELVIEW4_ARB = ((int)0x8724),
                DECR_WRAP_EXT = ((int)0x8508),
                FRAMEBUFFER_EXT = ((int)0x8D40),
                NUM_FRAGMENT_REGISTERS_ATI = ((int)0x896E),
                POINT_FADE_THRESHOLD_SIZE = ((int)0x8128),
                VARIABLE_A_NV = ((int)0x8523),
                DECR = ((int)0x1E03),
                CURRENT_RASTER_COLOR = ((int)0x0B04),
                TEXTURE_RECTANGLE_NV = ((int)0x84F5),
                MIRRORED_REPEAT = ((int)0x8370),
                OUTPUT_TEXTURE_COORD20_EXT = ((int)0x87B1),
                SWIZZLE_STR_DR_ATI = ((int)0x8978),
                TEXTURE_MATRIX = ((int)0x0BA8),
                COMPRESSED_SLUMINANCE_ALPHA = ((int)0x8C4B),
                ATTRIB_ARRAY_STRIDE_NV = ((int)0x8624),
                TEXTURE_MAX_CLAMP_R_SGIX = ((int)0x836B),
                RIGHT = ((int)0x0407),
                COLOR_INDEX4_EXT = ((int)0x80E4),
                STENCIL_BITS = ((int)0x0D57),
                HILO16_NV = ((int)0x86F8),
                POINT_BIT = ((int)0x00000002),
                INTERLACE_READ_INGR = ((int)0x8568),
                MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = ((int)0x880B),
                COLOR_TABLE_BLUE_SIZE_SGI = ((int)0x80DC),
                LUMINANCE8I_EXT = ((int)0x8D92),
                FRAGMENT_DEPTH = ((int)0x8452),
                PROXY_TEXTURE_2D = ((int)0x8064),
                PACK_SWAP_BYTES = ((int)0x0D00),
                ACCUM_RED_BITS = ((int)0x0D58),
                RGBA4_S3TC = ((int)0x83A3),
                CON_24_ATI = ((int)0x8959),
                POST_COLOR_MATRIX_BLUE_BIAS = ((int)0x80BA),
                OUTPUT_TEXTURE_COORD10_EXT = ((int)0x87A7),
                SIGNED_INTENSITY8_NV = ((int)0x8708),
                EDGE_FLAG_ARRAY_POINTER = ((int)0x8093),
                FOG_COORDINATE_ARRAY_TYPE_EXT = ((int)0x8454),
                TEXTURE_COMPARE_FAIL_VALUE_ARB = ((int)0x80BF),
                DEPTH_COMPONENT = ((int)0x1902),
                READ_ONLY = ((int)0x88B8),
                MAX_VERTEX_HINT_PGI = ((int)0x1A22D),
                YCRCB_SGIX = ((int)0x8318),
                TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = ((int)0x83F8),
                OUTPUT_TEXTURE_COORD28_EXT = ((int)0x87B9),
                PROXY_TEXTURE_CUBE_MAP_ARB = ((int)0x851B),
                SRGB_EXT = ((int)0x8C40),
                TEXTURE17_ARB = ((int)0x84D1),
                REG_29_ATI = ((int)0x893E),
                RGB16F_ARB = ((int)0x881B),
                SIGNED_LUMINANCE_ALPHA_NV = ((int)0x8703),
                POINT_TOKEN = ((int)0x0701),
                MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = ((int)0x88B3),
                MAX_TEXTURE_COORDS = ((int)0x8871),
                FLOAT = ((int)0x1406),
                MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = ((int)0x8C28),
                PIXEL_PACK_BUFFER_EXT = ((int)0x88EB),
                GEOMETRY_SHADER_EXT = ((int)0x8DD9),
                MAP1_VERTEX_ATTRIB8_4_NV = ((int)0x8668),
                EVAL_FRACTIONAL_TESSELLATION_NV = ((int)0x86C5),
                OP_CROSS_PRODUCT_EXT = ((int)0x8797),
                MAX_LIGHTS = ((int)0x0D31),
                SAMPLE_BUFFERS_EXT = ((int)0x80A8),
                REG_11_ATI = ((int)0x892C),
                DOT_PRODUCT_TEXTURE_1D_NV = ((int)0x885C),
                OUTPUT_TEXTURE_COORD18_EXT = ((int)0x87AF),
                MAX_RENDERBUFFER_SIZE_EXT = ((int)0x84E8),
                COLOR_MATRIX = ((int)0x80B1),
                FLOAT_MAT4x3 = ((int)0x8B6A),
                OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = ((int)0x8857),
                DIFFUSE = ((int)0x1201),
                POINT_SIZE = ((int)0x0B11),
                TEXTURE16_ARB = ((int)0x84D0),
                OFFSET_TEXTURE_2D_NV = ((int)0x86E8),
                PROGRAM_ERROR_STRING_NV = ((int)0x8874),
                COLOR_ATTACHMENT10_EXT = ((int)0x8CEA),
                TEXTURE_COORD_ARRAY_STRIDE = ((int)0x808A),
                EVAL_VERTEX_ATTRIB15_NV = ((int)0x86D5),
                FLAT = ((int)0x1D00),
                CLIENT_ACTIVE_TEXTURE_ARB = ((int)0x84E1),
                BUFFER_MAP_POINTER = ((int)0x88BD),
                OP_SET_LT_EXT = ((int)0x878D),
                SAMPLES_ARB = ((int)0x80A9),
                AVERAGE_EXT = ((int)0x8335),
                SMOOTH_POINT_SIZE_RANGE = ((int)0x0B12),
                CLAMP_VERTEX_COLOR_ARB = ((int)0x891A),
                HALF_BIAS_NEGATE_NV = ((int)0x853B),
                CON_23_ATI = ((int)0x8958),
                SAMPLER_CUBE_ARB = ((int)0x8B60),
                TEXTURE_NORMAL_EXT = ((int)0x85AF),
                FRAGMENT_LIGHTING_SGIX = ((int)0x8400),
                REFLECTION_MAP_NV = ((int)0x8512),
                TEXTURE15_ARB = ((int)0x84CF),
                MAP1_VERTEX_ATTRIB0_4_NV = ((int)0x8660),
                TEXTURE_GEQUAL_R_SGIX = ((int)0x819D),
                NEGATIVE_ONE_EXT = ((int)0x87DF),
                DST_COLOR = ((int)0x0306),
                ALPHA16I_EXT = ((int)0x8D8A),
                TEXTURE2_ARB = ((int)0x84C2),
                BACK_PRIMARY_COLOR_NV = ((int)0x8C77),
                MATRIX15_ARB = ((int)0x88CF),
                MODULATE_ADD_ATI = ((int)0x8744),
                PROGRAM_RESIDENT_NV = ((int)0x8647),
                VERTEX_SHADER_ARB = ((int)0x8B31),
                SOURCE1_ALPHA_ARB = ((int)0x8589),
                DEPTH_CLEAR_VALUE = ((int)0x0B73),
                COMBINER_CD_DOT_PRODUCT_NV = ((int)0x8546),
                COMPRESSED_SRGB_EXT = ((int)0x8C48),
                OUTPUT_TEXTURE_COORD2_EXT = ((int)0x879F),
                FENCE_CONDITION_NV = ((int)0x84F4),
                PROGRAM_ALU_INSTRUCTIONS_ARB = ((int)0x8805),
                SPHERE_MAP = ((int)0x2402),
                PHONG_HINT_WIN = ((int)0x80EB),
                TEXTURE_LUMINANCE_SIZE = ((int)0x8060),
                TEXTURE_MAX_LOD = ((int)0x813B),
                INDEX_ARRAY = ((int)0x8077),
                EYE_LINE_SGIS = ((int)0x81F6),
                MATRIX22_ARB = ((int)0x88D6),
                COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = ((int)0x8C4E),
                COLOR_SUM_ARB = ((int)0x8458),
                NUM_FRAGMENT_CONSTANTS_ATI = ((int)0x896F),
                COLOR_ATTACHMENT13_EXT = ((int)0x8CED),
                DEPTH_BUFFER_FLOAT_MODE_NV = ((int)0x8DAF),
                REG_20_ATI = ((int)0x8935),
                COLOR_ATTACHMENT15_EXT = ((int)0x8CEF),
                ARRAY_BUFFER_ARB = ((int)0x8892),
                VERTEX_SOURCE_ATI = ((int)0x8774),
                MAX_DRAW_BUFFERS = ((int)0x8824),
                SOURCE2_RGB = ((int)0x8582),
                COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = ((int)0x8C4D),
                FLOAT_RGB16_NV = ((int)0x8888),
                CURRENT_VERTEX_ATTRIB_ARB = ((int)0x8626),
                DEPTH_STENCIL_TO_RGBA_NV = ((int)0x886E),
                TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = ((int)0x86A0),
                INDEX_ARRAY_COUNT_EXT = ((int)0x8087),
                SPOT_CUTOFF = ((int)0x1206),
                VERTEX23_BIT_PGI = ((int)0x00000004),
                COORD_REPLACE_ARB = ((int)0x8862),
                RENDERBUFFER_ALPHA_SIZE_EXT = ((int)0x8D53),
                SWIZZLE_STR_ATI = ((int)0x8976),
                CONVOLUTION_1D_EXT = ((int)0x8010),
                LINE_WIDTH_RANGE = ((int)0x0B22),
                SLUMINANCE_EXT = ((int)0x8C46),
                FOG_END = ((int)0x0B64),
                RGB4 = ((int)0x804F),
                VERTEX_ID_NV = ((int)0x8C7B),
                NEAREST_MIPMAP_LINEAR = ((int)0x2702),
                COMPRESSED_INTENSITY = ((int)0x84EC),
                REG_30_ATI = ((int)0x893F),
                GL_2X_BIT_ATI = ((int)0x00000001),
                R1UI_V3F_SUN = ((int)0x85C4),
                VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87CF),
                CONVOLUTION_2D_EXT = ((int)0x8011),
                REPLICATE_BORDER_HP = ((int)0x8153),
                OP_RECIP_SQRT_EXT = ((int)0x8795),
                FRAGMENT_LIGHT0_SGIX = ((int)0x840C),
                VERTEX_SHADER_EXT = ((int)0x8780),
                FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = ((int)0x8CD0),
                MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = ((int)0x8DA1),
                DEPTH_COMPONENT24_SGIX = ((int)0x81A6),
                HALF_BIAS_NORMAL_NV = ((int)0x853A),
                SLUMINANCE_ALPHA_EXT = ((int)0x8C44),
                SRC_ALPHA_SATURATE = ((int)0x0308),
                DETAIL_TEXTURE_MODE_SGIS = ((int)0x809B),
                POST_CONVOLUTION_ALPHA_BIAS = ((int)0x8023),
                RED_BIT_ATI = ((int)0x00000001),
                FOG_FUNC_POINTS_SGIS = ((int)0x812B),
                NEVER = ((int)0x0200),
                TEXTURE_BLUE_TYPE_ARB = ((int)0x8C12),
                MOV_ATI = ((int)0x8961),
                MATRIX_PALETTE_ARB = ((int)0x8840),
                MATRIX6_ARB = ((int)0x88C6),
                SAMPLE_ALPHA_TO_ONE_SGIS = ((int)0x809F),
                SOURCE2_ALPHA_EXT = ((int)0x858A),
                ALPHA16_EXT = ((int)0x803E),
                OP_EXP_BASE_2_EXT = ((int)0x8791),
                REG_21_ATI = ((int)0x8936),
                STENCIL_INDEX1_EXT = ((int)0x8D46),
                TEXTURE11_ARB = ((int)0x84CB),
                COMBINER_AB_DOT_PRODUCT_NV = ((int)0x8545),
                HI_SCALE_NV = ((int)0x870E),
                BUMP_ENVMAP_ATI = ((int)0x877B),
                RGB8I_EXT = ((int)0x8D8F),
                LINK_STATUS = ((int)0x8B82),
                SAMPLE_COVERAGE_ARB = ((int)0x80A0),
                CONVOLUTION_FORMAT = ((int)0x8017),
                COLOR_ARRAY = ((int)0x8076),
                HISTOGRAM_ALPHA_SIZE_EXT = ((int)0x802B),
                PACK_CMYK_HINT_EXT = ((int)0x800E),
                COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = ((int)0x8C71),
                OUTPUT_TEXTURE_COORD22_EXT = ((int)0x87B3),
                UNSIGNED_INT_SAMPLER_2D_EXT = ((int)0x8DD2),
                POST_CONVOLUTION_RED_SCALE = ((int)0x801C),
                UNSIGNED_SHORT_4_4_4_4_EXT = ((int)0x8033),
                LUMINANCE8_EXT = ((int)0x8040),
                COLOR_WRITEMASK = ((int)0x0C23),
                REG_13_ATI = ((int)0x892E),
                INTENSITY32I_EXT = ((int)0x8D85),
                REG_31_ATI = ((int)0x8940),
                TRANSPOSE_TEXTURE_MATRIX = ((int)0x84E5),
                EXPAND_NEGATE_NV = ((int)0x8539),
                MAX_VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87C7),
                TEXTURE_BORDER_COLOR = ((int)0x1004),
                WEIGHT_ARRAY_BUFFER_BINDING = ((int)0x889E),
                COLOR_ARRAY_COUNT_EXT = ((int)0x8084),
                COMPRESSED_SLUMINANCE_ALPHA_EXT = ((int)0x8C4B),
                SAMPLE_MASK_SGIS = ((int)0x80A0),
                DRAW_PIXEL_TOKEN = ((int)0x0705),
                GL_3_BYTES = ((int)0x1408),
                PIXEL_COUNTER_BITS_NV = ((int)0x8864),
                AMBIENT_AND_DIFFUSE = ((int)0x1602),
                DOT2_ADD_ATI = ((int)0x896C),
                ACTIVE_UNIFORM_MAX_LENGTH = ((int)0x8B87),
                TRANSPOSE_PROJECTION_MATRIX_ARB = ((int)0x84E4),
                SAMPLES_EXT = ((int)0x80A9),
                LOCAL_CONSTANT_EXT = ((int)0x87C3),
                COMPRESSED_SIGNED_RED_RGTC1_EXT = ((int)0x8DBC),
                TEXTURE_2D_ARRAY_EXT = ((int)0x8C1A),
                MAP1_NORMAL = ((int)0x0D92),
                SAMPLER_1D_ARRAY_EXT = ((int)0x8DC0),
                INTENSITY8UI_EXT = ((int)0x8D7F),
                FLOAT_CLEAR_COLOR_VALUE_NV = ((int)0x888D),
                TRANSPOSE_COLOR_MATRIX_ARB = ((int)0x84E6),
                VERTEX_ATTRIB_ARRAY6_NV = ((int)0x8656),
                SAMPLER_CUBE = ((int)0x8B60),
                COLOR_BUFFER_BIT = ((int)0x00004000),
                MODELVIEW_STACK_DEPTH = ((int)0x0BA3),
                POINT_FADE_THRESHOLD_SIZE_ARB = ((int)0x8128),
                TEXTURE_CUBE_MAP_NEGATIVE_Y = ((int)0x8518),
                ATTRIB_ARRAY_SIZE_NV = ((int)0x8623),
                UNSIGNED_INT_SAMPLER_CUBE_EXT = ((int)0x8DD4),
                ALPHA32F_ARB = ((int)0x8816),
                MAP_ATTRIB_V_ORDER_NV = ((int)0x86C4),
                VARIANT_DATATYPE_EXT = ((int)0x87E5),
                INT_SAMPLER_2D_ARRAY_EXT = ((int)0x8DCF),
                TEXTURE_DEPTH_SIZE_ARB = ((int)0x884A),
                INTENSITY_FLOAT16_ATI = ((int)0x881D),
            }
            
            public enum ARB_imaging
            {
                CONVOLUTION_WIDTH = ((int)0x8018),
                COLOR_MATRIX_STACK_DEPTH = ((int)0x80B2),
                BLEND_EQUATION = ((int)0x8009),
                COLOR_TABLE_BIAS = ((int)0x80D7),
                CONSTANT_BORDER = ((int)0x8151),
                HISTOGRAM = ((int)0x8024),
                COLOR_TABLE_GREEN_SIZE = ((int)0x80DB),
                HISTOGRAM_RED_SIZE = ((int)0x8028),
                CONSTANT_ALPHA = ((int)0x8003),
                TABLE_TOO_LARGE = ((int)0x8031),
                POST_CONVOLUTION_GREEN_SCALE = ((int)0x801D),
                MINMAX_SINK = ((int)0x8030),
                PROXY_POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D5),
                COLOR_TABLE_SCALE = ((int)0x80D6),
                COLOR_MATRIX = ((int)0x80B1),
                CONVOLUTION_FILTER_SCALE = ((int)0x8014),
                BLEND_COLOR = ((int)0x8005),
                MIN = ((int)0x8007),
                HISTOGRAM_SINK = ((int)0x802D),
                POST_COLOR_MATRIX_GREEN_SCALE = ((int)0x80B5),
                SEPARABLE_2D = ((int)0x8012),
                FUNC_REVERSE_SUBTRACT = ((int)0x800B),
                CONVOLUTION_FORMAT = ((int)0x8017),
                REPLICATE_BORDER = ((int)0x8153),
                CONSTANT_COLOR = ((int)0x8001),
                COLOR_TABLE = ((int)0x80D0),
                POST_CONVOLUTION_BLUE_SCALE = ((int)0x801E),
                FUNC_ADD = ((int)0x8006),
                CONVOLUTION_2D = ((int)0x8011),
                POST_COLOR_MATRIX_ALPHA_BIAS = ((int)0x80BB),
                POST_COLOR_MATRIX_ALPHA_SCALE = ((int)0x80B7),
                MINMAX = ((int)0x802E),
                POST_CONVOLUTION_ALPHA_BIAS = ((int)0x8023),
                POST_COLOR_MATRIX_BLUE_SCALE = ((int)0x80B6),
                POST_COLOR_MATRIX_RED_BIAS = ((int)0x80B8),
                HISTOGRAM_BLUE_SIZE = ((int)0x802A),
                POST_CONVOLUTION_BLUE_BIAS = ((int)0x8022),
                COLOR_TABLE_FORMAT = ((int)0x80D8),
                POST_COLOR_MATRIX_COLOR_TABLE = ((int)0x80D2),
                CONVOLUTION_HEIGHT = ((int)0x8019),
                POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D1),
                MINMAX_FORMAT = ((int)0x802F),
                COLOR_TABLE_ALPHA_SIZE = ((int)0x80DD),
                POST_COLOR_MATRIX_BLUE_BIAS = ((int)0x80BA),
                PROXY_POST_CONVOLUTION_COLOR_TABLE = ((int)0x80D4),
                PROXY_COLOR_TABLE = ((int)0x80D3),
                HISTOGRAM_ALPHA_SIZE = ((int)0x802B),
                MAX_CONVOLUTION_WIDTH = ((int)0x801A),
                POST_COLOR_MATRIX_RED_SCALE = ((int)0x80B4),
                POST_CONVOLUTION_ALPHA_SCALE = ((int)0x801F),
                CONVOLUTION_BORDER_COLOR = ((int)0x8154),
                COLOR_TABLE_BLUE_SIZE = ((int)0x80DC),
                ONE_MINUS_CONSTANT_COLOR = ((int)0x8002),
                COLOR_TABLE_LUMINANCE_SIZE = ((int)0x80DE),
                POST_COLOR_MATRIX_GREEN_BIAS = ((int)0x80B9),
                ONE_MINUS_CONSTANT_ALPHA = ((int)0x8004),
                FUNC_SUBTRACT = ((int)0x800A),
                COLOR_TABLE_INTENSITY_SIZE = ((int)0x80DF),
                REDUCE = ((int)0x8016),
                COLOR_TABLE_RED_SIZE = ((int)0x80DA),
                CONVOLUTION_BORDER_MODE = ((int)0x8013),
                HISTOGRAM_GREEN_SIZE = ((int)0x8029),
                POST_CONVOLUTION_GREEN_BIAS = ((int)0x8021),
                HISTOGRAM_FORMAT = ((int)0x8027),
                CONVOLUTION_1D = ((int)0x8010),
                POST_CONVOLUTION_RED_BIAS = ((int)0x8020),
                MAX_COLOR_MATRIX_STACK_DEPTH = ((int)0x80B3),
                COLOR_TABLE_WIDTH = ((int)0x80D9),
                POST_CONVOLUTION_RED_SCALE = ((int)0x801C),
                MAX = ((int)0x8008),
                PROXY_HISTOGRAM = ((int)0x8025),
                MAX_CONVOLUTION_HEIGHT = ((int)0x801B),
                CONVOLUTION_FILTER_BIAS = ((int)0x8015),
                HISTOGRAM_WIDTH = ((int)0x8026),
                HISTOGRAM_LUMINANCE_SIZE = ((int)0x802C),
            }
            
            public enum VERSION_1_3
            {
                TEXTURE14 = ((int)0x84CE),
                TEXTURE17 = ((int)0x84D1),
                TEXTURE16 = ((int)0x84D0),
                TEXTURE11 = ((int)0x84CB),
                TEXTURE10 = ((int)0x84CA),
                TEXTURE13 = ((int)0x84CD),
                TEXTURE12 = ((int)0x84CC),
                SAMPLE_ALPHA_TO_ONE = ((int)0x809F),
                TEXTURE_BINDING_CUBE_MAP = ((int)0x8514),
                TEXTURE19 = ((int)0x84D3),
                TEXTURE18 = ((int)0x84D2),
                PRIMARY_COLOR = ((int)0x8577),
                MULTISAMPLE = ((int)0x809D),
                TRANSPOSE_COLOR_MATRIX = ((int)0x84E6),
                TRANSPOSE_PROJECTION_MATRIX = ((int)0x84E4),
                CONSTANT = ((int)0x8576),
                COMBINE = ((int)0x8570),
                MULTISAMPLE_BIT = ((int)0x20000000),
                SOURCE2_ALPHA = ((int)0x858A),
                SAMPLES = ((int)0x80A9),
                COMPRESSED_ALPHA = ((int)0x84E9),
                TEXTURE_CUBE_MAP_POSITIVE_Y = ((int)0x8517),
                SAMPLE_COVERAGE = ((int)0x80A0),
                TRANSPOSE_MODELVIEW_MATRIX = ((int)0x84E3),
                SAMPLE_ALPHA_TO_COVERAGE = ((int)0x809E),
                SUBTRACT = ((int)0x84E7),
                SAMPLE_BUFFERS = ((int)0x80A8),
                DOT3_RGBA = ((int)0x86AF),
                DOT3_RGB = ((int)0x86AE),
                SOURCE1_ALPHA = ((int)0x8589),
                TEXTURE6 = ((int)0x84C6),
                TEXTURE2 = ((int)0x84C2),
                COMPRESSED_RGB = ((int)0x84ED),
                COMPRESSED_RGBA = ((int)0x84EE),
                TEXTURE9 = ((int)0x84C9),
                TEXTURE31 = ((int)0x84DF),
                TEXTURE30 = ((int)0x84DE),
                OPERAND1_ALPHA = ((int)0x8599),
                CLIENT_ACTIVE_TEXTURE = ((int)0x84E1),
                INTERPOLATE = ((int)0x8575),
                OPERAND1_RGB = ((int)0x8591),
                SOURCE2_RGB = ((int)0x8582),
                MAX_CUBE_MAP_TEXTURE_SIZE = ((int)0x851C),
                TEXTURE_COMPRESSED = ((int)0x86A1),
                TEXTURE_CUBE_MAP_NEGATIVE_Z = ((int)0x851A),
                RGB_SCALE = ((int)0x8573),
                SAMPLE_COVERAGE_INVERT = ((int)0x80AB),
                TEXTURE_CUBE_MAP_POSITIVE_Z = ((int)0x8519),
                NUM_COMPRESSED_TEXTURE_FORMATS = ((int)0x86A2),
                COMPRESSED_TEXTURE_FORMATS = ((int)0x86A3),
                TEXTURE5 = ((int)0x84C5),
                TEXTURE1 = ((int)0x84C1),
                COMBINE_RGB = ((int)0x8571),
                TEXTURE25 = ((int)0x84D9),
                TEXTURE8 = ((int)0x84C8),
                TEXTURE27 = ((int)0x84DB),
                TEXTURE26 = ((int)0x84DA),
                TEXTURE21 = ((int)0x84D5),
                TEXTURE20 = ((int)0x84D4),
                TEXTURE23 = ((int)0x84D7),
                TEXTURE22 = ((int)0x84D6),
                SAMPLE_COVERAGE_VALUE = ((int)0x80AA),
                TEXTURE29 = ((int)0x84DD),
                TEXTURE28 = ((int)0x84DC),
                TEXTURE_CUBE_MAP = ((int)0x8513),
                SOURCE0_ALPHA = ((int)0x8588),
                TEXTURE24 = ((int)0x84D8),
                SOURCE0_RGB = ((int)0x8580),
                ADD_SIGNED = ((int)0x8574),
                OPERAND0_ALPHA = ((int)0x8598),
                REFLECTION_MAP = ((int)0x8512),
                ACTIVE_TEXTURE = ((int)0x84E0),
                TRANSPOSE_TEXTURE_MATRIX = ((int)0x84E5),
                SOURCE1_RGB = ((int)0x8581),
                TEXTURE15 = ((int)0x84CF),
                COMPRESSED_LUMINANCE = ((int)0x84EA),
                CLAMP_TO_BORDER = ((int)0x812D),
                TEXTURE_CUBE_MAP_NEGATIVE_X = ((int)0x8516),
                OPERAND2_ALPHA = ((int)0x859A),
                COMPRESSED_INTENSITY = ((int)0x84EC),
                TEXTURE0 = ((int)0x84C0),
                NORMAL_MAP = ((int)0x8511),
                COMPRESSED_LUMINANCE_ALPHA = ((int)0x84EB),
                PROXY_TEXTURE_CUBE_MAP = ((int)0x851B),
                TEXTURE_COMPRESSED_IMAGE_SIZE = ((int)0x86A0),
                OPERAND2_RGB = ((int)0x8592),
                TEXTURE4 = ((int)0x84C4),
                OPERAND0_RGB = ((int)0x8590),
                MAX_TEXTURE_UNITS = ((int)0x84E2),
                TEXTURE_CUBE_MAP_POSITIVE_X = ((int)0x8515),
                TEXTURE_CUBE_MAP_NEGATIVE_Y = ((int)0x8518),
                TEXTURE_COMPRESSION_HINT = ((int)0x84EF),
                COMBINE_ALPHA = ((int)0x8572),
                PREVIOUS = ((int)0x8578),
                TEXTURE7 = ((int)0x84C7),
                TEXTURE3 = ((int)0x84C3),
            }
            
            public enum VERSION_1_4
            {
                DECR_WRAP = ((int)0x8508),
                GENERATE_MIPMAP = ((int)0x8191),
                FRAGMENT_DEPTH = ((int)0x8452),
                MAX_TEXTURE_LOD_BIAS = ((int)0x84FD),
                FOG_COORDINATE_ARRAY = ((int)0x8457),
                BLEND_DST_RGB = ((int)0x80C8),
                GENERATE_MIPMAP_HINT = ((int)0x8192),
                BLEND_SRC_ALPHA = ((int)0x80CB),
                TEXTURE_COMPARE_MODE = ((int)0x884C),
                FOG_COORDINATE_ARRAY_STRIDE = ((int)0x8455),
                TEXTURE_FILTER_CONTROL = ((int)0x8500),
                DEPTH_COMPONENT24 = ((int)0x81A6),
                FOG_COORDINATE_SOURCE = ((int)0x8450),
                POINT_SIZE_MAX = ((int)0x8127),
                POINT_DISTANCE_ATTENUATION = ((int)0x8129),
                SECONDARY_COLOR_ARRAY_SIZE = ((int)0x845A),
                DEPTH_TEXTURE_MODE = ((int)0x884B),
                DEPTH_COMPONENT16 = ((int)0x81A5),
                FOG_COORDINATE_ARRAY_TYPE = ((int)0x8454),
                MIRRORED_REPEAT = ((int)0x8370),
                CURRENT_SECONDARY_COLOR = ((int)0x8459),
                SECONDARY_COLOR_ARRAY_POINTER = ((int)0x845D),
                SECONDARY_COLOR_ARRAY_STRIDE = ((int)0x845C),
                DEPTH_COMPONENT32 = ((int)0x81A7),
                TEXTURE_COMPARE_FUNC = ((int)0x884D),
                TEXTURE_DEPTH_SIZE = ((int)0x884A),
                BLEND_DST_ALPHA = ((int)0x80CA),
                CURRENT_FOG_COORDINATE = ((int)0x8453),
                POINT_FADE_THRESHOLD_SIZE = ((int)0x8128),
                COMPARE_R_TO_TEXTURE = ((int)0x884E),
                TEXTURE_LOD_BIAS = ((int)0x8501),
                FOG_COORDINATE_ARRAY_POINTER = ((int)0x8456),
                BLEND_SRC_RGB = ((int)0x80C9),
                COLOR_SUM = ((int)0x8458),
                FOG_COORDINATE = ((int)0x8451),
                SECONDARY_COLOR_ARRAY_TYPE = ((int)0x845B),
                POINT_SIZE_MIN = ((int)0x8126),
                INCR_WRAP = ((int)0x8507),
                SECONDARY_COLOR_ARRAY = ((int)0x845E),
            }
            
            public enum VERSION_1_5
            {
                DYNAMIC_READ = ((int)0x88E9),
                VERTEX_ARRAY_BUFFER_BINDING = ((int)0x8896),
                STREAM_COPY = ((int)0x88E2),
                FOG_COORD_ARRAY_STRIDE = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_STRIDE),
                FOG_COORDINATE_ARRAY_BUFFER_BINDING = ((int)0x889D),
                READ_WRITE = ((int)0x88BA),
                SRC1_ALPHA = ((int)VERSION_1_3.SOURCE1_ALPHA),
                TEXTURE_COORD_ARRAY_BUFFER_BINDING = ((int)0x889A),
                BUFFER_MAP_POINTER = ((int)0x88BD),
                QUERY_COUNTER_BITS = ((int)0x8864),
                STATIC_COPY = ((int)0x88E6),
                STATIC_DRAW = ((int)0x88E4),
                SRC2_RGB = ((int)VERSION_1_3.SOURCE2_RGB),
                SRC2_ALPHA = ((int)VERSION_1_3.SOURCE2_ALPHA),
                FOG_COORD_ARRAY = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY),
                FOG_COORD_SRC = ((int)VERSION_1_4.FOG_COORDINATE_SOURCE),
                DYNAMIC_COPY = ((int)0x88EA),
                STATIC_READ = ((int)0x88E5),
                FOG_COORD_ARRAY_BUFFER_BINDING = ((int)VERSION_1_5.FOG_COORDINATE_ARRAY_BUFFER_BINDING),
                FOG_COORD_ARRAY_POINTER = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_POINTER),
                EDGE_FLAG_ARRAY_BUFFER_BINDING = ((int)0x889B),
                CURRENT_FOG_COORD = ((int)VERSION_1_4.CURRENT_FOG_COORDINATE),
                VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = ((int)0x889F),
                READ_ONLY = ((int)0x88B8),
                SRC0_ALPHA = ((int)VERSION_1_3.SOURCE0_ALPHA),
                ELEMENT_ARRAY_BUFFER = ((int)0x8893),
                CURRENT_QUERY = ((int)0x8865),
                FOG_COORD = ((int)VERSION_1_4.FOG_COORDINATE),
                QUERY_RESULT = ((int)0x8866),
                BUFFER_USAGE = ((int)0x8765),
                BUFFER_ACCESS = ((int)0x88BB),
                STREAM_DRAW = ((int)0x88E0),
                SECONDARY_COLOR_ARRAY_BUFFER_BINDING = ((int)0x889C),
                SRC0_RGB = ((int)VERSION_1_3.SOURCE0_RGB),
                ARRAY_BUFFER_BINDING = ((int)0x8894),
                QUERY_RESULT_AVAILABLE = ((int)0x8867),
                WRITE_ONLY = ((int)0x88B9),
                BUFFER_SIZE = ((int)0x8764),
                WEIGHT_ARRAY_BUFFER_BINDING = ((int)0x889E),
                SRC1_RGB = ((int)VERSION_1_3.SOURCE1_RGB),
                SAMPLES_PASSED = ((int)0x8914),
                DYNAMIC_DRAW = ((int)0x88E8),
                ARRAY_BUFFER = ((int)0x8892),
                NORMAL_ARRAY_BUFFER_BINDING = ((int)0x8897),
                COLOR_ARRAY_BUFFER_BINDING = ((int)0x8898),
                INDEX_ARRAY_BUFFER_BINDING = ((int)0x8899),
                BUFFER_MAPPED = ((int)0x88BC),
                ELEMENT_ARRAY_BUFFER_BINDING = ((int)0x8895),
                STREAM_READ = ((int)0x88E1),
                FOG_COORD_ARRAY_TYPE = ((int)VERSION_1_4.FOG_COORDINATE_ARRAY_TYPE),
            }
            
            public enum VERSION_2_0
            {
                MAX_VARYING_FLOATS = ((int)0x8B4B),
                VERTEX_ATTRIB_ARRAY_POINTER = ((int)0x8645),
                VERTEX_ATTRIB_ARRAY_ENABLED = ((int)0x8622),
                DRAW_BUFFER13 = ((int)0x8832),
                VERTEX_PROGRAM_POINT_SIZE = ((int)0x8642),
                MAX_VERTEX_TEXTURE_IMAGE_UNITS = ((int)0x8B4C),
                MAX_TEXTURE_COORDS = ((int)0x8871),
                FLOAT_MAT4 = ((int)0x8B5C),
                SAMPLER_3D = ((int)0x8B5F),
                SAMPLER_1D_SHADOW = ((int)0x8B61),
                SAMPLER_1D = ((int)0x8B5D),
                ATTACHED_SHADERS = ((int)0x8B85),
                ACTIVE_ATTRIBUTES = ((int)0x8B89),
                LINK_STATUS = ((int)0x8B82),
                FLOAT_VEC4 = ((int)0x8B52),
                DRAW_BUFFER4 = ((int)0x8829),
                DRAW_BUFFER8 = ((int)0x882D),
                MAX_DRAW_BUFFERS = ((int)0x8824),
                INT_VEC2 = ((int)0x8B53),
                POINT_SPRITE_COORD_ORIGIN = ((int)0x8CA0),
                MAX_FRAGMENT_UNIFORM_COMPONENTS = ((int)0x8B49),
                SAMPLER_CUBE = ((int)0x8B60),
                DRAW_BUFFER12 = ((int)0x8831),
                DRAW_BUFFER11 = ((int)0x8830),
                DRAW_BUFFER10 = ((int)0x882F),
                FRAGMENT_SHADER = ((int)0x8B30),
                STENCIL_BACK_REF = ((int)0x8CA3),
                DRAW_BUFFER15 = ((int)0x8834),
                DRAW_BUFFER14 = ((int)0x8833),
                BOOL = ((int)0x8B56),
                CURRENT_VERTEX_ATTRIB = ((int)0x8626),
                ACTIVE_ATTRIBUTE_MAX_LENGTH = ((int)0x8B8A),
                FLOAT_MAT2 = ((int)0x8B5A),
                ACTIVE_UNIFORMS = ((int)0x8B86),
                SAMPLER_2D = ((int)0x8B5E),
                INFO_LOG_LENGTH = ((int)0x8B84),
                MAX_VERTEX_ATTRIBS = ((int)0x8869),
                DRAW_BUFFER0 = ((int)0x8825),
                CURRENT_PROGRAM = ((int)0x8B8D),
                SHADING_LANGUAGE_VERSION = ((int)0x8B8C),
                FLOAT_VEC3 = ((int)0x8B51),
                DRAW_BUFFER5 = ((int)0x882A),
                DRAW_BUFFER9 = ((int)0x882E),
                STENCIL_BACK_FUNC = ((int)0x8800),
                COMPILE_STATUS = ((int)0x8B81),
                INT_VEC3 = ((int)0x8B54),
                STENCIL_BACK_PASS_DEPTH_FAIL = ((int)0x8802),
                VERTEX_ATTRIB_ARRAY_SIZE = ((int)0x8623),
                BLEND_EQUATION_ALPHA = ((int)0x883D),
                STENCIL_BACK_PASS_DEPTH_PASS = ((int)0x8803),
                UPPER_LEFT = ((int)0x8CA2),
                VERTEX_ATTRIB_ARRAY_STRIDE = ((int)0x8624),
                FLOAT_MAT3 = ((int)0x8B5B),
                SAMPLER_2D_SHADOW = ((int)0x8B62),
                VERTEX_ATTRIB_ARRAY_NORMALIZED = ((int)0x886A),
                FRAGMENT_SHADER_DERIVATIVE_HINT = ((int)0x8B8B),
                BLEND_EQUATION_RGB = ((int)ARB_imaging.BLEND_EQUATION),
                DRAW_BUFFER2 = ((int)0x8827),
                SHADER_SOURCE_LENGTH = ((int)0x8B88),
                DRAW_BUFFER7 = ((int)0x882C),
                SHADER_TYPE = ((int)0x8B4F),
                DRAW_BUFFER1 = ((int)0x8826),
                MAX_TEXTURE_IMAGE_UNITS = ((int)0x8872),
                POINT_SPRITE = ((int)0x8861),
                DRAW_BUFFER6 = ((int)0x882B),
                STENCIL_BACK_WRITEMASK = ((int)0x8CA5),
                STENCIL_BACK_VALUE_MASK = ((int)0x8CA4),
                COORD_REPLACE = ((int)0x8862),
                VERTEX_ATTRIB_ARRAY_TYPE = ((int)0x8625),
                LOWER_LEFT = ((int)0x8CA1),
                INT_VEC4 = ((int)0x8B55),
                FLOAT_VEC2 = ((int)0x8B50),
                MAX_VERTEX_UNIFORM_COMPONENTS = ((int)0x8B4A),
                VALIDATE_STATUS = ((int)0x8B83),
                VERTEX_SHADER = ((int)0x8B31),
                MAX_COMBINED_TEXTURE_IMAGE_UNITS = ((int)0x8B4D),
                VERTEX_PROGRAM_TWO_SIDE = ((int)0x8643),
                DELETE_STATUS = ((int)0x8B80),
                STENCIL_BACK_FAIL = ((int)0x8801),
                ACTIVE_UNIFORM_MAX_LENGTH = ((int)0x8B87),
                DRAW_BUFFER3 = ((int)0x8828),
                BOOL_VEC4 = ((int)0x8B59),
                BOOL_VEC3 = ((int)0x8B58),
                BOOL_VEC2 = ((int)0x8B57),
            }
            
            public enum VERSION_2_1
            {
                FLOAT_MAT3x2 = ((int)0x8B67),
                SRGB8 = ((int)0x8C41),
                FLOAT_MAT3x4 = ((int)0x8B68),
                COMPRESSED_SRGB_ALPHA = ((int)0x8C49),
                FLOAT_MAT4x3 = ((int)0x8B6A),
                SLUMINANCE_ALPHA = ((int)0x8C44),
                PIXEL_UNPACK_BUFFER = ((int)0x88EC),
                SRGB_ALPHA = ((int)0x8C42),
                COMPRESSED_SLUMINANCE = ((int)0x8C4A),
                FLOAT_MAT4x2 = ((int)0x8B69),
                SRGB8_ALPHA8 = ((int)0x8C43),
                COMPRESSED_SLUMINANCE_ALPHA = ((int)0x8C4B),
                PIXEL_UNPACK_BUFFER_BINDING = ((int)0x88EF),
                PIXEL_PACK_BUFFER = ((int)0x88EB),
                FLOAT_MAT2x3 = ((int)0x8B65),
                COMPRESSED_SRGB = ((int)0x8C48),
                PIXEL_PACK_BUFFER_BINDING = ((int)0x88ED),
                SRGB = ((int)0x8C40),
                SLUMINANCE8 = ((int)0x8C47),
                SLUMINANCE = ((int)0x8C46),
                FLOAT_MAT2x4 = ((int)0x8B66),
                SLUMINANCE8_ALPHA8 = ((int)0x8C45),
                CURRENT_RASTER_SECONDARY_COLOR = ((int)0x845F),
            }
            
            public enum ARB_multitexture
            {
                TEXTURE13_ARB = ((int)0x84CD),
                TEXTURE7_ARB = ((int)0x84C7),
                TEXTURE21_ARB = ((int)0x84D5),
                TEXTURE24_ARB = ((int)0x84D8),
                TEXTURE19_ARB = ((int)0x84D3),
                TEXTURE5_ARB = ((int)0x84C5),
                TEXTURE16_ARB = ((int)0x84D0),
                TEXTURE27_ARB = ((int)0x84DB),
                TEXTURE17_ARB = ((int)0x84D1),
                MAX_TEXTURE_UNITS_ARB = ((int)0x84E2),
                TEXTURE2_ARB = ((int)0x84C2),
                TEXTURE20_ARB = ((int)0x84D4),
                TEXTURE31_ARB = ((int)0x84DF),
                TEXTURE12_ARB = ((int)0x84CC),
                TEXTURE18_ARB = ((int)0x84D2),
                TEXTURE15_ARB = ((int)0x84CF),
                TEXTURE10_ARB = ((int)0x84CA),
                ACTIVE_TEXTURE_ARB = ((int)0x84E0),
                TEXTURE23_ARB = ((int)0x84D7),
                TEXTURE0_ARB = ((int)0x84C0),
                TEXTURE29_ARB = ((int)0x84DD),
                TEXTURE26_ARB = ((int)0x84DA),
                TEXTURE8_ARB = ((int)0x84C8),
                TEXTURE3_ARB = ((int)0x84C3),
                TEXTURE30_ARB = ((int)0x84DE),
                TEXTURE11_ARB = ((int)0x84CB),
                TEXTURE9_ARB = ((int)0x84C9),
                CLIENT_ACTIVE_TEXTURE_ARB = ((int)0x84E1),
                TEXTURE14_ARB = ((int)0x84CE),
                TEXTURE6_ARB = ((int)0x84C6),
                TEXTURE22_ARB = ((int)0x84D6),
                TEXTURE28_ARB = ((int)0x84DC),
                TEXTURE25_ARB = ((int)0x84D9),
                TEXTURE1_ARB = ((int)0x84C1),
                TEXTURE4_ARB = ((int)0x84C4),
            }
            
            public enum ARB_transpose_matrix
            {
                TRANSPOSE_TEXTURE_MATRIX_ARB = ((int)0x84E5),
                TRANSPOSE_PROJECTION_MATRIX_ARB = ((int)0x84E4),
                TRANSPOSE_COLOR_MATRIX_ARB = ((int)0x84E6),
                TRANSPOSE_MODELVIEW_MATRIX_ARB = ((int)0x84E3),
            }
            
            public enum ARB_texture_env_add
            {
            }
            
            public enum ARB_texture_cube_map
            {
                TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = ((int)0x8517),
                TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = ((int)0x8516),
                TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = ((int)0x8518),
                TEXTURE_CUBE_MAP_POSITIVE_X_ARB = ((int)0x8515),
                TEXTURE_CUBE_MAP_ARB = ((int)0x8513),
                TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = ((int)0x851A),
                MAX_CUBE_MAP_TEXTURE_SIZE_ARB = ((int)0x851C),
                REFLECTION_MAP_ARB = ((int)0x8512),
                TEXTURE_BINDING_CUBE_MAP_ARB = ((int)0x8514),
                NORMAL_MAP_ARB = ((int)0x8511),
                PROXY_TEXTURE_CUBE_MAP_ARB = ((int)0x851B),
                TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = ((int)0x8519),
            }
            
            public enum ARB_texture_compression
            {
                COMPRESSED_LUMINANCE_ARB = ((int)0x84EA),
                COMPRESSED_INTENSITY_ARB = ((int)0x84EC),
                TEXTURE_COMPRESSION_HINT_ARB = ((int)0x84EF),
                TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = ((int)0x86A0),
                COMPRESSED_TEXTURE_FORMATS_ARB = ((int)0x86A3),
                COMPRESSED_RGB_ARB = ((int)0x84ED),
                NUM_COMPRESSED_TEXTURE_FORMATS_ARB = ((int)0x86A2),
                COMPRESSED_LUMINANCE_ALPHA_ARB = ((int)0x84EB),
                TEXTURE_COMPRESSED_ARB = ((int)0x86A1),
                COMPRESSED_ALPHA_ARB = ((int)0x84E9),
                COMPRESSED_RGBA_ARB = ((int)0x84EE),
            }
            
            public enum ARB_texture_border_clamp
            {
                CLAMP_TO_BORDER_ARB = ((int)0x812D),
            }
            
            public enum ARB_point_parameters
            {
                POINT_DISTANCE_ATTENUATION_ARB = ((int)0x8129),
                POINT_FADE_THRESHOLD_SIZE_ARB = ((int)0x8128),
                POINT_SIZE_MIN_ARB = ((int)0x8126),
                POINT_SIZE_MAX_ARB = ((int)0x8127),
            }
            
            public enum ARB_vertex_blend
            {
                MODELVIEW5_ARB = ((int)0x8725),
                MODELVIEW0_ARB = ((int)0x1700),
                ACTIVE_VERTEX_UNITS_ARB = ((int)0x86A5),
                MODELVIEW6_ARB = ((int)0x8726),
                MODELVIEW4_ARB = ((int)0x8724),
                WEIGHT_ARRAY_ARB = ((int)0x86AD),
                MODELVIEW15_ARB = ((int)0x872F),
                MODELVIEW10_ARB = ((int)0x872A),
                MODELVIEW16_ARB = ((int)0x8730),
                MODELVIEW21_ARB = ((int)0x8735),
                MODELVIEW22_ARB = ((int)0x8736),
                WEIGHT_ARRAY_POINTER_ARB = ((int)0x86AC),
                WEIGHT_SUM_UNITY_ARB = ((int)0x86A6),
                MODELVIEW1_ARB = ((int)0x850A),
                MODELVIEW29_ARB = ((int)0x873D),
                MODELVIEW11_ARB = ((int)0x872B),
                MODELVIEW12_ARB = ((int)0x872C),
                MODELVIEW19_ARB = ((int)0x8733),
                VERTEX_BLEND_ARB = ((int)0x86A7),
                MODELVIEW26_ARB = ((int)0x873A),
                MODELVIEW17_ARB = ((int)0x8731),
                CURRENT_WEIGHT_ARB = ((int)0x86A8),
                MODELVIEW27_ARB = ((int)0x873B),
                MODELVIEW23_ARB = ((int)0x8737),
                WEIGHT_ARRAY_SIZE_ARB = ((int)0x86AB),
                MAX_VERTEX_UNITS_ARB = ((int)0x86A4),
                MODELVIEW7_ARB = ((int)0x8727),
                MODELVIEW13_ARB = ((int)0x872D),
                MODELVIEW28_ARB = ((int)0x873C),
                MODELVIEW25_ARB = ((int)0x8739),
                WEIGHT_ARRAY_TYPE_ARB = ((int)0x86A9),
                MODELVIEW8_ARB = ((int)0x8728),
                WEIGHT_ARRAY_STRIDE_ARB = ((int)0x86AA),
                MODELVIEW18_ARB = ((int)0x8732),
                MODELVIEW9_ARB = ((int)0x8729),
                MODELVIEW24_ARB = ((int)0x8738),
                MODELVIEW14_ARB = ((int)0x872E),
                MODELVIEW20_ARB = ((int)0x8734),
                MODELVIEW31_ARB = ((int)0x873F),
                MODELVIEW30_ARB = ((int)0x873E),
                MODELVIEW2_ARB = ((int)0x8722),
                MODELVIEW3_ARB = ((int)0x8723),
            }
            
            public enum ARB_matrix_palette
            {
                MAX_PALETTE_MATRICES_ARB = ((int)0x8842),
                CURRENT_MATRIX_INDEX_ARB = ((int)0x8845),
                MATRIX_INDEX_ARRAY_POINTER_ARB = ((int)0x8849),
                MATRIX_INDEX_ARRAY_ARB = ((int)0x8844),
                MATRIX_INDEX_ARRAY_SIZE_ARB = ((int)0x8846),
                CURRENT_PALETTE_MATRIX_ARB = ((int)0x8843),
                MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = ((int)0x8841),
                MATRIX_PALETTE_ARB = ((int)0x8840),
                MATRIX_INDEX_ARRAY_STRIDE_ARB = ((int)0x8848),
                MATRIX_INDEX_ARRAY_TYPE_ARB = ((int)0x8847),
            }
            
            public enum ARB_texture_env_combine
            {
                SOURCE2_RGB_ARB = ((int)0x8582),
                OPERAND0_ALPHA_ARB = ((int)0x8598),
                COMBINE_ARB = ((int)0x8570),
                SOURCE1_RGB_ARB = ((int)0x8581),
                ADD_SIGNED_ARB = ((int)0x8574),
                SUBTRACT_ARB = ((int)0x84E7),
                PRIMARY_COLOR_ARB = ((int)0x8577),
                SOURCE2_ALPHA_ARB = ((int)0x858A),
                OPERAND1_RGB_ARB = ((int)0x8591),
                OPERAND0_RGB_ARB = ((int)0x8590),
                OPERAND2_ALPHA_ARB = ((int)0x859A),
                CONSTANT_ARB = ((int)0x8576),
                SOURCE0_ALPHA_ARB = ((int)0x8588),
                INTERPOLATE_ARB = ((int)0x8575),
                PREVIOUS_ARB = ((int)0x8578),
                OPERAND2_RGB_ARB = ((int)0x8592),
                COMBINE_RGB_ARB = ((int)0x8571),
                SOURCE1_ALPHA_ARB = ((int)0x8589),
                SOURCE0_RGB_ARB = ((int)0x8580),
                COMBINE_ALPHA_ARB = ((int)0x8572),
                OPERAND1_ALPHA_ARB = ((int)0x8599),
                RGB_SCALE_ARB = ((int)0x8573),
            }
            
            public enum ARB_texture_env_crossbar
            {
            }
            
            public enum ARB_texture_env_dot3
            {
                DOT3_RGB_ARB = ((int)0x86AE),
                DOT3_RGBA_ARB = ((int)0x86AF),
            }
            
            public enum ARB_texture_mirrored_repeat
            {
                MIRRORED_REPEAT_ARB = ((int)0x8370),
            }
            
            public enum ARB_depth_texture
            {
                DEPTH_TEXTURE_MODE_ARB = ((int)0x884B),
                DEPTH_COMPONENT16_ARB = ((int)0x81A5),
                DEPTH_COMPONENT24_ARB = ((int)0x81A6),
                DEPTH_COMPONENT32_ARB = ((int)0x81A7),
                TEXTURE_DEPTH_SIZE_ARB = ((int)0x884A),
            }
            
            public enum ARB_shadow
            {
                TEXTURE_COMPARE_MODE_ARB = ((int)0x884C),
                TEXTURE_COMPARE_FUNC_ARB = ((int)0x884D),
                COMPARE_R_TO_TEXTURE_ARB = ((int)0x884E),
            }
            
            public enum ARB_shadow_ambient
            {
                TEXTURE_COMPARE_FAIL_VALUE_ARB = ((int)0x80BF),
            }
            
            public enum ARB_window_pos
            {
            }
            
            public enum ARB_vertex_program
            {
                VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = ((int)0x886A),
                MATRIX9_ARB = ((int)0x88C9),
                MATRIX24_ARB = ((int)0x88D8),
                MATRIX25_ARB = ((int)0x88D9),
                TRANSPOSE_CURRENT_MATRIX_ARB = ((int)0x88B7),
                MAX_PROGRAM_NATIVE_PARAMETERS_ARB = ((int)0x88AB),
                MATRIX22_ARB = ((int)0x88D6),
                MAX_PROGRAM_MATRICES_ARB = ((int)0x862F),
                PROGRAM_NATIVE_PARAMETERS_ARB = ((int)0x88AA),
                PROGRAM_NATIVE_INSTRUCTIONS_ARB = ((int)0x88A2),
                MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = ((int)0x88B3),
                PROGRAM_FORMAT_ARB = ((int)0x8876),
                MATRIX8_ARB = ((int)0x88C8),
                MAX_PROGRAM_PARAMETERS_ARB = ((int)0x88A9),
                MATRIX13_ARB = ((int)0x88CD),
                MATRIX31_ARB = ((int)0x88DF),
                MATRIX6_ARB = ((int)0x88C6),
                MATRIX27_ARB = ((int)0x88DB),
                MATRIX7_ARB = ((int)0x88C7),
                PROGRAM_ERROR_STRING_ARB = ((int)0x8874),
                PROGRAM_PARAMETERS_ARB = ((int)0x88A8),
                PROGRAM_BINDING_ARB = ((int)0x8677),
                VERTEX_PROGRAM_POINT_SIZE_ARB = ((int)0x8642),
                PROGRAM_UNDER_NATIVE_LIMITS_ARB = ((int)0x88B6),
                CURRENT_VERTEX_ATTRIB_ARB = ((int)0x8626),
                MAX_PROGRAM_LOCAL_PARAMETERS_ARB = ((int)0x88B4),
                MATRIX12_ARB = ((int)0x88CC),
                PROGRAM_STRING_ARB = ((int)0x8628),
                PROGRAM_INSTRUCTIONS_ARB = ((int)0x88A0),
                MAX_PROGRAM_ENV_PARAMETERS_ARB = ((int)0x88B5),
                VERTEX_ATTRIB_ARRAY_SIZE_ARB = ((int)0x8623),
                MATRIX26_ARB = ((int)0x88DA),
                MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = ((int)0x88A3),
                MATRIX4_ARB = ((int)0x88C4),
                CURRENT_MATRIX_STACK_DEPTH_ARB = ((int)0x8640),
                VERTEX_PROGRAM_TWO_SIDE_ARB = ((int)0x8643),
                VERTEX_ATTRIB_ARRAY_TYPE_ARB = ((int)0x8625),
                PROGRAM_ADDRESS_REGISTERS_ARB = ((int)0x88B0),
                MATRIX2_ARB = ((int)0x88C2),
                MATRIX5_ARB = ((int)0x88C5),
                PROGRAM_ATTRIBS_ARB = ((int)0x88AC),
                MATRIX14_ARB = ((int)0x88CE),
                VERTEX_ATTRIB_ARRAY_STRIDE_ARB = ((int)0x8624),
                MAX_PROGRAM_INSTRUCTIONS_ARB = ((int)0x88A1),
                MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = ((int)0x862E),
                MATRIX3_ARB = ((int)0x88C3),
                PROGRAM_TEMPORARIES_ARB = ((int)0x88A4),
                MATRIX28_ARB = ((int)0x88DC),
                MATRIX29_ARB = ((int)0x88DD),
                MAX_VERTEX_ATTRIBS_ARB = ((int)0x8869),
                MATRIX20_ARB = ((int)0x88D4),
                MATRIX21_ARB = ((int)0x88D5),
                MAX_PROGRAM_ATTRIBS_ARB = ((int)0x88AD),
                PROGRAM_ERROR_POSITION_ARB = ((int)0x864B),
                PROGRAM_FORMAT_ASCII_ARB = ((int)0x8875),
                MAX_PROGRAM_TEMPORARIES_ARB = ((int)0x88A5),
                PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = ((int)0x88B2),
                VERTEX_ATTRIB_ARRAY_ENABLED_ARB = ((int)0x8622),
                VERTEX_ATTRIB_ARRAY_POINTER_ARB = ((int)0x8645),
                MATRIX30_ARB = ((int)0x88DE),
                MATRIX15_ARB = ((int)0x88CF),
                VERTEX_PROGRAM_ARB = ((int)0x8620),
                MATRIX0_ARB = ((int)0x88C0),
                MATRIX17_ARB = ((int)0x88D1),
                PROGRAM_LENGTH_ARB = ((int)0x8627),
                COLOR_SUM_ARB = ((int)0x8458),
                MAX_PROGRAM_NATIVE_ATTRIBS_ARB = ((int)0x88AF),
                MATRIX1_ARB = ((int)0x88C1),
                PROGRAM_NATIVE_TEMPORARIES_ARB = ((int)0x88A6),
                MAX_PROGRAM_ADDRESS_REGISTERS_ARB = ((int)0x88B1),
                MATRIX23_ARB = ((int)0x88D7),
                MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = ((int)0x88A7),
                PROGRAM_NATIVE_ATTRIBS_ARB = ((int)0x88AE),
                CURRENT_MATRIX_ARB = ((int)0x8641),
                MATRIX18_ARB = ((int)0x88D2),
                MATRIX19_ARB = ((int)0x88D3),
                MATRIX10_ARB = ((int)0x88CA),
                MATRIX11_ARB = ((int)0x88CB),
                MATRIX16_ARB = ((int)0x88D0),
            }
            
            public enum ARB_fragment_program
            {
                MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = ((int)0x880E),
                PROGRAM_ALU_INSTRUCTIONS_ARB = ((int)0x8805),
                MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = ((int)0x880C),
                MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = ((int)0x8810),
                MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = ((int)0x880B),
                MAX_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8872),
                MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = ((int)0x880F),
                MAX_PROGRAM_TEX_INDIRECTIONS_ARB = ((int)0x880D),
                PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = ((int)0x8809),
                PROGRAM_TEX_INSTRUCTIONS_ARB = ((int)0x8806),
                PROGRAM_TEX_INDIRECTIONS_ARB = ((int)0x8807),
                PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = ((int)0x880A),
                FRAGMENT_PROGRAM_ARB = ((int)0x8804),
                PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = ((int)0x8808),
                MAX_TEXTURE_COORDS_ARB = ((int)0x8871),
            }
            
            public enum ARB_vertex_buffer_object
            {
                NORMAL_ARRAY_BUFFER_BINDING_ARB = ((int)0x8897),
                READ_ONLY_ARB = ((int)0x88B8),
                STATIC_DRAW_ARB = ((int)0x88E4),
                STATIC_COPY_ARB = ((int)0x88E6),
                BUFFER_MAP_POINTER_ARB = ((int)0x88BD),
                STREAM_COPY_ARB = ((int)0x88E2),
                STATIC_READ_ARB = ((int)0x88E5),
                READ_WRITE_ARB = ((int)0x88BA),
                TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = ((int)0x889A),
                ARRAY_BUFFER_ARB = ((int)0x8892),
                BUFFER_SIZE_ARB = ((int)0x8764),
                BUFFER_ACCESS_ARB = ((int)0x88BB),
                DYNAMIC_DRAW_ARB = ((int)0x88E8),
                WRITE_ONLY_ARB = ((int)0x88B9),
                VERTEX_ARRAY_BUFFER_BINDING_ARB = ((int)0x8896),
                FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = ((int)0x889D),
                DYNAMIC_READ_ARB = ((int)0x88E9),
                DYNAMIC_COPY_ARB = ((int)0x88EA),
                STREAM_DRAW_ARB = ((int)0x88E0),
                WEIGHT_ARRAY_BUFFER_BINDING_ARB = ((int)0x889E),
                STREAM_READ_ARB = ((int)0x88E1),
                COLOR_ARRAY_BUFFER_BINDING_ARB = ((int)0x8898),
                BUFFER_MAPPED_ARB = ((int)0x88BC),
                INDEX_ARRAY_BUFFER_BINDING_ARB = ((int)0x8899),
                ELEMENT_ARRAY_BUFFER_BINDING_ARB = ((int)0x8895),
                EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = ((int)0x889B),
                VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = ((int)0x889F),
                ARRAY_BUFFER_BINDING_ARB = ((int)0x8894),
                SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = ((int)0x889C),
                BUFFER_USAGE_ARB = ((int)0x8765),
                ELEMENT_ARRAY_BUFFER_ARB = ((int)0x8893),
            }
            
            public enum ARB_occlusion_query
            {
                QUERY_RESULT_ARB = ((int)0x8866),
                CURRENT_QUERY_ARB = ((int)0x8865),
                QUERY_RESULT_AVAILABLE_ARB = ((int)0x8867),
                SAMPLES_PASSED_ARB = ((int)0x8914),
                QUERY_COUNTER_BITS_ARB = ((int)0x8864),
            }
            
            public enum ARB_shader_objects
            {
                OBJECT_VALIDATE_STATUS_ARB = ((int)0x8B83),
                BOOL_VEC3_ARB = ((int)0x8B58),
                SAMPLER_2D_RECT_ARB = ((int)0x8B63),
                OBJECT_COMPILE_STATUS_ARB = ((int)0x8B81),
                OBJECT_DELETE_STATUS_ARB = ((int)0x8B80),
                OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = ((int)0x8B87),
                FLOAT_MAT2_ARB = ((int)0x8B5A),
                BOOL_ARB = ((int)0x8B56),
                FLOAT_MAT4_ARB = ((int)0x8B5C),
                OBJECT_SHADER_SOURCE_LENGTH_ARB = ((int)0x8B88),
                SAMPLER_3D_ARB = ((int)0x8B5F),
                OBJECT_INFO_LOG_LENGTH_ARB = ((int)0x8B84),
                INT_VEC4_ARB = ((int)0x8B55),
                FLOAT_MAT3_ARB = ((int)0x8B5B),
                PROGRAM_OBJECT_ARB = ((int)0x8B40),
                SAMPLER_1D_SHADOW_ARB = ((int)0x8B61),
                OBJECT_TYPE_ARB = ((int)0x8B4E),
                BOOL_VEC4_ARB = ((int)0x8B59),
                BOOL_VEC2_ARB = ((int)0x8B57),
                OBJECT_SUBTYPE_ARB = ((int)0x8B4F),
                SAMPLER_1D_ARB = ((int)0x8B5D),
                SAMPLER_2D_RECT_SHADOW_ARB = ((int)0x8B64),
                SHADER_OBJECT_ARB = ((int)0x8B48),
                FLOAT_VEC2_ARB = ((int)0x8B50),
                SAMPLER_2D_SHADOW_ARB = ((int)0x8B62),
                OBJECT_ATTACHED_OBJECTS_ARB = ((int)0x8B85),
                FLOAT_VEC4_ARB = ((int)0x8B52),
                OBJECT_ACTIVE_UNIFORMS_ARB = ((int)0x8B86),
                SAMPLER_CUBE_ARB = ((int)0x8B60),
                SAMPLER_2D_ARB = ((int)0x8B5E),
                INT_VEC2_ARB = ((int)0x8B53),
                OBJECT_LINK_STATUS_ARB = ((int)0x8B82),
                INT_VEC3_ARB = ((int)0x8B54),
                FLOAT_VEC3_ARB = ((int)0x8B51),
            }
            
            public enum ARB_vertex_shader
            {
                MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8B4D),
                VERTEX_SHADER_ARB = ((int)0x8B31),
                OBJECT_ACTIVE_ATTRIBUTES_ARB = ((int)0x8B89),
                MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = ((int)0x8B4C),
                MAX_VERTEX_UNIFORM_COMPONENTS_ARB = ((int)0x8B4A),
                MAX_VARYING_FLOATS_ARB = ((int)0x8B4B),
                OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = ((int)0x8B8A),
            }
            
            public enum ARB_fragment_shader
            {
                MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = ((int)0x8B49),
                FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = ((int)0x8B8B),
                FRAGMENT_SHADER_ARB = ((int)0x8B30),
            }
            
            public enum ARB_shading_language_100
            {
                SHADING_LANGUAGE_VERSION_ARB = ((int)0x8B8C),
            }
            
            public enum ARB_texture_non_power_of_two
            {
            }
            
            public enum ARB_point_sprite
            {
                POINT_SPRITE_ARB = ((int)0x8861),
                COORD_REPLACE_ARB = ((int)0x8862),
            }
            
            public enum ARB_fragment_program_shadow
            {
            }
            
            public enum ARB_draw_buffers
            {
                DRAW_BUFFER13_ARB = ((int)0x8832),
                DRAW_BUFFER4_ARB = ((int)0x8829),
                DRAW_BUFFER1_ARB = ((int)0x8826),
                MAX_DRAW_BUFFERS_ARB = ((int)0x8824),
                DRAW_BUFFER2_ARB = ((int)0x8827),
                DRAW_BUFFER0_ARB = ((int)0x8825),
                DRAW_BUFFER8_ARB = ((int)0x882D),
                DRAW_BUFFER7_ARB = ((int)0x882C),
                DRAW_BUFFER10_ARB = ((int)0x882F),
                DRAW_BUFFER5_ARB = ((int)0x882A),
                DRAW_BUFFER15_ARB = ((int)0x8834),
                DRAW_BUFFER14_ARB = ((int)0x8833),
                DRAW_BUFFER3_ARB = ((int)0x8828),
                DRAW_BUFFER6_ARB = ((int)0x882B),
                DRAW_BUFFER12_ARB = ((int)0x8831),
                DRAW_BUFFER11_ARB = ((int)0x8830),
                DRAW_BUFFER9_ARB = ((int)0x882E),
            }
            
            public enum ARB_texture_rectangle
            {
                TEXTURE_BINDING_RECTANGLE_ARB = ((int)0x84F6),
                TEXTURE_RECTANGLE_ARB = ((int)0x84F5),
                MAX_RECTANGLE_TEXTURE_SIZE_ARB = ((int)0x84F8),
                PROXY_TEXTURE_RECTANGLE_ARB = ((int)0x84F7),
            }
            
            public enum ARB_color_buffer_float
            {
                CLAMP_READ_COLOR_ARB = ((int)0x891C),
                CLAMP_FRAGMENT_COLOR_ARB = ((int)0x891B),
                FIXED_ONLY_ARB = ((int)0x891D),
                CLAMP_VERTEX_COLOR_ARB = ((int)0x891A),
                RGBA_FLOAT_MODE_ARB = ((int)0x8820),
            }
            
            public enum ARB_half_float_pixel
            {
                HALF_FLOAT_ARB = ((int)0x140B),
            }
            
            public enum ARB_texture_float
            {
                TEXTURE_LUMINANCE_TYPE_ARB = ((int)0x8C14),
                TEXTURE_BLUE_TYPE_ARB = ((int)0x8C12),
                LUMINANCE_ALPHA32F_ARB = ((int)0x8819),
                TEXTURE_DEPTH_TYPE_ARB = ((int)0x8C16),
                RGB32F_ARB = ((int)0x8815),
                LUMINANCE16F_ARB = ((int)0x881E),
                TEXTURE_RED_TYPE_ARB = ((int)0x8C10),
                TEXTURE_GREEN_TYPE_ARB = ((int)0x8C11),
                ALPHA16F_ARB = ((int)0x881C),
                TEXTURE_INTENSITY_TYPE_ARB = ((int)0x8C15),
                INTENSITY32F_ARB = ((int)0x8817),
                TEXTURE_ALPHA_TYPE_ARB = ((int)0x8C13),
                INTENSITY16F_ARB = ((int)0x881D),
                LUMINANCE32F_ARB = ((int)0x8818),
                LUMINANCE_ALPHA16F_ARB = ((int)0x881F),
                RGBA16F_ARB = ((int)0x881A),
                RGB16F_ARB = ((int)0x881B),
                ALPHA32F_ARB = ((int)0x8816),
                UNSIGNED_NORMALIZED_ARB = ((int)0x8C17),
                RGBA32F_ARB = ((int)0x8814),
            }
            
            public enum ARB_pixel_buffer_object
            {
                PIXEL_PACK_BUFFER_BINDING_ARB = ((int)0x88ED),
                PIXEL_PACK_BUFFER_ARB = ((int)0x88EB),
                PIXEL_UNPACK_BUFFER_BINDING_ARB = ((int)0x88EF),
                PIXEL_UNPACK_BUFFER_ARB = ((int)0x88EC),
            }
            
            public enum EXT_subtexture
            {
            }
            
            public enum EXT_copy_texture
            {
            }
            
            public enum EXT_misc_attribute
            {
            }
            
            public enum EXT_blend_logic_op
            {
            }
            
            public enum EXT_point_parameters
            {
                DISTANCE_ATTENUATION_EXT = ((int)0x8129),
                POINT_FADE_THRESHOLD_SIZE_EXT = ((int)0x8128),
                POINT_SIZE_MAX_EXT = ((int)0x8127),
                POINT_SIZE_MIN_EXT = ((int)0x8126),
            }
            
            public enum SGIX_tag_sample_buffer
            {
            }
            
            public enum SGIX_polynomial_ffd
            {
                MAX_DEFORMATION_ORDER_SGIX = ((int)0x8197),
                GEOMETRY_DEFORMATION_SGIX = ((int)0x8194),
                TEXTURE_DEFORMATION_SGIX = ((int)0x8195),
                DEFORMATIONS_MASK_SGIX = ((int)0x8196),
            }
            
            public enum SGIX_flush_raster
            {
            }
            
            public enum HP_image_transform
            {
                IMAGE_TRANSFORM_2D_HP = ((int)0x8161),
                IMAGE_MIN_FILTER_HP = ((int)0x815D),
                IMAGE_TRANSLATE_Y_HP = ((int)0x8158),
                IMAGE_TRANSLATE_X_HP = ((int)0x8157),
                AVERAGE_HP = ((int)0x8160),
                POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = ((int)0x8162),
                IMAGE_SCALE_Y_HP = ((int)0x8156),
                IMAGE_SCALE_X_HP = ((int)0x8155),
                CUBIC_HP = ((int)0x815F),
                IMAGE_MAG_FILTER_HP = ((int)0x815C),
                IMAGE_ROTATE_ORIGIN_Y_HP = ((int)0x815B),
                IMAGE_ROTATE_ORIGIN_X_HP = ((int)0x815A),
                PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = ((int)0x8163),
                IMAGE_CUBIC_WEIGHT_HP = ((int)0x815E),
                IMAGE_ROTATE_ANGLE_HP = ((int)0x8159),
            }
            
            public enum INGR_palette_buffer
            {
            }
            
            public enum EXT_color_subtable
            {
            }
            
            public enum PGI_vertex_hints
            {
                MAT_SPECULAR_BIT_PGI = ((int)0x04000000),
                TEXCOORD2_BIT_PGI = ((int)0x20000000),
                VERTEX_CONSISTENT_HINT_PGI = ((int)0x1A22B),
                MAT_SHININESS_BIT_PGI = ((int)0x02000000),
                MAT_AMBIENT_BIT_PGI = ((int)0x00100000),
                MATERIAL_SIDE_HINT_PGI = ((int)0x1A22C),
                TEXCOORD3_BIT_PGI = ((int)0x40000000),
                TEXCOORD4_BIT_PGI = unchecked((int)0x80000000),
                MAT_COLOR_INDEXES_BIT_PGI = ((int)0x01000000),
                MAX_VERTEX_HINT_PGI = ((int)0x1A22D),
                VERTEX23_BIT_PGI = ((int)0x00000004),
                TEXCOORD1_BIT_PGI = ((int)0x10000000),
                INDEX_BIT_PGI = ((int)0x00080000),
                EDGEFLAG_BIT_PGI = ((int)0x00040000),
                COLOR3_BIT_PGI = ((int)0x00010000),
                VERTEX_DATA_HINT_PGI = ((int)0x1A22A),
                MAT_DIFFUSE_BIT_PGI = ((int)0x00400000),
                NORMAL_BIT_PGI = ((int)0x08000000),
                MAT_EMISSION_BIT_PGI = ((int)0x00800000),
                COLOR4_BIT_PGI = ((int)0x00020000),
                VERTEX4_BIT_PGI = ((int)0x00000008),
                MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = ((int)0x00200000),
            }
            
            public enum PGI_misc_hints
            {
                FULL_STIPPLE_HINT_PGI = ((int)0x1A219),
                BACK_NORMALS_HINT_PGI = ((int)0x1A223),
                ALLOW_DRAW_MEM_HINT_PGI = ((int)0x1A211),
                ALLOW_DRAW_WIN_HINT_PGI = ((int)0x1A20F),
                ALWAYS_FAST_HINT_PGI = ((int)0x1A20C),
                NATIVE_GRAPHICS_HANDLE_PGI = ((int)0x1A202),
                CONSERVE_MEMORY_HINT_PGI = ((int)0x1A1FD),
                PREFER_DOUBLEBUFFER_HINT_PGI = ((int)0x1A1F8),
                STRICT_LIGHTING_HINT_PGI = ((int)0x1A217),
                CLIP_FAR_HINT_PGI = ((int)0x1A221),
                CLIP_NEAR_HINT_PGI = ((int)0x1A220),
                STRICT_SCISSOR_HINT_PGI = ((int)0x1A218),
                ALLOW_DRAW_FRG_HINT_PGI = ((int)0x1A210),
                ALWAYS_SOFT_HINT_PGI = ((int)0x1A20D),
                NATIVE_GRAPHICS_BEGIN_HINT_PGI = ((int)0x1A203),
                ALLOW_DRAW_OBJ_HINT_PGI = ((int)0x1A20E),
                NATIVE_GRAPHICS_END_HINT_PGI = ((int)0x1A204),
                RECLAIM_MEMORY_HINT_PGI = ((int)0x1A1FE),
                STRICT_DEPTHFUNC_HINT_PGI = ((int)0x1A216),
                WIDE_LINE_HINT_PGI = ((int)0x1A222),
            }
            
            public enum EXT_paletted_texture
            {
                COLOR_INDEX1_EXT = ((int)0x80E2),
                TEXTURE_INDEX_SIZE_EXT = ((int)0x80ED),
                COLOR_INDEX8_EXT = ((int)0x80E5),
                COLOR_INDEX4_EXT = ((int)0x80E4),
                COLOR_INDEX12_EXT = ((int)0x80E6),
                COLOR_INDEX2_EXT = ((int)0x80E3),
                COLOR_INDEX16_EXT = ((int)0x80E7),
            }
            
            public enum EXT_clip_volume_hint
            {
                CLIP_VOLUME_CLIPPING_HINT_EXT = ((int)0x80F0),
            }
            
            public enum EXT_index_texture
            {
            }
            
            public enum EXT_index_material
            {
                INDEX_MATERIAL_FACE_EXT = ((int)0x81BA),
                INDEX_MATERIAL_EXT = ((int)0x81B8),
                INDEX_MATERIAL_PARAMETER_EXT = ((int)0x81B9),
            }
            
            public enum EXT_index_func
            {
                INDEX_TEST_FUNC_EXT = ((int)0x81B6),
                INDEX_TEST_EXT = ((int)0x81B5),
                INDEX_TEST_REF_EXT = ((int)0x81B7),
            }
            
            public enum EXT_index_array_formats
            {
                IUI_N3F_V2F_EXT = ((int)0x81AF),
                T2F_IUI_V3F_EXT = ((int)0x81B2),
                T2F_IUI_V2F_EXT = ((int)0x81B1),
                IUI_N3F_V3F_EXT = ((int)0x81B0),
                T2F_IUI_N3F_V3F_EXT = ((int)0x81B4),
                T2F_IUI_N3F_V2F_EXT = ((int)0x81B3),
                IUI_V3F_EXT = ((int)0x81AE),
                IUI_V2F_EXT = ((int)0x81AD),
            }
            
            public enum EXT_compiled_vertex_array
            {
                ARRAY_ELEMENT_LOCK_COUNT_EXT = ((int)0x81A9),
                ARRAY_ELEMENT_LOCK_FIRST_EXT = ((int)0x81A8),
            }
            
            public enum EXT_cull_vertex
            {
                CULL_VERTEX_EXT = ((int)0x81AA),
                CULL_VERTEX_OBJECT_POSITION_EXT = ((int)0x81AC),
                CULL_VERTEX_EYE_POSITION_EXT = ((int)0x81AB),
            }
            
            public enum IBM_rasterpos_clip
            {
                RASTER_POSITION_UNCLIPPED_IBM = ((int)0x19262),
            }
            
            public enum HP_texture_lighting
            {
                TEXTURE_LIGHTING_MODE_HP = ((int)0x8167),
                TEXTURE_PRE_SPECULAR_HP = ((int)0x8169),
                TEXTURE_POST_SPECULAR_HP = ((int)0x8168),
            }
            
            public enum EXT_draw_range_elements
            {
                MAX_ELEMENTS_INDICES_EXT = ((int)0x80E9),
                MAX_ELEMENTS_VERTICES_EXT = ((int)0x80E8),
            }
            
            public enum WIN_phong_shading
            {
                PHONG_WIN = ((int)0x80EA),
                PHONG_HINT_WIN = ((int)0x80EB),
            }
            
            public enum WIN_specular_fog
            {
                FOG_SPECULAR_TEXTURE_WIN = ((int)0x80EC),
            }
            
            public enum EXT_light_texture
            {
                ATTENUATION_EXT = ((int)0x834D),
                FRAGMENT_DEPTH_EXT = ((int)EXT_fog_coord.FRAGMENT_DEPTH_EXT),
                TEXTURE_LIGHT_EXT = ((int)0x8350),
                FRAGMENT_NORMAL_EXT = ((int)0x834A),
                FRAGMENT_MATERIAL_EXT = ((int)0x8349),
                TEXTURE_MATERIAL_PARAMETER_EXT = ((int)0x8352),
                TEXTURE_MATERIAL_FACE_EXT = ((int)0x8351),
                SHADOW_ATTENUATION_EXT = ((int)0x834E),
                FRAGMENT_COLOR_EXT = ((int)0x834C),
                TEXTURE_APPLICATION_MODE_EXT = ((int)0x834F),
            }
            
            public enum SGIX_async
            {
                ASYNC_MARKER_SGIX = ((int)0x8329),
            }
            
            public enum INTEL_texture_scissor
            {
            }
            
            public enum HP_occlusion_test
            {
                OCCLUSION_TEST_HP = ((int)0x8165),
                OCCLUSION_TEST_RESULT_HP = ((int)0x8166),
            }
            
            public enum EXT_pixel_transform_color_table
            {
            }
            
            public enum EXT_secondary_color
            {
                SECONDARY_COLOR_ARRAY_SIZE_EXT = ((int)0x845A),
                SECONDARY_COLOR_ARRAY_POINTER_EXT = ((int)0x845D),
                SECONDARY_COLOR_ARRAY_STRIDE_EXT = ((int)0x845C),
                SECONDARY_COLOR_ARRAY_EXT = ((int)0x845E),
                COLOR_SUM_EXT = ((int)0x8458),
                SECONDARY_COLOR_ARRAY_TYPE_EXT = ((int)0x845B),
                CURRENT_SECONDARY_COLOR_EXT = ((int)0x8459),
            }
            
            public enum EXT_texture_perturb_normal
            {
                TEXTURE_NORMAL_EXT = ((int)0x85AF),
                PERTURB_EXT = ((int)0x85AE),
            }
            
            public enum EXT_multi_draw_arrays
            {
            }
            
            public enum EXT_fog_coord
            {
                FOG_COORDINATE_ARRAY_POINTER_EXT = ((int)0x8456),
                FOG_COORDINATE_ARRAY_STRIDE_EXT = ((int)0x8455),
                FOG_COORDINATE_SOURCE_EXT = ((int)0x8450),
                FOG_COORDINATE_EXT = ((int)0x8451),
                FOG_COORDINATE_ARRAY_TYPE_EXT = ((int)0x8454),
                FOG_COORDINATE_ARRAY_EXT = ((int)0x8457),
                CURRENT_FOG_COORDINATE_EXT = ((int)0x8453),
                FRAGMENT_DEPTH_EXT = ((int)0x8452),
            }
            
            public enum REND_screen_coordinates
            {
                SCREEN_COORDINATES_REND = ((int)0x8490),
                INVERTED_SCREEN_W_REND = ((int)0x8491),
            }
            
            public enum EXT_coordinate_frame
            {
                BINORMAL_ARRAY_STRIDE_EXT = ((int)0x8441),
                BINORMAL_ARRAY_TYPE_EXT = ((int)0x8440),
                MAP1_TANGENT_EXT = ((int)0x8444),
                TANGENT_ARRAY_POINTER_EXT = ((int)0x8442),
                CURRENT_TANGENT_EXT = ((int)0x843B),
                MAP1_BINORMAL_EXT = ((int)0x8446),
                TANGENT_ARRAY_TYPE_EXT = ((int)0x843E),
                CURRENT_BINORMAL_EXT = ((int)0x843C),
                MAP2_TANGENT_EXT = ((int)0x8445),
                MAP2_BINORMAL_EXT = ((int)0x8447),
                BINORMAL_ARRAY_EXT = ((int)0x843A),
                TANGENT_ARRAY_STRIDE_EXT = ((int)0x843F),
                TANGENT_ARRAY_EXT = ((int)0x8439),
                BINORMAL_ARRAY_POINTER_EXT = ((int)0x8443),
            }
            
            public enum EXT_texture_env_combine
            {
                SOURCE0_RGB_EXT = ((int)0x8580),
                COMBINE_RGB_EXT = ((int)0x8571),
                SOURCE1_RGB_EXT = ((int)0x8581),
                CONSTANT_EXT = ((int)0x8576),
                SOURCE1_ALPHA_EXT = ((int)0x8589),
                SOURCE2_ALPHA_EXT = ((int)0x858A),
                SOURCE2_RGB_EXT = ((int)0x8582),
                OPERAND0_RGB_EXT = ((int)0x8590),
                OPERAND0_ALPHA_EXT = ((int)0x8598),
                RGB_SCALE_EXT = ((int)0x8573),
                OPERAND1_RGB_EXT = ((int)0x8591),
                SOURCE0_ALPHA_EXT = ((int)0x8588),
                OPERAND2_ALPHA_EXT = ((int)0x859A),
                INTERPOLATE_EXT = ((int)0x8575),
                COMBINE_EXT = ((int)0x8570),
                OPERAND1_ALPHA_EXT = ((int)0x8599),
                OPERAND2_RGB_EXT = ((int)0x8592),
                PREVIOUS_EXT = ((int)0x8578),
                ADD_SIGNED_EXT = ((int)0x8574),
                PRIMARY_COLOR_EXT = ((int)0x8577),
                COMBINE_ALPHA_EXT = ((int)0x8572),
            }
            
            public enum APPLE_specular_vector
            {
                LIGHT_MODEL_SPECULAR_VECTOR_APPLE = ((int)0x85B0),
            }
            
            public enum APPLE_transform_hint
            {
                TRANSFORM_HINT_APPLE = ((int)0x85B1),
            }
            
            public enum SGIX_fog_scale
            {
                FOG_SCALE_SGIX = ((int)0x81FC),
                FOG_SCALE_VALUE_SGIX = ((int)0x81FD),
            }
            
            public enum SUNX_constant_data
            {
                TEXTURE_CONSTANT_DATA_SUNX = ((int)0x81D6),
                UNPACK_CONSTANT_DATA_SUNX = ((int)0x81D5),
            }
            
            public enum SUN_global_alpha
            {
                GLOBAL_ALPHA_SUN = ((int)0x81D9),
                GLOBAL_ALPHA_FACTOR_SUN = ((int)0x81DA),
            }
            
            public enum SUN_triangle_list
            {
                R1UI_N3F_V3F_SUN = ((int)0x85C7),
                REPLACE_MIDDLE_SUN = ((int)0x0002),
                REPLACE_OLDEST_SUN = ((int)0x0003),
                R1UI_V3F_SUN = ((int)0x85C4),
                REPLACEMENT_CODE_SUN = ((int)0x81D8),
                R1UI_T2F_N3F_V3F_SUN = ((int)0x85CA),
                RESTART_SUN = ((int)0x0001),
                REPLACEMENT_CODE_ARRAY_STRIDE_SUN = ((int)0x85C2),
                R1UI_T2F_C4F_N3F_V3F_SUN = ((int)0x85CB),
                R1UI_C4F_N3F_V3F_SUN = ((int)0x85C8),
                R1UI_T2F_V3F_SUN = ((int)0x85C9),
                TRIANGLE_LIST_SUN = ((int)0x81D7),
                REPLACEMENT_CODE_ARRAY_TYPE_SUN = ((int)0x85C1),
                R1UI_C3F_V3F_SUN = ((int)0x85C6),
                R1UI_C4UB_V3F_SUN = ((int)0x85C5),
                REPLACEMENT_CODE_ARRAY_SUN = ((int)0x85C0),
                REPLACEMENT_CODE_ARRAY_POINTER_SUN = ((int)0x85C3),
            }
            
            public enum SUN_vertex
            {
            }
            
            public enum EXT_blend_func_separate
            {
                BLEND_SRC_ALPHA_EXT = ((int)0x80CB),
                BLEND_DST_RGB_EXT = ((int)0x80C8),
                BLEND_DST_ALPHA_EXT = ((int)0x80CA),
                BLEND_SRC_RGB_EXT = ((int)0x80C9),
            }
            
            public enum INGR_color_clamp
            {
                BLUE_MIN_CLAMP_INGR = ((int)0x8562),
                RED_MAX_CLAMP_INGR = ((int)0x8564),
                ALPHA_MAX_CLAMP_INGR = ((int)0x8567),
                ALPHA_MIN_CLAMP_INGR = ((int)0x8563),
                GREEN_MAX_CLAMP_INGR = ((int)0x8565),
                BLUE_MAX_CLAMP_INGR = ((int)0x8566),
                GREEN_MIN_CLAMP_INGR = ((int)0x8561),
                RED_MIN_CLAMP_INGR = ((int)0x8560),
            }
            
            public enum INGR_interlace_read
            {
                INTERLACE_READ_INGR = ((int)0x8568),
            }
            
            public enum EXT_stencil_wrap
            {
                DECR_WRAP_EXT = ((int)0x8508),
                INCR_WRAP_EXT = ((int)0x8507),
            }
            
            public enum EXT_422_pixels
            {
                GL_422_AVERAGE_EXT = ((int)0x80CE),
                GL_422_REV_EXT = ((int)0x80CD),
                GL_422_EXT = ((int)0x80CC),
                GL_422_REV_AVERAGE_EXT = ((int)0x80CF),
            }
            
            public enum NV_texgen_reflection
            {
                NORMAL_MAP_NV = ((int)0x8511),
                REFLECTION_MAP_NV = ((int)0x8512),
            }
            
            public enum EXT_texture_cube_map
            {
                TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = ((int)0x8516),
                TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = ((int)0x8518),
                TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = ((int)0x8517),
                TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = ((int)0x851A),
                TEXTURE_BINDING_CUBE_MAP_EXT = ((int)0x8514),
                REFLECTION_MAP_EXT = ((int)0x8512),
                TEXTURE_CUBE_MAP_EXT = ((int)0x8513),
                MAX_CUBE_MAP_TEXTURE_SIZE_EXT = ((int)0x851C),
                TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = ((int)0x8519),
                PROXY_TEXTURE_CUBE_MAP_EXT = ((int)0x851B),
                TEXTURE_CUBE_MAP_POSITIVE_X_EXT = ((int)0x8515),
                NORMAL_MAP_EXT = ((int)0x8511),
            }
            
            public enum SUN_convolution_border_modes
            {
                WRAP_BORDER_SUN = ((int)0x81D4),
            }
            
            public enum EXT_texture_env_add
            {
            }
            
            public enum EXT_texture_lod_bias
            {
                MAX_TEXTURE_LOD_BIAS_EXT = ((int)0x84FD),
                TEXTURE_FILTER_CONTROL_EXT = ((int)0x8500),
                TEXTURE_LOD_BIAS_EXT = ((int)0x8501),
            }
            
            public enum EXT_texture_filter_anisotropic
            {
                TEXTURE_MAX_ANISOTROPY_EXT = ((int)0x84FE),
                MAX_TEXTURE_MAX_ANISOTROPY_EXT = ((int)0x84FF),
            }
            
            public enum EXT_vertex_weighting
            {
                CURRENT_VERTEX_WEIGHT_EXT = ((int)0x850B),
                MODELVIEW0_MATRIX_EXT = ((int)All.MODELVIEW_MATRIX),
                VERTEX_WEIGHT_ARRAY_EXT = ((int)0x850C),
                MODELVIEW1_MATRIX_EXT = ((int)0x8506),
                VERTEX_WEIGHT_ARRAY_TYPE_EXT = ((int)0x850E),
                VERTEX_WEIGHT_ARRAY_STRIDE_EXT = ((int)0x850F),
                MODELVIEW1_EXT = ((int)0x850A),
                VERTEX_WEIGHTING_EXT = ((int)0x8509),
                MODELVIEW0_EXT = ((int)All.MODELVIEW),
                MODELVIEW1_STACK_DEPTH_EXT = ((int)0x8502),
                VERTEX_WEIGHT_ARRAY_POINTER_EXT = ((int)0x8510),
                VERTEX_WEIGHT_ARRAY_SIZE_EXT = ((int)0x850D),
                MODELVIEW0_STACK_DEPTH_EXT = ((int)All.MODELVIEW_STACK_DEPTH),
            }
            
            public enum NV_light_max_exponent
            {
                MAX_SPOT_EXPONENT_NV = ((int)0x8505),
                MAX_SHININESS_NV = ((int)0x8504),
            }
            
            public enum NV_vertex_array_range
            {
                MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = ((int)0x8520),
                VERTEX_ARRAY_RANGE_VALID_NV = ((int)0x851F),
                VERTEX_ARRAY_RANGE_LENGTH_NV = ((int)0x851E),
                VERTEX_ARRAY_RANGE_POINTER_NV = ((int)0x8521),
                VERTEX_ARRAY_RANGE_NV = ((int)0x851D),
            }
            
            public enum NV_register_combiners
            {
                COMBINER_MAPPING_NV = ((int)0x8543),
                SPARE0_PLUS_SECONDARY_COLOR_NV = ((int)0x8532),
                COMBINER_CD_OUTPUT_NV = ((int)0x854B),
                ZERO = ((int)BlendingFactorDest.ZERO),
                COMBINER_INPUT_NV = ((int)0x8542),
                COMBINER5_NV = ((int)0x8555),
                SIGNED_NEGATE_NV = ((int)0x853D),
                COMBINER_SUM_OUTPUT_NV = ((int)0x854C),
                SCALE_BY_TWO_NV = ((int)0x853E),
                REGISTER_COMBINERS_NV = ((int)0x8522),
                COMBINER6_NV = ((int)0x8556),
                SCALE_BY_FOUR_NV = ((int)0x853F),
                E_TIMES_F_NV = ((int)0x8531),
                PRIMARY_COLOR_NV = ((int)0x852C),
                COMBINER2_NV = ((int)0x8552),
                COMBINER3_NV = ((int)0x8553),
                COMBINER0_NV = ((int)0x8550),
                COMBINER1_NV = ((int)0x8551),
                VARIABLE_F_NV = ((int)0x8528),
                FOG = ((int)GetPName.FOG),
                SIGNED_IDENTITY_NV = ((int)0x853C),
                SECONDARY_COLOR_NV = ((int)0x852D),
                SCALE_BY_ONE_HALF_NV = ((int)0x8540),
                COMBINER_AB_OUTPUT_NV = ((int)0x854A),
                NONE = ((int)DrawBufferMode.NONE),
                CONSTANT_COLOR0_NV = ((int)0x852A),
                COMBINER_CD_DOT_PRODUCT_NV = ((int)0x8546),
                TEXTURE0_ARB = ((int)ARB_multitexture.TEXTURE0_ARB),
                UNSIGNED_INVERT_NV = ((int)0x8537),
                NUM_GENERAL_COMBINERS_NV = ((int)0x854E),
                COMBINER_BIAS_NV = ((int)0x8549),
                VARIABLE_B_NV = ((int)0x8524),
                EXPAND_NORMAL_NV = ((int)0x8538),
                VARIABLE_C_NV = ((int)0x8525),
                HALF_BIAS_NORMAL_NV = ((int)0x853A),
                COMBINER_COMPONENT_USAGE_NV = ((int)0x8544),
                COMBINER_SCALE_NV = ((int)0x8548),
                VARIABLE_A_NV = ((int)0x8523),
                HALF_BIAS_NEGATE_NV = ((int)0x853B),
                DISCARD_NV = ((int)0x8530),
                COMBINER_AB_DOT_PRODUCT_NV = ((int)0x8545),
                UNSIGNED_IDENTITY_NV = ((int)0x8536),
                EXPAND_NEGATE_NV = ((int)0x8539),
                VARIABLE_D_NV = ((int)0x8526),
                BIAS_BY_NEGATIVE_ONE_HALF_NV = ((int)0x8541),
                VARIABLE_E_NV = ((int)0x8527),
                COMBINER_MUX_SUM_NV = ((int)0x8547),
                MAX_GENERAL_COMBINERS_NV = ((int)0x854D),
                COMBINER7_NV = ((int)0x8557),
                COMBINER4_NV = ((int)0x8554),
                COLOR_SUM_CLAMP_NV = ((int)0x854F),
                TEXTURE1_ARB = ((int)ARB_multitexture.TEXTURE1_ARB),
                SPARE1_NV = ((int)0x852F),
                CONSTANT_COLOR1_NV = ((int)0x852B),
                SPARE0_NV = ((int)0x852E),
                VARIABLE_G_NV = ((int)0x8529),
            }
            
            public enum NV_fog_distance
            {
                EYE_PLANE = ((int)TextureGenParameter.EYE_PLANE),
                FOG_DISTANCE_MODE_NV = ((int)0x855A),
                EYE_RADIAL_NV = ((int)0x855B),
                EYE_PLANE_ABSOLUTE_NV = ((int)0x855C),
            }
            
            public enum NV_texgen_emboss
            {
                EMBOSS_CONSTANT_NV = ((int)0x855E),
                EMBOSS_LIGHT_NV = ((int)0x855D),
                EMBOSS_MAP_NV = ((int)0x855F),
            }
            
            public enum NV_blend_square
            {
            }
            
            public enum NV_texture_env_combine4
            {
                COMBINE4_NV = ((int)0x8503),
                SOURCE3_RGB_NV = ((int)0x8583),
                SOURCE3_ALPHA_NV = ((int)0x858B),
                OPERAND3_RGB_NV = ((int)0x8593),
                OPERAND3_ALPHA_NV = ((int)0x859B),
            }
            
            public enum MESA_resize_buffers
            {
            }
            
            public enum MESA_window_pos
            {
            }
            
            public enum IBM_cull_vertex
            {
                CULL_VERTEX_IBM = ((int)103050),
            }
            
            public enum IBM_multimode_draw_arrays
            {
            }
            
            public enum IBM_vertex_array_lists
            {
                INDEX_ARRAY_LIST_IBM = ((int)103073),
                FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = ((int)103086),
                SECONDARY_COLOR_ARRAY_LIST_IBM = ((int)103077),
                NORMAL_ARRAY_LIST_IBM = ((int)103071),
                COLOR_ARRAY_LIST_STRIDE_IBM = ((int)103082),
                TEXTURE_COORD_ARRAY_LIST_IBM = ((int)103074),
                EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = ((int)103085),
                COLOR_ARRAY_LIST_IBM = ((int)103072),
                INDEX_ARRAY_LIST_STRIDE_IBM = ((int)103083),
                EDGE_FLAG_ARRAY_LIST_IBM = ((int)103075),
                SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = ((int)103087),
                TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = ((int)103084),
                FOG_COORDINATE_ARRAY_LIST_IBM = ((int)103076),
                VERTEX_ARRAY_LIST_IBM = ((int)103070),
                VERTEX_ARRAY_LIST_STRIDE_IBM = ((int)103080),
                NORMAL_ARRAY_LIST_STRIDE_IBM = ((int)103081),
            }
            
            public enum SGIX_ycrcb_subsample
            {
                PIXEL_SUBSAMPLE_2424_SGIX = ((int)0x85A3),
                PACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A0),
                PIXEL_SUBSAMPLE_4444_SGIX = ((int)0x85A2),
                PIXEL_SUBSAMPLE_4242_SGIX = ((int)0x85A4),
                UNPACK_SUBSAMPLE_RATE_SGIX = ((int)0x85A1),
            }
            
            public enum SGIX_ycrcba
            {
                YCRCBA_SGIX = ((int)0x8319),
                YCRCB_SGIX = ((int)0x8318),
            }
            
            public enum SGI_depth_pass_instrument
            {
                DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = ((int)0x8311),
                DEPTH_PASS_INSTRUMENT_SGIX = ((int)0x8310),
                DEPTH_PASS_INSTRUMENT_MAX_SGIX = ((int)0x8312),
            }
            
            public enum GL_3DFX_texture_compression_FXT1
            {
                COMPRESSED_RGBA_FXT1_3DFX = ((int)0x86B1),
                COMPRESSED_RGB_FXT1_3DFX = ((int)0x86B0),
            }
            
            public enum GL_3DFX_multisample
            {
                SAMPLE_BUFFERS_3DFX = ((int)0x86B3),
                MULTISAMPLE_BIT_3DFX = ((int)0x20000000),
                MULTISAMPLE_3DFX = ((int)0x86B2),
                SAMPLES_3DFX = ((int)0x86B4),
            }
            
            public enum GL_3DFX_tbuffer
            {
            }
            
            public enum EXT_multisample
            {
                SAMPLE_MASK_EXT = ((int)0x80A0),
                MULTISAMPLE_EXT = ((int)0x809D),
                GL_4PASS_3_EXT = ((int)0x80A7),
                SAMPLE_PATTERN_EXT = ((int)0x80AC),
                SAMPLE_ALPHA_TO_MASK_EXT = ((int)0x809E),
                SAMPLES_EXT = ((int)0x80A9),
                SAMPLE_MASK_INVERT_EXT = ((int)0x80AB),
                GL_4PASS_1_EXT = ((int)0x80A5),
                MULTISAMPLE_BIT_EXT = ((int)0x20000000),
                GL_4PASS_2_EXT = ((int)0x80A6),
                SAMPLE_MASK_VALUE_EXT = ((int)0x80AA),
                GL_2PASS_0_EXT = ((int)0x80A2),
                SAMPLE_BUFFERS_EXT = ((int)0x80A8),
                GL_4PASS_0_EXT = ((int)0x80A4),
                GL_2PASS_1_EXT = ((int)0x80A3),
                GL_1PASS_EXT = ((int)0x80A1),
                SAMPLE_ALPHA_TO_ONE_EXT = ((int)0x809F),
            }
            
            public enum EXT_texture_env_dot3
            {
                DOT3_RGB_EXT = ((int)0x8740),
                DOT3_RGBA_EXT = ((int)0x8741),
            }
            
            public enum ATI_texture_mirror_once
            {
                MIRROR_CLAMP_ATI = ((int)0x8742),
                MIRROR_CLAMP_TO_EDGE_ATI = ((int)0x8743),
            }
            
            public enum NV_fence
            {
                ALL_COMPLETED_NV = ((int)0x84F2),
                FENCE_CONDITION_NV = ((int)0x84F4),
                FENCE_STATUS_NV = ((int)0x84F3),
            }
            
            public enum IBM_texture_mirrored_repeat
            {
                MIRRORED_REPEAT_IBM = ((int)0x8370),
            }
            
            public enum NV_evaluators
            {
                EVAL_VERTEX_ATTRIB4_NV = ((int)0x86CA),
                EVAL_VERTEX_ATTRIB5_NV = ((int)0x86CB),
                EVAL_VERTEX_ATTRIB15_NV = ((int)0x86D5),
                MAX_MAP_TESSELLATION_NV = ((int)0x86D6),
                EVAL_VERTEX_ATTRIB3_NV = ((int)0x86C9),
                EVAL_VERTEX_ATTRIB12_NV = ((int)0x86D2),
                EVAL_VERTEX_ATTRIB14_NV = ((int)0x86D4),
                EVAL_VERTEX_ATTRIB13_NV = ((int)0x86D3),
                MAX_RATIONAL_EVAL_ORDER_NV = ((int)0x86D7),
                MAP_TESSELLATION_NV = ((int)0x86C2),
                MAP_ATTRIB_U_ORDER_NV = ((int)0x86C3),
                EVAL_VERTEX_ATTRIB8_NV = ((int)0x86CE),
                EVAL_VERTEX_ATTRIB11_NV = ((int)0x86D1),
                EVAL_VERTEX_ATTRIB9_NV = ((int)0x86CF),
                EVAL_VERTEX_ATTRIB7_NV = ((int)0x86CD),
                EVAL_VERTEX_ATTRIB10_NV = ((int)0x86D0),
                EVAL_VERTEX_ATTRIB2_NV = ((int)0x86C8),
                EVAL_VERTEX_ATTRIB0_NV = ((int)0x86C6),
                EVAL_2D_NV = ((int)0x86C0),
                EVAL_VERTEX_ATTRIB1_NV = ((int)0x86C7),
                MAP_ATTRIB_V_ORDER_NV = ((int)0x86C4),
                EVAL_TRIANGULAR_2D_NV = ((int)0x86C1),
                EVAL_FRACTIONAL_TESSELLATION_NV = ((int)0x86C5),
                EVAL_VERTEX_ATTRIB6_NV = ((int)0x86CC),
            }
            
            public enum NV_packed_depth_stencil
            {
                DEPTH_STENCIL_NV = ((int)0x84F9),
                UNSIGNED_INT_24_8_NV = ((int)0x84FA),
            }
            
            public enum NV_register_combiners2
            {
                PER_STAGE_CONSTANTS_NV = ((int)0x8535),
            }
            
            public enum NV_texture_compression_vtc
            {
            }
            
            public enum NV_texture_rectangle
            {
                TEXTURE_BINDING_RECTANGLE_NV = ((int)0x84F6),
                PROXY_TEXTURE_RECTANGLE_NV = ((int)0x84F7),
                MAX_RECTANGLE_TEXTURE_SIZE_NV = ((int)0x84F8),
                TEXTURE_RECTANGLE_NV = ((int)0x84F5),
            }
            
            public enum NV_texture_shader
            {
                DEPENDENT_GB_TEXTURE_2D_NV = ((int)0x86EA),
                DS_SCALE_NV = ((int)0x8710),
                DSDT_MAG_INTENSITY_NV = ((int)0x86DC),
                SIGNED_HILO_NV = ((int)0x86F9),
                DEPENDENT_AR_TEXTURE_2D_NV = ((int)0x86E9),
                OFFSET_TEXTURE_SCALE_NV = ((int)0x86E2),
                MAGNITUDE_SCALE_NV = ((int)0x8712),
                CULL_FRAGMENT_NV = ((int)0x86E7),
                OFFSET_TEXTURE_2D_SCALE_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_SCALE_NV),
                TEXTURE_DT_SIZE_NV = ((int)0x871E),
                OFFSET_TEXTURE_2D_NV = ((int)0x86E8),
                UNSIGNED_INT_S8_S8_8_8_NV = ((int)0x86DA),
                VIBRANCE_SCALE_NV = ((int)0x8713),
                PREVIOUS_TEXTURE_INPUT_NV = ((int)0x86E4),
                SIGNED_LUMINANCE_NV = ((int)0x8701),
                DS_BIAS_NV = ((int)0x8716),
                SIGNED_RGB8_NV = ((int)0x86FF),
                DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = ((int)0x86F1),
                DSDT8_MAG8_INTENSITY8_NV = ((int)0x870B),
                VIBRANCE_BIAS_NV = ((int)0x8719),
                SIGNED_ALPHA8_NV = ((int)0x8706),
                LO_BIAS_NV = ((int)0x8715),
                UNSIGNED_INT_8_8_S8_S8_REV_NV = ((int)0x86DB),
                DOT_PRODUCT_NV = ((int)0x86EC),
                DOT_PRODUCT_TEXTURE_2D_NV = ((int)0x86EE),
                SIGNED_RGB8_UNSIGNED_ALPHA8_NV = ((int)0x870D),
                DOT_PRODUCT_TEXTURE_RECTANGLE_NV = ((int)0x864E),
                DT_BIAS_NV = ((int)0x8717),
                SIGNED_LUMINANCE_ALPHA_NV = ((int)0x8703),
                OFFSET_TEXTURE_BIAS_NV = ((int)0x86E3),
                OFFSET_TEXTURE_2D_MATRIX_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_MATRIX_NV),
                HILO16_NV = ((int)0x86F8),
                TEXTURE_BORDER_VALUES_NV = ((int)0x871A),
                SIGNED_ALPHA_NV = ((int)0x8705),
                OFFSET_TEXTURE_MATRIX_NV = ((int)0x86E1),
                TEXTURE_SHADER_NV = ((int)0x86DE),
                OFFSET_TEXTURE_RECTANGLE_NV = ((int)0x864C),
                HI_BIAS_NV = ((int)0x8714),
                DSDT8_NV = ((int)0x8709),
                SHADER_CONSISTENT_NV = ((int)0x86DD),
                DSDT_MAG_NV = ((int)0x86F6),
                TEXTURE_LO_SIZE_NV = ((int)0x871C),
                DOT_PRODUCT_REFLECT_CUBE_MAP_NV = ((int)0x86F2),
                DSDT8_MAG8_NV = ((int)0x870A),
                SIGNED_RGBA8_NV = ((int)0x86FC),
                DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = ((int)0x86F0),
                CULL_MODES_NV = ((int)0x86E0),
                SIGNED_RGB_NV = ((int)0x86FE),
                OFFSET_TEXTURE_RECTANGLE_SCALE_NV = ((int)0x864D),
                DOT_PRODUCT_DEPTH_REPLACE_NV = ((int)0x86ED),
                CONST_EYE_NV = ((int)0x86E5),
                SIGNED_RGBA_NV = ((int)0x86FB),
                RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = ((int)0x86D9),
                SIGNED_INTENSITY8_NV = ((int)0x8708),
                SHADER_OPERATION_NV = ((int)0x86DF),
                PASS_THROUGH_NV = ((int)0x86E6),
                DSDT_NV = ((int)0x86F5),
                SIGNED_RGB_UNSIGNED_ALPHA_NV = ((int)0x870C),
                OFFSET_TEXTURE_2D_BIAS_NV = ((int)NV_texture_shader.OFFSET_TEXTURE_BIAS_NV),
                TEXTURE_MAG_SIZE_NV = ((int)0x871F),
                SIGNED_LUMINANCE8_ALPHA8_NV = ((int)0x8704),
                SIGNED_HILO16_NV = ((int)0x86FA),
                SIGNED_INTENSITY_NV = ((int)0x8707),
                HILO_NV = ((int)0x86F4),
                DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = ((int)0x86F3),
                LO_SCALE_NV = ((int)0x870F),
                MAGNITUDE_BIAS_NV = ((int)0x8718),
                HI_SCALE_NV = ((int)0x870E),
                TEXTURE_DS_SIZE_NV = ((int)0x871D),
                DT_SCALE_NV = ((int)0x8711),
                SIGNED_LUMINANCE8_NV = ((int)0x8702),
                DSDT_MAG_VIB_NV = ((int)0x86F7),
                TEXTURE_HI_SIZE_NV = ((int)0x871B),
            }
            
            public enum NV_texture_shader2
            {
                DOT_PRODUCT_TEXTURE_3D_NV = ((int)0x86EF),
            }
            
            public enum NV_vertex_array_range2
            {
                VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = ((int)0x8533),
            }
            
            public enum NV_vertex_program
            {
                VERTEX_PROGRAM_TWO_SIDE_NV = ((int)0x8643),
                MAP1_VERTEX_ATTRIB12_4_NV = ((int)0x866C),
                ATTRIB_ARRAY_SIZE_NV = ((int)0x8623),
                MATRIX7_NV = ((int)0x8637),
                MAP2_VERTEX_ATTRIB14_4_NV = ((int)0x867E),
                VERTEX_ATTRIB_ARRAY2_NV = ((int)0x8652),
                MAP2_VERTEX_ATTRIB15_4_NV = ((int)0x867F),
                VERTEX_ATTRIB_ARRAY9_NV = ((int)0x8659),
                MAP2_VERTEX_ATTRIB12_4_NV = ((int)0x867C),
                MAP2_VERTEX_ATTRIB3_4_NV = ((int)0x8673),
                VERTEX_PROGRAM_POINT_SIZE_NV = ((int)0x8642),
                MODELVIEW_PROJECTION_NV = ((int)0x8629),
                MAP2_VERTEX_ATTRIB2_4_NV = ((int)0x8672),
                MAP2_VERTEX_ATTRIB11_4_NV = ((int)0x867B),
                VERTEX_ATTRIB_ARRAY8_NV = ((int)0x8658),
                CURRENT_MATRIX_NV = ((int)0x8641),
                VERTEX_PROGRAM_BINDING_NV = ((int)0x864A),
                VERTEX_ATTRIB_ARRAY0_NV = ((int)0x8650),
                MAP2_VERTEX_ATTRIB1_4_NV = ((int)0x8671),
                VERTEX_ATTRIB_ARRAY7_NV = ((int)0x8657),
                PROGRAM_PARAMETER_NV = ((int)0x8644),
                VERTEX_PROGRAM_NV = ((int)0x8620),
                ATTRIB_ARRAY_POINTER_NV = ((int)0x8645),
                PROGRAM_STRING_NV = ((int)0x8628),
                MAP2_VERTEX_ATTRIB0_4_NV = ((int)0x8670),
                VERTEX_ATTRIB_ARRAY4_NV = ((int)0x8654),
                MAP1_VERTEX_ATTRIB7_4_NV = ((int)0x8667),
                PROGRAM_TARGET_NV = ((int)0x8646),
                MAP1_VERTEX_ATTRIB11_4_NV = ((int)0x866B),
                MAP2_VERTEX_ATTRIB7_4_NV = ((int)0x8677),
                VERTEX_ATTRIB_ARRAY6_NV = ((int)0x8656),
                MAP1_VERTEX_ATTRIB8_4_NV = ((int)0x8668),
                VERTEX_ATTRIB_ARRAY5_NV = ((int)0x8655),
                VERTEX_STATE_PROGRAM_NV = ((int)0x8621),
                MAP1_VERTEX_ATTRIB9_4_NV = ((int)0x8669),
                IDENTITY_NV = ((int)0x862A),
                MAP2_VERTEX_ATTRIB6_4_NV = ((int)0x8676),
                MATRIX4_NV = ((int)0x8634),
                PROGRAM_RESIDENT_NV = ((int)0x8647),
                MAP1_VERTEX_ATTRIB5_4_NV = ((int)0x8665),
                MAP2_VERTEX_ATTRIB4_4_NV = ((int)0x8674),
                MAP1_VERTEX_ATTRIB6_4_NV = ((int)0x8666),
                MAP1_VERTEX_ATTRIB13_4_NV = ((int)0x866D),
                MAP2_VERTEX_ATTRIB5_4_NV = ((int)0x8675),
                MAP1_VERTEX_ATTRIB10_4_NV = ((int)0x866A),
                MAP1_VERTEX_ATTRIB1_4_NV = ((int)0x8661),
                MAP2_VERTEX_ATTRIB13_4_NV = ((int)0x867D),
                VERTEX_ATTRIB_ARRAY3_NV = ((int)0x8653),
                ATTRIB_ARRAY_TYPE_NV = ((int)0x8625),
                MAP1_VERTEX_ATTRIB14_4_NV = ((int)0x866E),
                MAP1_VERTEX_ATTRIB2_4_NV = ((int)0x8662),
                TRACK_MATRIX_TRANSFORM_NV = ((int)0x8649),
                MATRIX0_NV = ((int)0x8630),
                MAP1_VERTEX_ATTRIB3_4_NV = ((int)0x8663),
                MAP2_VERTEX_ATTRIB10_4_NV = ((int)0x867A),
                INVERSE_NV = ((int)0x862B),
                VERTEX_ATTRIB_ARRAY14_NV = ((int)0x865E),
                VERTEX_ATTRIB_ARRAY15_NV = ((int)0x865F),
                VERTEX_ATTRIB_ARRAY12_NV = ((int)0x865C),
                MAX_TRACK_MATRICES_NV = ((int)0x862F),
                MAP1_VERTEX_ATTRIB4_4_NV = ((int)0x8664),
                VERTEX_ATTRIB_ARRAY11_NV = ((int)0x865B),
                VERTEX_ATTRIB_ARRAY13_NV = ((int)0x865D),
                VERTEX_ATTRIB_ARRAY10_NV = ((int)0x865A),
                MATRIX6_NV = ((int)0x8636),
                PROGRAM_LENGTH_NV = ((int)0x8627),
                MAP1_VERTEX_ATTRIB0_4_NV = ((int)0x8660),
                VERTEX_ATTRIB_ARRAY1_NV = ((int)0x8651),
                MAP1_VERTEX_ATTRIB15_4_NV = ((int)0x866F),
                MAP2_VERTEX_ATTRIB9_4_NV = ((int)0x8679),
                INVERSE_TRANSPOSE_NV = ((int)0x862D),
                PROGRAM_ERROR_POSITION_NV = ((int)0x864B),
                TRACK_MATRIX_NV = ((int)0x8648),
                MAP2_VERTEX_ATTRIB8_4_NV = ((int)0x8678),
                CURRENT_MATRIX_STACK_DEPTH_NV = ((int)0x8640),
                MATRIX1_NV = ((int)0x8631),
                ATTRIB_ARRAY_STRIDE_NV = ((int)0x8624),
                MATRIX3_NV = ((int)0x8633),
                MATRIX5_NV = ((int)0x8635),
                TRANSPOSE_NV = ((int)0x862C),
                MATRIX2_NV = ((int)0x8632),
                CURRENT_ATTRIB_NV = ((int)0x8626),
                MAX_TRACK_MATRIX_STACK_DEPTH_NV = ((int)0x862E),
            }
            
            public enum SGIX_scalebias_hint
            {
                SCALEBIAS_HINT_SGIX = ((int)0x8322),
            }
            
            public enum OML_interlace
            {
                INTERLACE_READ_OML = ((int)0x8981),
                INTERLACE_OML = ((int)0x8980),
            }
            
            public enum OML_subsample
            {
                FORMAT_SUBSAMPLE_24_24_OML = ((int)0x8982),
                FORMAT_SUBSAMPLE_244_244_OML = ((int)0x8983),
            }
            
            public enum OML_resample
            {
                PACK_RESAMPLE_OML = ((int)0x8984),
                RESAMPLE_AVERAGE_OML = ((int)0x8988),
                RESAMPLE_REPLICATE_OML = ((int)0x8986),
                RESAMPLE_DECIMATE_OML = ((int)0x8989),
                UNPACK_RESAMPLE_OML = ((int)0x8985),
                RESAMPLE_ZERO_FILL_OML = ((int)0x8987),
            }
            
            public enum NV_copy_depth_to_color
            {
                DEPTH_STENCIL_TO_BGRA_NV = ((int)0x886F),
                DEPTH_STENCIL_TO_RGBA_NV = ((int)0x886E),
            }
            
            public enum ATI_envmap_bumpmap
            {
                BUMP_TARGET_ATI = ((int)0x877C),
                BUMP_ROT_MATRIX_ATI = ((int)0x8775),
                DU8DV8_ATI = ((int)0x877A),
                BUMP_NUM_TEX_UNITS_ATI = ((int)0x8777),
                BUMP_ROT_MATRIX_SIZE_ATI = ((int)0x8776),
                BUMP_ENVMAP_ATI = ((int)0x877B),
                BUMP_TEX_UNITS_ATI = ((int)0x8778),
                DUDV_ATI = ((int)0x8779),
            }
            
            public enum ATI_fragment_shader
            {
                REG_16_ATI = ((int)0x8931),
                CON_12_ATI = ((int)0x894D),
                REG_14_ATI = ((int)0x892F),
                CON_14_ATI = ((int)0x894F),
                HALF_BIT_ATI = ((int)0x00000008),
                NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = ((int)0x8973),
                REG_25_ATI = ((int)0x893A),
                REG_10_ATI = ((int)0x892B),
                CON_6_ATI = ((int)0x8947),
                REG_15_ATI = ((int)0x8930),
                REG_2_ATI = ((int)0x8923),
                NUM_FRAGMENT_CONSTANTS_ATI = ((int)0x896F),
                QUARTER_BIT_ATI = ((int)0x00000010),
                REG_19_ATI = ((int)0x8934),
                CON_27_ATI = ((int)0x895C),
                NUM_INSTRUCTIONS_PER_PASS_ATI = ((int)0x8971),
                FRAGMENT_SHADER_ATI = ((int)0x8920),
                NUM_PASSES_ATI = ((int)0x8970),
                REG_28_ATI = ((int)0x893D),
                CON_1_ATI = ((int)0x8942),
                REG_3_ATI = ((int)0x8924),
                CON_9_ATI = ((int)0x894A),
                CON_4_ATI = ((int)0x8945),
                CON_18_ATI = ((int)0x8953),
                GL_2X_BIT_ATI = ((int)0x00000001),
                REG_27_ATI = ((int)0x893C),
                REG_22_ATI = ((int)0x8937),
                REG_21_ATI = ((int)0x8936),
                SWIZZLE_STR_DR_ATI = ((int)0x8978),
                REG_20_ATI = ((int)0x8935),
                CON_21_ATI = ((int)0x8956),
                MUL_ATI = ((int)0x8964),
                SATURATE_BIT_ATI = ((int)0x00000040),
                REG_0_ATI = ((int)0x8921),
                MOV_ATI = ((int)0x8961),
                SWIZZLE_STQ_DQ_ATI = ((int)0x8979),
                SWIZZLE_STQ_ATI = ((int)0x8977),
                SWIZZLE_STR_ATI = ((int)0x8976),
                REG_8_ATI = ((int)0x8929),
                CON_10_ATI = ((int)0x894B),
                CON_7_ATI = ((int)0x8948),
                DOT2_ADD_ATI = ((int)0x896C),
                CON_16_ATI = ((int)0x8951),
                CON_22_ATI = ((int)0x8957),
                REG_31_ATI = ((int)0x8940),
                MAD_ATI = ((int)0x8968),
                COLOR_ALPHA_PAIRING_ATI = ((int)0x8975),
                CON_24_ATI = ((int)0x8959),
                REG_30_ATI = ((int)0x893F),
                CON_13_ATI = ((int)0x894E),
                REG_1_ATI = ((int)0x8922),
                CON_15_ATI = ((int)0x8950),
                REG_18_ATI = ((int)0x8933),
                SECONDARY_INTERPOLATOR_ATI = ((int)0x896D),
                REG_9_ATI = ((int)0x892A),
                BLUE_BIT_ATI = ((int)0x00000004),
                CON_2_ATI = ((int)0x8943),
                LERP_ATI = ((int)0x8969),
                REG_17_ATI = ((int)0x8932),
                REG_12_ATI = ((int)0x892D),
                REG_11_ATI = ((int)0x892C),
                CND0_ATI = ((int)0x896B),
                REG_6_ATI = ((int)0x8927),
                REG_23_ATI = ((int)0x8938),
                CON_29_ATI = ((int)0x895E),
                SWIZZLE_STRQ_DQ_ATI = ((int)0x897B),
                NEGATE_BIT_ATI = ((int)0x00000004),
                CON_31_ATI = ((int)0x8960),
                CON_5_ATI = ((int)0x8946),
                GL_8X_BIT_ATI = ((int)0x00000004),
                CON_8_ATI = ((int)0x8949),
                COMP_BIT_ATI = ((int)0x00000002),
                REG_26_ATI = ((int)0x893B),
                CON_26_ATI = ((int)0x895B),
                REG_24_ATI = ((int)0x8939),
                BIAS_BIT_ATI = ((int)0x00000008),
                RED_BIT_ATI = ((int)0x00000001),
                CON_28_ATI = ((int)0x895D),
                CND_ATI = ((int)0x896A),
                CON_17_ATI = ((int)0x8952),
                REG_7_ATI = ((int)0x8928),
                GL_4X_BIT_ATI = ((int)0x00000002),
                CON_19_ATI = ((int)0x8954),
                EIGHTH_BIT_ATI = ((int)0x00000020),
                CON_30_ATI = ((int)0x895F),
                NUM_LOOPBACK_COMPONENTS_ATI = ((int)0x8974),
                REG_4_ATI = ((int)0x8925),
                CON_0_ATI = ((int)0x8941),
                ADD_ATI = ((int)0x8963),
                GREEN_BIT_ATI = ((int)0x00000002),
                DOT3_ATI = ((int)0x8966),
                CON_20_ATI = ((int)0x8955),
                REG_29_ATI = ((int)0x893E),
                CON_11_ATI = ((int)0x894C),
                CON_3_ATI = ((int)0x8944),
                NUM_INSTRUCTIONS_TOTAL_ATI = ((int)0x8972),
                SUB_ATI = ((int)0x8965),
                NUM_FRAGMENT_REGISTERS_ATI = ((int)0x896E),
                REG_13_ATI = ((int)0x892E),
                CON_23_ATI = ((int)0x8958),
                DOT4_ATI = ((int)0x8967),
                SWIZZLE_STRQ_ATI = ((int)0x897A),
                REG_5_ATI = ((int)0x8926),
                CON_25_ATI = ((int)0x895A),
            }
            
            public enum ATI_pn_triangles
            {
                PN_TRIANGLES_TESSELATION_LEVEL_ATI = ((int)0x87F4),
                PN_TRIANGLES_POINT_MODE_ATI = ((int)0x87F2),
                PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = ((int)0x87F8),
                PN_TRIANGLES_ATI = ((int)0x87F0),
                PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = ((int)0x87F7),
                PN_TRIANGLES_POINT_MODE_CUBIC_ATI = ((int)0x87F6),
                PN_TRIANGLES_NORMAL_MODE_ATI = ((int)0x87F3),
                MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = ((int)0x87F1),
                PN_TRIANGLES_POINT_MODE_LINEAR_ATI = ((int)0x87F5),
            }
            
            public enum ATI_vertex_array_object
            {
                ARRAY_OBJECT_BUFFER_ATI = ((int)0x8766),
                PRESERVE_ATI = ((int)0x8762),
                DISCARD_ATI = ((int)0x8763),
                STATIC_ATI = ((int)0x8760),
                ARRAY_OBJECT_OFFSET_ATI = ((int)0x8767),
                OBJECT_BUFFER_SIZE_ATI = ((int)0x8764),
                OBJECT_BUFFER_USAGE_ATI = ((int)0x8765),
                DYNAMIC_ATI = ((int)0x8761),
            }
            
            public enum EXT_vertex_shader
            {
                OP_INDEX_EXT = ((int)0x8782),
                OP_MOV_EXT = ((int)0x8799),
                OP_MULTIPLY_MATRIX_EXT = ((int)0x8798),
                VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87CF),
                VERTEX_SHADER_OPTIMIZED_EXT = ((int)0x87D4),
                OUTPUT_FOG_EXT = ((int)0x87BD),
                Y_EXT = ((int)0x87D6),
                OP_ROUND_EXT = ((int)0x8790),
                OUTPUT_TEXTURE_COORD28_EXT = ((int)0x87B9),
                INVARIANT_EXT = ((int)0x87C2),
                MAX_VERTEX_SHADER_VARIANTS_EXT = ((int)0x87C6),
                OP_POWER_EXT = ((int)0x8793),
                CURRENT_VERTEX_EXT = ((int)0x87E2),
                OUTPUT_TEXTURE_COORD1_EXT = ((int)0x879E),
                OUTPUT_TEXTURE_COORD29_EXT = ((int)0x87BA),
                LOCAL_EXT = ((int)0x87C4),
                OUTPUT_TEXTURE_COORD4_EXT = ((int)0x87A1),
                OUTPUT_TEXTURE_COORD20_EXT = ((int)0x87B1),
                VARIANT_ARRAY_POINTER_EXT = ((int)0x87E9),
                Z_EXT = ((int)0x87D7),
                VARIANT_ARRAY_STRIDE_EXT = ((int)0x87E6),
                VARIANT_VALUE_EXT = ((int)0x87E4),
                MVP_MATRIX_EXT = ((int)0x87E3),
                VERTEX_SHADER_BINDING_EXT = ((int)0x8781),
                OUTPUT_TEXTURE_COORD19_EXT = ((int)0x87B0),
                INVARIANT_VALUE_EXT = ((int)0x87EA),
                OUTPUT_TEXTURE_COORD21_EXT = ((int)0x87B2),
                MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87C8),
                OUTPUT_TEXTURE_COORD3_EXT = ((int)0x87A0),
                OUTPUT_TEXTURE_COORD10_EXT = ((int)0x87A7),
                OP_MUL_EXT = ((int)0x8786),
                NEGATIVE_ONE_EXT = ((int)0x87DF),
                OP_CROSS_PRODUCT_EXT = ((int)0x8797),
                VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87D2),
                OUTPUT_TEXTURE_COORD18_EXT = ((int)0x87AF),
                OP_NEGATE_EXT = ((int)0x8783),
                OUTPUT_TEXTURE_COORD6_EXT = ((int)0x87A3),
                VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87D1),
                OUTPUT_TEXTURE_COORD11_EXT = ((int)0x87A8),
                W_EXT = ((int)0x87D8),
                OP_SET_LT_EXT = ((int)0x878D),
                ONE_EXT = ((int)0x87DE),
                VARIANT_ARRAY_EXT = ((int)0x87E8),
                OUTPUT_COLOR1_EXT = ((int)0x879C),
                OUTPUT_TEXTURE_COORD13_EXT = ((int)0x87AA),
                OUTPUT_TEXTURE_COORD24_EXT = ((int)0x87B5),
                X_EXT = ((int)0x87D5),
                ZERO_EXT = ((int)0x87DD),
                LOCAL_CONSTANT_DATATYPE_EXT = ((int)0x87ED),
                SCALAR_EXT = ((int)0x87BE),
                OUTPUT_TEXTURE_COORD30_EXT = ((int)0x87BB),
                VARIANT_ARRAY_TYPE_EXT = ((int)0x87E7),
                VERTEX_SHADER_VARIANTS_EXT = ((int)0x87D0),
                OUTPUT_TEXTURE_COORD5_EXT = ((int)0x87A2),
                NEGATIVE_W_EXT = ((int)0x87DC),
                OUTPUT_TEXTURE_COORD25_EXT = ((int)0x87B6),
                MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87CD),
                OP_FLOOR_EXT = ((int)0x878F),
                NEGATIVE_Y_EXT = ((int)0x87DA),
                MAX_VERTEX_SHADER_INVARIANTS_EXT = ((int)0x87C7),
                OUTPUT_TEXTURE_COORD8_EXT = ((int)0x87A5),
                OP_RECIP_EXT = ((int)0x8794),
                OUTPUT_TEXTURE_COORD31_EXT = ((int)0x87BC),
                OUTPUT_TEXTURE_COORD14_EXT = ((int)0x87AB),
                NEGATIVE_X_EXT = ((int)0x87D9),
                MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87C5),
                VARIANT_DATATYPE_EXT = ((int)0x87E5),
                OUTPUT_VERTEX_EXT = ((int)0x879A),
                OP_ADD_EXT = ((int)0x8787),
                OUTPUT_TEXTURE_COORD0_EXT = ((int)0x879D),
                OUTPUT_TEXTURE_COORD15_EXT = ((int)0x87AC),
                OP_MADD_EXT = ((int)0x8788),
                OP_DOT3_EXT = ((int)0x8784),
                MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = ((int)0x87CE),
                OUTPUT_TEXTURE_COORD7_EXT = ((int)0x87A4),
                LOCAL_CONSTANT_EXT = ((int)0x87C3),
                VECTOR_EXT = ((int)0x87BF),
                VERTEX_SHADER_EXT = ((int)0x8780),
                NORMALIZED_RANGE_EXT = ((int)0x87E0),
                VARIANT_EXT = ((int)0x87C1),
                OUTPUT_TEXTURE_COORD26_EXT = ((int)0x87B7),
                OP_MAX_EXT = ((int)0x878A),
                OP_CLAMP_EXT = ((int)0x878E),
                INVARIANT_DATATYPE_EXT = ((int)0x87EB),
                MAX_VERTEX_SHADER_LOCALS_EXT = ((int)0x87C9),
                OUTPUT_TEXTURE_COORD22_EXT = ((int)0x87B3),
                OP_SET_GE_EXT = ((int)0x878C),
                OP_FRAC_EXT = ((int)0x8789),
                VERTEX_SHADER_LOCALS_EXT = ((int)0x87D3),
                MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = ((int)0x87CA),
                LOCAL_CONSTANT_VALUE_EXT = ((int)0x87EC),
                OUTPUT_TEXTURE_COORD27_EXT = ((int)0x87B8),
                NEGATIVE_Z_EXT = ((int)0x87DB),
                OP_RECIP_SQRT_EXT = ((int)0x8795),
                MATRIX_EXT = ((int)0x87C0),
                OP_EXP_BASE_2_EXT = ((int)0x8791),
                OUTPUT_TEXTURE_COORD16_EXT = ((int)0x87AD),
                OUTPUT_TEXTURE_COORD23_EXT = ((int)0x87B4),
                OUTPUT_COLOR0_EXT = ((int)0x879B),
                OP_MIN_EXT = ((int)0x878B),
                OP_DOT4_EXT = ((int)0x8785),
                OUTPUT_TEXTURE_COORD12_EXT = ((int)0x87A9),
                OP_SUB_EXT = ((int)0x8796),
                MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = ((int)0x87CB),
                MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = ((int)0x87CC),
                OUTPUT_TEXTURE_COORD2_EXT = ((int)0x879F),
                OUTPUT_TEXTURE_COORD17_EXT = ((int)0x87AE),
                OP_LOG_BASE_2_EXT = ((int)0x8792),
                OUTPUT_TEXTURE_COORD9_EXT = ((int)0x87A6),
                FULL_RANGE_EXT = ((int)0x87E1),
            }
            
            public enum ATI_vertex_streams
            {
                VERTEX_STREAM6_ATI = ((int)0x8772),
                VERTEX_STREAM1_ATI = ((int)0x876D),
                VERTEX_STREAM3_ATI = ((int)0x876F),
                MAX_VERTEX_STREAMS_ATI = ((int)0x876B),
                VERTEX_STREAM4_ATI = ((int)0x8770),
                VERTEX_STREAM0_ATI = ((int)0x876C),
                VERTEX_STREAM2_ATI = ((int)0x876E),
                VERTEX_SOURCE_ATI = ((int)0x8774),
                VERTEX_STREAM7_ATI = ((int)0x8773),
                VERTEX_STREAM5_ATI = ((int)0x8771),
            }
            
            public enum ATI_element_array
            {
                ELEMENT_ARRAY_POINTER_ATI = ((int)0x876A),
                ELEMENT_ARRAY_ATI = ((int)0x8768),
                ELEMENT_ARRAY_TYPE_ATI = ((int)0x8769),
            }
            
            public enum SUN_mesh_array
            {
                TRIANGLE_MESH_SUN = ((int)0x8615),
                QUAD_MESH_SUN = ((int)0x8614),
            }
            
            public enum SUN_slice_accum
            {
                SLICE_ACCUM_SUN = ((int)0x85CC),
            }
            
            public enum NV_multisample_filter_hint
            {
                MULTISAMPLE_FILTER_HINT_NV = ((int)0x8534),
            }
            
            public enum NV_depth_clamp
            {
                DEPTH_CLAMP_NV = ((int)0x864F),
            }
            
            public enum NV_occlusion_query
            {
                CURRENT_OCCLUSION_QUERY_ID_NV = ((int)0x8865),
                PIXEL_COUNT_NV = ((int)0x8866),
                PIXEL_COUNTER_BITS_NV = ((int)0x8864),
                PIXEL_COUNT_AVAILABLE_NV = ((int)0x8867),
            }
            
            public enum NV_point_sprite
            {
                COORD_REPLACE_NV = ((int)0x8862),
                POINT_SPRITE_R_MODE_NV = ((int)0x8863),
                POINT_SPRITE_NV = ((int)0x8861),
            }
            
            public enum NV_texture_shader3
            {
                DEPENDENT_RGB_TEXTURE_3D_NV = ((int)0x8859),
                DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = ((int)0x885D),
                SIGNED_HILO8_NV = ((int)0x885F),
                FORCE_BLUE_TO_ONE_NV = ((int)0x8860),
                OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = ((int)0x8857),
                OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = ((int)0x8853),
                DEPENDENT_HILO_TEXTURE_2D_NV = ((int)0x8858),
                HILO8_NV = ((int)0x885E),
                OFFSET_PROJECTIVE_TEXTURE_2D_NV = ((int)0x8850),
                DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = ((int)0x885A),
                OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = ((int)0x8856),
                OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = ((int)0x8851),
                OFFSET_HILO_TEXTURE_RECTANGLE_NV = ((int)0x8855),
                OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = ((int)0x8852),
                OFFSET_HILO_TEXTURE_2D_NV = ((int)0x8854),
                DOT_PRODUCT_PASS_THROUGH_NV = ((int)0x885B),
                DOT_PRODUCT_TEXTURE_1D_NV = ((int)0x885C),
            }
            
            public enum NV_vertex_program1_1
            {
            }
            
            public enum EXT_shadow_funcs
            {
            }
            
            public enum EXT_stencil_two_side
            {
                ACTIVE_STENCIL_FACE_EXT = ((int)0x8911),
                STENCIL_TEST_TWO_SIDE_EXT = ((int)0x8910),
            }
            
            public enum ATI_text_fragment_shader
            {
                TEXT_FRAGMENT_SHADER_ATI = ((int)0x8200),
            }
            
            public enum APPLE_client_storage
            {
                UNPACK_CLIENT_STORAGE_APPLE = ((int)0x85B2),
            }
            
            public enum APPLE_element_array
            {
                ELEMENT_ARRAY_POINTER_APPLE = ((int)0x876A),
                ELEMENT_ARRAY_APPLE = ((int)0x8768),
                ELEMENT_ARRAY_TYPE_APPLE = ((int)0x8769),
            }
            
            public enum APPLE_fence
            {
                DRAW_PIXELS_APPLE = ((int)0x8A0A),
                FENCE_APPLE = ((int)0x8A0B),
            }
            
            public enum APPLE_vertex_array_object
            {
                VERTEX_ARRAY_BINDING_APPLE = ((int)0x85B5),
            }
            
            public enum APPLE_vertex_array_range
            {
                STORAGE_SHARED_APPLE = ((int)0x85BF),
                VERTEX_ARRAY_RANGE_APPLE = ((int)0x851D),
                VERTEX_ARRAY_STORAGE_HINT_APPLE = ((int)0x851F),
                VERTEX_ARRAY_RANGE_LENGTH_APPLE = ((int)0x851E),
                VERTEX_ARRAY_RANGE_POINTER_APPLE = ((int)0x8521),
                STORAGE_CACHED_APPLE = ((int)0x85BE),
            }
            
            public enum APPLE_ycbcr_422
            {
                UNSIGNED_SHORT_8_8_REV_APPLE = ((int)0x85BB),
                YCBCR_422_APPLE = ((int)0x85B9),
                UNSIGNED_SHORT_8_8_APPLE = ((int)0x85BA),
            }
            
            public enum S3_s3tc
            {
                RGB4_S3TC = ((int)0x83A1),
                RGBA_S3TC = ((int)0x83A2),
                RGB_S3TC = ((int)0x83A0),
                RGBA4_S3TC = ((int)0x83A3),
            }
            
            public enum ATI_draw_buffers
            {
                DRAW_BUFFER9_ATI = ((int)0x882E),
                DRAW_BUFFER10_ATI = ((int)0x882F),
                DRAW_BUFFER6_ATI = ((int)0x882B),
                DRAW_BUFFER4_ATI = ((int)0x8829),
                DRAW_BUFFER14_ATI = ((int)0x8833),
                DRAW_BUFFER3_ATI = ((int)0x8828),
                DRAW_BUFFER5_ATI = ((int)0x882A),
                DRAW_BUFFER0_ATI = ((int)0x8825),
                DRAW_BUFFER12_ATI = ((int)0x8831),
                DRAW_BUFFER11_ATI = ((int)0x8830),
                DRAW_BUFFER8_ATI = ((int)0x882D),
                DRAW_BUFFER15_ATI = ((int)0x8834),
                DRAW_BUFFER7_ATI = ((int)0x882C),
                DRAW_BUFFER13_ATI = ((int)0x8832),
                DRAW_BUFFER2_ATI = ((int)0x8827),
                DRAW_BUFFER1_ATI = ((int)0x8826),
                MAX_DRAW_BUFFERS_ATI = ((int)0x8824),
            }
            
            public enum ATI_pixel_format_float
            {
                COLOR_CLEAR_UNCLAMPED_VALUE_ATI = ((int)0x8835),
                TYPE_RGBA_FLOAT_ATI = ((int)0x8820),
            }
            
            public enum ATI_texture_env_combine3
            {
                MODULATE_ADD_ATI = ((int)0x8744),
                MODULATE_SIGNED_ADD_ATI = ((int)0x8745),
                MODULATE_SUBTRACT_ATI = ((int)0x8746),
            }
            
            public enum ATI_texture_float
            {
                ALPHA_FLOAT32_ATI = ((int)0x8816),
                INTENSITY_FLOAT32_ATI = ((int)0x8817),
                LUMINANCE_FLOAT32_ATI = ((int)0x8818),
                LUMINANCE_ALPHA_FLOAT16_ATI = ((int)0x881F),
                ALPHA_FLOAT16_ATI = ((int)0x881C),
                LUMINANCE_ALPHA_FLOAT32_ATI = ((int)0x8819),
                RGBA_FLOAT16_ATI = ((int)0x881A),
                RGBA_FLOAT32_ATI = ((int)0x8814),
                LUMINANCE_FLOAT16_ATI = ((int)0x881E),
                RGB_FLOAT32_ATI = ((int)0x8815),
                INTENSITY_FLOAT16_ATI = ((int)0x881D),
                RGB_FLOAT16_ATI = ((int)0x881B),
            }
            
            public enum NV_float_buffer
            {
                FLOAT_R16_NV = ((int)0x8884),
                FLOAT_RG_NV = ((int)0x8881),
                FLOAT_RGB_NV = ((int)0x8882),
                FLOAT_R32_NV = ((int)0x8885),
                FLOAT_RG16_NV = ((int)0x8886),
                FLOAT_R_NV = ((int)0x8880),
                FLOAT_CLEAR_COLOR_VALUE_NV = ((int)0x888D),
                FLOAT_RGB32_NV = ((int)0x8889),
                FLOAT_RGBA_MODE_NV = ((int)0x888E),
                TEXTURE_FLOAT_COMPONENTS_NV = ((int)0x888C),
                FLOAT_RGBA_NV = ((int)0x8883),
                FLOAT_RGBA16_NV = ((int)0x888A),
                FLOAT_RGBA32_NV = ((int)0x888B),
                FLOAT_RGB16_NV = ((int)0x8888),
                FLOAT_RG32_NV = ((int)0x8887),
            }
            
            public enum NV_fragment_program
            {
                FRAGMENT_PROGRAM_NV = ((int)0x8870),
                MAX_TEXTURE_IMAGE_UNITS_NV = ((int)0x8872),
                PROGRAM_ERROR_STRING_NV = ((int)0x8874),
                MAX_TEXTURE_COORDS_NV = ((int)0x8871),
                FRAGMENT_PROGRAM_BINDING_NV = ((int)0x8873),
                MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = ((int)0x8868),
            }
            
            public enum NV_half_float
            {
                HALF_FLOAT_NV = ((int)0x140B),
            }
            
            public enum NV_pixel_data_range
            {
                READ_PIXEL_DATA_RANGE_LENGTH_NV = ((int)0x887B),
                WRITE_PIXEL_DATA_RANGE_NV = ((int)0x8878),
                WRITE_PIXEL_DATA_RANGE_POINTER_NV = ((int)0x887C),
                READ_PIXEL_DATA_RANGE_POINTER_NV = ((int)0x887D),
                WRITE_PIXEL_DATA_RANGE_LENGTH_NV = ((int)0x887A),
                READ_PIXEL_DATA_RANGE_NV = ((int)0x8879),
            }
            
            public enum NV_primitive_restart
            {
                PRIMITIVE_RESTART_NV = ((int)0x8558),
                PRIMITIVE_RESTART_INDEX_NV = ((int)0x8559),
            }
            
            public enum NV_texture_expand_normal
            {
                TEXTURE_UNSIGNED_REMAP_MODE_NV = ((int)0x888F),
            }
            
            public enum NV_vertex_program2
            {
            }
            
            public enum ATI_map_object_buffer
            {
            }
            
            public enum ATI_separate_stencil
            {
                STENCIL_BACK_PASS_DEPTH_FAIL_ATI = ((int)0x8802),
                STENCIL_BACK_PASS_DEPTH_PASS_ATI = ((int)0x8803),
                STENCIL_BACK_FAIL_ATI = ((int)0x8801),
                STENCIL_BACK_FUNC_ATI = ((int)0x8800),
            }
            
            public enum ATI_vertex_attrib_array_object
            {
            }
            
            public enum OES_read_format
            {
                IMPLEMENTATION_COLOR_READ_TYPE_OES = ((int)0x8B9A),
                IMPLEMENTATION_COLOR_READ_FORMAT_OES = ((int)0x8B9B),
            }
            
            public enum EXT_depth_bounds_test
            {
                DEPTH_BOUNDS_EXT = ((int)0x8891),
                DEPTH_BOUNDS_TEST_EXT = ((int)0x8890),
            }
            
            public enum EXT_texture_mirror_clamp
            {
                MIRROR_CLAMP_TO_BORDER_EXT = ((int)0x8912),
                MIRROR_CLAMP_TO_EDGE_EXT = ((int)0x8743),
                MIRROR_CLAMP_EXT = ((int)0x8742),
            }
            
            public enum EXT_blend_equation_separate
            {
                BLEND_EQUATION_RGB_EXT = ((int)ARB_imaging.BLEND_EQUATION),
                BLEND_EQUATION_ALPHA_EXT = ((int)0x883D),
            }
            
            public enum MESA_pack_invert
            {
                PACK_INVERT_MESA = ((int)0x8758),
            }
            
            public enum MESA_ycbcr_texture
            {
                UNSIGNED_SHORT_8_8_REV_MESA = ((int)0x85BB),
                YCBCR_MESA = ((int)0x8757),
                UNSIGNED_SHORT_8_8_MESA = ((int)0x85BA),
            }
            
            public enum EXT_pixel_buffer_object
            {
                PIXEL_UNPACK_BUFFER_EXT = ((int)0x88EC),
                PIXEL_PACK_BUFFER_EXT = ((int)0x88EB),
                PIXEL_UNPACK_BUFFER_BINDING_EXT = ((int)0x88EF),
                PIXEL_PACK_BUFFER_BINDING_EXT = ((int)0x88ED),
            }
            
            public enum NV_fragment_program_option
            {
            }
            
            public enum NV_fragment_program2
            {
                MAX_PROGRAM_IF_DEPTH_NV = ((int)0x88F6),
                MAX_PROGRAM_LOOP_DEPTH_NV = ((int)0x88F7),
                MAX_PROGRAM_CALL_DEPTH_NV = ((int)0x88F5),
                MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = ((int)0x88F4),
                MAX_PROGRAM_LOOP_COUNT_NV = ((int)0x88F8),
            }
            
            public enum NV_vertex_program2_option
            {
                MAX_PROGRAM_CALL_DEPTH_NV = ((int)NV_fragment_program2.MAX_PROGRAM_CALL_DEPTH_NV),
                MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = ((int)NV_fragment_program2.MAX_PROGRAM_EXEC_INSTRUCTIONS_NV),
            }
            
            public enum NV_vertex_program3
            {
                MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = ((int)ARB_vertex_shader.MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB),
            }
            
            public enum EXT_framebuffer_object
            {
                FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = ((int)0x8CDC),
                COLOR_ATTACHMENT3_EXT = ((int)0x8CE3),
                COLOR_ATTACHMENT1_EXT = ((int)0x8CE1),
                FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = ((int)0x8CD0),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = ((int)0x8CD4),
                RENDERBUFFER_EXT = ((int)0x8D41),
                COLOR_ATTACHMENT15_EXT = ((int)0x8CEF),
                COLOR_ATTACHMENT13_EXT = ((int)0x8CED),
                RENDERBUFFER_HEIGHT_EXT = ((int)0x8D43),
                COLOR_ATTACHMENT14_EXT = ((int)0x8CEE),
                COLOR_ATTACHMENT12_EXT = ((int)0x8CEC),
                RENDERBUFFER_INTERNAL_FORMAT_EXT = ((int)0x8D44),
                RENDERBUFFER_ALPHA_SIZE_EXT = ((int)0x8D53),
                FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = ((int)0x8CD9),
                STENCIL_INDEX4_EXT = ((int)0x8D47),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = ((int)0x8CD2),
                COLOR_ATTACHMENT6_EXT = ((int)0x8CE6),
                FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = ((int)0x8CD7),
                FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = ((int)0x8CDA),
                FRAMEBUFFER_BINDING_EXT = ((int)0x8CA6),
                COLOR_ATTACHMENT8_EXT = ((int)0x8CE8),
                FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = ((int)0x8CD6),
                COLOR_ATTACHMENT2_EXT = ((int)0x8CE2),
                COLOR_ATTACHMENT9_EXT = ((int)0x8CE9),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = ((int)0x8CD3),
                FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = ((int)0x8CDB),
                MAX_COLOR_ATTACHMENTS_EXT = ((int)0x8CDF),
                RENDERBUFFER_GREEN_SIZE_EXT = ((int)0x8D51),
                STENCIL_INDEX8_EXT = ((int)0x8D48),
                COLOR_ATTACHMENT7_EXT = ((int)0x8CE7),
                MAX_RENDERBUFFER_SIZE_EXT = ((int)0x84E8),
                STENCIL_INDEX1_EXT = ((int)0x8D46),
                DEPTH_ATTACHMENT_EXT = ((int)0x8D00),
                COLOR_ATTACHMENT0_EXT = ((int)0x8CE0),
                INVALID_FRAMEBUFFER_OPERATION_EXT = ((int)0x0506),
                RENDERBUFFER_BLUE_SIZE_EXT = ((int)0x8D52),
                FRAMEBUFFER_EXT = ((int)0x8D40),
                RENDERBUFFER_WIDTH_EXT = ((int)0x8D42),
                STENCIL_INDEX16_EXT = ((int)0x8D49),
                RENDERBUFFER_DEPTH_SIZE_EXT = ((int)0x8D54),
                COLOR_ATTACHMENT5_EXT = ((int)0x8CE5),
                FRAMEBUFFER_UNSUPPORTED_EXT = ((int)0x8CDD),
                RENDERBUFFER_RED_SIZE_EXT = ((int)0x8D50),
                COLOR_ATTACHMENT11_EXT = ((int)0x8CEB),
                FRAMEBUFFER_COMPLETE_EXT = ((int)0x8CD5),
                COLOR_ATTACHMENT4_EXT = ((int)0x8CE4),
                COLOR_ATTACHMENT10_EXT = ((int)0x8CEA),
                RENDERBUFFER_BINDING_EXT = ((int)0x8CA7),
                RENDERBUFFER_STENCIL_SIZE_EXT = ((int)0x8D55),
                FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = ((int)0x8CD1),
                STENCIL_ATTACHMENT_EXT = ((int)0x8D20),
            }
            
            public enum GREMEDY_string_marker
            {
            }
            
            public enum EXT_packed_depth_stencil
            {
                DEPTH_STENCIL_EXT = ((int)0x84F9),
                TEXTURE_STENCIL_SIZE_EXT = ((int)0x88F1),
                UNSIGNED_INT_24_8_EXT = ((int)0x84FA),
                DEPTH24_STENCIL8_EXT = ((int)0x88F0),
            }
            
            public enum EXT_stencil_clear_tag
            {
                STENCIL_CLEAR_TAG_VALUE_EXT = ((int)0x88F3),
                STENCIL_TAG_BITS_EXT = ((int)0x88F2),
            }
            
            public enum EXT_texture_sRGB
            {
                COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = ((int)0x8C4F),
                SRGB8_EXT = ((int)0x8C41),
                SLUMINANCE8_ALPHA8_EXT = ((int)0x8C45),
                COMPRESSED_SRGB_ALPHA_EXT = ((int)0x8C49),
                SLUMINANCE_EXT = ((int)0x8C46),
                COMPRESSED_SRGB_S3TC_DXT1_EXT = ((int)0x8C4C),
                SLUMINANCE_ALPHA_EXT = ((int)0x8C44),
                COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = ((int)0x8C4D),
                SRGB8_ALPHA8_EXT = ((int)0x8C43),
                SRGB_ALPHA_EXT = ((int)0x8C42),
                SRGB_EXT = ((int)0x8C40),
                COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = ((int)0x8C4E),
                SLUMINANCE8_EXT = ((int)0x8C47),
                COMPRESSED_SLUMINANCE_ALPHA_EXT = ((int)0x8C4B),
                COMPRESSED_SRGB_EXT = ((int)0x8C48),
                COMPRESSED_SLUMINANCE_EXT = ((int)0x8C4A),
            }
            
            public enum EXT_framebuffer_blit
            {
                DRAW_FRAMEBUFFER_BINDING_EXT = ((int)0x8CAA),
                READ_FRAMEBUFFER_BINDING_EXT = ((int)EXT_framebuffer_object.FRAMEBUFFER_BINDING_EXT),
                READ_FRAMEBUFFER_EXT = ((int)0x8CA8),
                DRAW_FRAMEBUFFER_EXT = ((int)0x8CA9),
            }
            
            public enum EXT_framebuffer_multisample
            {
                RENDERBUFFER_SAMPLES_EXT = ((int)0x8CAB),
                FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = ((int)0x8D56),
                MAX_SAMPLES_EXT = ((int)0x8D57),
            }
            
            public enum MESAX_texture_stack
            {
                TEXTURE_1D_STACK_MESAX = ((int)0x8759),
                PROXY_TEXTURE_2D_STACK_MESAX = ((int)0x875C),
                TEXTURE_2D_STACK_MESAX = ((int)0x875A),
                TEXTURE_1D_STACK_BINDING_MESAX = ((int)0x875D),
                PROXY_TEXTURE_1D_STACK_MESAX = ((int)0x875B),
                TEXTURE_2D_STACK_BINDING_MESAX = ((int)0x875E),
            }
            
            public enum EXT_timer_query
            {
                TIME_ELAPSED_EXT = ((int)0x88BF),
            }
            
            public enum EXT_gpu_program_parameters
            {
            }
            
            public enum APPLE_flush_buffer_range
            {
                BUFFER_FLUSHING_UNMAP_APPLE = ((int)0x8A13),
                BUFFER_SERIALIZED_MODIFY_APPLE = ((int)0x8A12),
            }
            
            public enum NV_gpu_program4
            {
                MAX_PROGRAM_RESULT_COMPONENTS_NV = ((int)0x8909),
                PROGRAM_ATTRIB_COMPONENTS_NV = ((int)0x8906),
                MAX_PROGRAM_ATTRIB_COMPONENTS_NV = ((int)0x8908),
                MAX_PROGRAM_GENERIC_ATTRIBS_NV = ((int)0x8DA5),
                PROGRAM_RESULT_COMPONENTS_NV = ((int)0x8907),
                MIN_PROGRAM_TEXEL_OFFSET_NV = ((int)0x8904),
                MAX_PROGRAM_GENERIC_RESULTS_NV = ((int)0x8DA6),
                MAX_PROGRAM_TEXEL_OFFSET_NV = ((int)0x8905),
            }
            
            public enum NV_geometry_program4
            {
                GEOMETRY_PROGRAM_NV = ((int)0x8C26),
                FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = ((int)0x8DA8),
                LINES_ADJACENCY_EXT = ((int)0x000A),
                MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = ((int)0x8C29),
                MAX_PROGRAM_OUTPUT_VERTICES_NV = ((int)0x8C27),
                LINE_STRIP_ADJACENCY_EXT = ((int)0x000B),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = ((int)0x8CD4),
                FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = ((int)0x8DA9),
                GEOMETRY_INPUT_TYPE_EXT = ((int)0x8DDB),
                TRIANGLE_STRIP_ADJACENCY_EXT = ((int)0x000D),
                TRIANGLES_ADJACENCY_EXT = ((int)0x000C),
                GEOMETRY_OUTPUT_TYPE_EXT = ((int)0x8DDC),
                MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = ((int)0x8C28),
                PROGRAM_POINT_SIZE_EXT = ((int)0x8642),
                GEOMETRY_VERTICES_OUT_EXT = ((int)0x8DDA),
                FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = ((int)0x8DA7),
            }
            
            public enum EXT_geometry_shader4
            {
                MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = ((int)0x8DE1),
                MAX_GEOMETRY_OUTPUT_VERTICES_EXT = ((int)0x8DE0),
                FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = ((int)NV_geometry_program4.FRAMEBUFFER_ATTACHMENT_LAYERED_EXT),
                FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = ((int)NV_geometry_program4.FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT),
                GEOMETRY_INPUT_TYPE_EXT = ((int)NV_geometry_program4.GEOMETRY_INPUT_TYPE_EXT),
                LINES_ADJACENCY_EXT = ((int)NV_geometry_program4.LINES_ADJACENCY_EXT),
                GEOMETRY_VERTICES_OUT_EXT = ((int)NV_geometry_program4.GEOMETRY_VERTICES_OUT_EXT),
                GEOMETRY_SHADER_EXT = ((int)0x8DD9),
                MAX_VARYING_COMPONENTS_EXT = ((int)0x8B4B),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = ((int)NV_geometry_program4.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT),
                MAX_VERTEX_VARYING_COMPONENTS_EXT = ((int)0x8DDE),
                FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = ((int)NV_geometry_program4.FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT),
                TRIANGLE_STRIP_ADJACENCY_EXT = ((int)NV_geometry_program4.TRIANGLE_STRIP_ADJACENCY_EXT),
                PROGRAM_POINT_SIZE_EXT = ((int)NV_geometry_program4.PROGRAM_POINT_SIZE_EXT),
                MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = ((int)0x8DDF),
                LINE_STRIP_ADJACENCY_EXT = ((int)NV_geometry_program4.LINE_STRIP_ADJACENCY_EXT),
                MAX_GEOMETRY_VARYING_COMPONENTS_EXT = ((int)0x8DDD),
                GEOMETRY_OUTPUT_TYPE_EXT = ((int)NV_geometry_program4.GEOMETRY_OUTPUT_TYPE_EXT),
                MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = ((int)NV_geometry_program4.MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT),
                TRIANGLES_ADJACENCY_EXT = ((int)NV_geometry_program4.TRIANGLES_ADJACENCY_EXT),
            }
            
            public enum NV_vertex_program4
            {
                VERTEX_ATTRIB_ARRAY_INTEGER_NV = ((int)0x88FD),
            }
            
            public enum EXT_gpu_shader4
            {
                SAMPLER_1D_ARRAY_SHADOW_EXT = ((int)0x8DC3),
                UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = ((int)0x8DD6),
                INT_SAMPLER_2D_EXT = ((int)0x8DCA),
                INT_SAMPLER_3D_EXT = ((int)0x8DCB),
                UNSIGNED_INT_VEC4_EXT = ((int)0x8DC8),
                UNSIGNED_INT_SAMPLER_CUBE_EXT = ((int)0x8DD4),
                INT_SAMPLER_2D_ARRAY_EXT = ((int)0x8DCF),
                SAMPLER_2D_ARRAY_SHADOW_EXT = ((int)0x8DC4),
                UNSIGNED_INT_SAMPLER_2D_RECT_EXT = ((int)0x8DD5),
                INT_SAMPLER_1D_ARRAY_EXT = ((int)0x8DCE),
                INT_SAMPLER_2D_RECT_EXT = ((int)0x8DCD),
                SAMPLER_2D_ARRAY_EXT = ((int)0x8DC1),
                UNSIGNED_INT_VEC2_EXT = ((int)0x8DC6),
                UNSIGNED_INT_VEC3_EXT = ((int)0x8DC7),
                UNSIGNED_INT_SAMPLER_3D_EXT = ((int)0x8DD3),
                SAMPLER_CUBE_SHADOW_EXT = ((int)0x8DC5),
                UNSIGNED_INT_SAMPLER_BUFFER_EXT = ((int)0x8DD8),
                UNSIGNED_INT_SAMPLER_1D_EXT = ((int)0x8DD1),
                INT_SAMPLER_1D_EXT = ((int)0x8DC9),
                INT_SAMPLER_CUBE_EXT = ((int)0x8DCC),
                UNSIGNED_INT_SAMPLER_2D_EXT = ((int)0x8DD2),
                SAMPLER_1D_ARRAY_EXT = ((int)0x8DC0),
                SAMPLER_BUFFER_EXT = ((int)0x8DC2),
                INT_SAMPLER_BUFFER_EXT = ((int)0x8DD0),
                UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = ((int)0x8DD7),
            }
            
            public enum EXT_draw_instanced
            {
            }
            
            public enum EXT_packed_float
            {
                R11F_G11F_B10F_EXT = ((int)0x8C3A),
                RGBA_SIGNED_COMPONENTS_EXT = ((int)0x8C3C),
                UNSIGNED_INT_10F_11F_11F_REV_EXT = ((int)0x8C3B),
            }
            
            public enum EXT_texture_array
            {
                TEXTURE_1D_ARRAY_EXT = ((int)0x8C18),
                PROXY_TEXTURE_1D_ARRAY_EXT = ((int)0x8C19),
                TEXTURE_BINDING_2D_ARRAY_EXT = ((int)0x8C1D),
                TEXTURE_BINDING_1D_ARRAY_EXT = ((int)0x8C1C),
                MAX_ARRAY_TEXTURE_LAYERS_EXT = ((int)0x88FF),
                COMPARE_REF_DEPTH_TO_TEXTURE_EXT = ((int)0x884E),
                PROXY_TEXTURE_2D_ARRAY_EXT = ((int)0x8C1B),
                TEXTURE_2D_ARRAY_EXT = ((int)0x8C1A),
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = ((int)NV_geometry_program4.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT),
            }
            
            public enum EXT_texture_buffer_object
            {
                MAX_TEXTURE_BUFFER_SIZE_EXT = ((int)0x8C2B),
                TEXTURE_BUFFER_FORMAT_EXT = ((int)0x8C2E),
                TEXTURE_BUFFER_EXT = ((int)0x8C2A),
                TEXTURE_BINDING_BUFFER_EXT = ((int)0x8C2C),
                TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = ((int)0x8C2D),
            }
            
            public enum EXT_texture_compression_latc
            {
                COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = ((int)0x8C72),
                COMPRESSED_LUMINANCE_LATC1_EXT = ((int)0x8C70),
                COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = ((int)0x8C71),
                COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = ((int)0x8C73),
            }
            
            public enum EXT_texture_compression_rgtc
            {
                COMPRESSED_RED_GREEN_RGTC2_EXT = ((int)0x8DBD),
                COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = ((int)0x8DBE),
                COMPRESSED_RED_RGTC1_EXT = ((int)0x8DBB),
                COMPRESSED_SIGNED_RED_RGTC1_EXT = ((int)0x8DBC),
            }
            
            public enum EXT_texture_shared_exponent
            {
                TEXTURE_SHARED_SIZE_EXT = ((int)0x8C3F),
                RGB9_E5_EXT = ((int)0x8C3D),
                UNSIGNED_INT_5_9_9_9_REV_EXT = ((int)0x8C3E),
            }
            
            public enum NV_depth_buffer_float
            {
                DEPTH_BUFFER_FLOAT_MODE_NV = ((int)0x8DAF),
                DEPTH_COMPONENT32F_NV = ((int)0x8DAB),
                FLOAT_32_UNSIGNED_INT_24_8_REV_NV = ((int)0x8DAD),
                DEPTH32F_STENCIL8_NV = ((int)0x8DAC),
            }
            
            public enum NV_fragment_program4
            {
            }
            
            public enum NV_framebuffer_multisample_coverage
            {
                RENDERBUFFER_COLOR_SAMPLES_NV = ((int)0x8E10),
                MULTISAMPLE_COVERAGE_MODES_NV = ((int)0x8E12),
                RENDERBUFFER_COVERAGE_SAMPLES_NV = ((int)0x8CAB),
                MAX_MULTISAMPLE_COVERAGE_MODES_NV = ((int)0x8E11),
            }
            
            public enum EXT_framebuffer_sRGB
            {
                FRAMEBUFFER_SRGB_EXT = ((int)0x8DB9),
                FRAMEBUFFER_SRGB_CAPABLE_EXT = ((int)0x8DBA),
            }
            
            public enum NV_geometry_shader4
            {
            }
            
            public enum NV_parameter_buffer_object
            {
                MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = ((int)0x8DA0),
                GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA3),
                MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = ((int)0x8DA1),
                FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA4),
                VERTEX_PROGRAM_PARAMETER_BUFFER_NV = ((int)0x8DA2),
            }
            
            public enum EXT_draw_buffers2
            {
            }
            
            public enum NV_transform_feedback
            {
                TEXTURE_COORD_NV = ((int)0x8C79),
                BACK_PRIMARY_COLOR_NV = ((int)0x8C77),
                PRIMITIVES_GENERATED_NV = ((int)0x8C87),
                TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = ((int)0x8C8F),
                ACTIVE_VARYINGS_NV = ((int)0x8C81),
                BACK_SECONDARY_COLOR_NV = ((int)0x8C78),
                TRANSFORM_FEEDBACK_VARYINGS_NV = ((int)0x8C83),
                RASTERIZER_DISCARD_NV = ((int)0x8C89),
                SEPARATE_ATTRIBS_NV = ((int)0x8C8D),
                ACTIVE_VARYING_MAX_LENGTH_NV = ((int)0x8C82),
                MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = ((int)0x8C80),
                CLIP_DISTANCE_NV = ((int)0x8C7A),
                MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV = ((int)0x8C8A),
                TRANSFORM_FEEDBACK_RECORD_NV = ((int)0x8C86),
                TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = ((int)0x8C88),
                TRANSFORM_FEEDBACK_BUFFER_START_NV = ((int)0x8C84),
                TRANSFORM_FEEDBACK_BUFFER_MODE_NV = ((int)0x8C7F),
                MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = ((int)0x8C8B),
                GENERIC_ATTRIB_NV = ((int)0x8C7D),
                TRANSFORM_FEEDBACK_BUFFER_NV = ((int)0x8C8E),
                TRANSFORM_FEEDBACK_ATTRIBS_NV = ((int)0x8C7E),
                VERTEX_ID_NV = ((int)0x8C7B),
                TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = ((int)0x8C85),
                PRIMITIVE_ID_NV = ((int)0x8C7C),
                INTERLEAVED_ATTRIBS_NV = ((int)0x8C8C),
            }
            
            public enum EXT_bindable_uniform
            {
                MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = ((int)0x8DE4),
                MAX_BINDABLE_UNIFORM_SIZE_EXT = ((int)0x8DED),
                MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = ((int)0x8DE3),
                UNIFORM_BUFFER_EXT = ((int)0x8DEE),
                UNIFORM_BUFFER_BINDING_EXT = ((int)0x8DEF),
                MAX_VERTEX_BINDABLE_UNIFORMS_EXT = ((int)0x8DE2),
            }
            
            public enum EXT_texture_integer
            {
                RED_INTEGER_EXT = ((int)0x8D94),
                ALPHA16UI_EXT = ((int)0x8D78),
                LUMINANCE16I_EXT = ((int)0x8D8C),
                LUMINANCE_ALPHA_INTEGER_EXT = ((int)0x8D9D),
                LUMINANCE32I_EXT = ((int)0x8D86),
                RGBA16UI_EXT = ((int)0x8D76),
                RGB32UI_EXT = ((int)0x8D71),
                ALPHA32UI_EXT = ((int)0x8D72),
                RGBA32I_EXT = ((int)0x8D82),
                BLUE_INTEGER_EXT = ((int)0x8D96),
                LUMINANCE_ALPHA16I_EXT = ((int)0x8D8D),
                RGB8I_EXT = ((int)0x8D8F),
                INTENSITY16I_EXT = ((int)0x8D8B),
                ALPHA32I_EXT = ((int)0x8D84),
                RGB32I_EXT = ((int)0x8D83),
                RGB8UI_EXT = ((int)0x8D7D),
                LUMINANCE32UI_EXT = ((int)0x8D74),
                LUMINANCE16UI_EXT = ((int)0x8D7A),
                RGB16I_EXT = ((int)0x8D89),
                LUMINANCE8UI_EXT = ((int)0x8D80),
                INTENSITY16UI_EXT = ((int)0x8D79),
                LUMINANCE_ALPHA8UI_EXT = ((int)0x8D81),
                RGBA16I_EXT = ((int)0x8D88),
                BGRA_INTEGER_EXT = ((int)0x8D9B),
                LUMINANCE_ALPHA8I_EXT = ((int)0x8D93),
                RGBA8I_EXT = ((int)0x8D8E),
                LUMINANCE_INTEGER_EXT = ((int)0x8D9C),
                BGR_INTEGER_EXT = ((int)0x8D9A),
                GREEN_INTEGER_EXT = ((int)0x8D95),
                ALPHA8UI_EXT = ((int)0x8D7E),
                LUMINANCE8I_EXT = ((int)0x8D92),
                ALPHA8I_EXT = ((int)0x8D90),
                RGBA32UI_EXT = ((int)0x8D70),
                RGBA_INTEGER_MODE_EXT = ((int)0x8D9E),
                RGB_INTEGER_EXT = ((int)0x8D98),
                LUMINANCE_ALPHA32I_EXT = ((int)0x8D87),
                ALPHA16I_EXT = ((int)0x8D8A),
                INTENSITY32UI_EXT = ((int)0x8D73),
                RGBA8UI_EXT = ((int)0x8D7C),
                RGB16UI_EXT = ((int)0x8D77),
                RGBA_INTEGER_EXT = ((int)0x8D99),
                INTENSITY8I_EXT = ((int)0x8D91),
                ALPHA_INTEGER_EXT = ((int)0x8D97),
                LUMINANCE_ALPHA32UI_EXT = ((int)0x8D75),
                INTENSITY32I_EXT = ((int)0x8D85),
                INTENSITY8UI_EXT = ((int)0x8D7F),
                LUMINANCE_ALPHA16UI_EXT = ((int)0x8D7B),
            }
            
            public enum SGIX_icc_texture
            {
                RGBA_ICC_SGIX = ((int)0x8461),
                INTENSITY_ICC_SGIX = ((int)0x8464),
                ALPHA_ICC_SGIX = ((int)0x8462),
                LUMINANCE_ICC_SGIX = ((int)0x8463),
                LUMINANCE16_ICC_SGIX = ((int)0x8469),
                R5_G6_B5_ICC_SGIX = ((int)0x8466),
                ALPHA16_ICC_SGIX = ((int)0x8468),
                INTENSITY16_ICC_SGIX = ((int)0x846A),
                RGB_ICC_SGIX = ((int)0x8460),
                LUMINANCE_ALPHA_ICC_SGIX = ((int)0x8465),
                R5_G6_B5_A8_ICC_SGIX = ((int)0x8467),
                LUMINANCE16_ALPHA8_ICC_SGIX = ((int)0x846B),
            }
            
        }
    }
}
